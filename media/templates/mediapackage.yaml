AWSTemplateFormatVersion: 2010-09-09
Description: aws-cloudformation-templates/media/mediapackage sets Elemental MediaPackage.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: 'MediaPackage Configuration'
        Parameters: 
          - ArchiveBucket
          - ManifestName
          - OutputType
          - StartoverWindowSeconds
          - SegmentDurationSeconds
          - VodSourceBucket
      - Label: 
          default: 'Tag Configuration'
        Parameters: 
          - LogicalName
          - Environment
          - TagKey
          - TagValue

Parameters:
  ArchiveBucket:
    Type: String
    Default: ''
    Description: The S3 bucket Name LIVE-to-VOD contents are stored.
  ManifestName:
    Type: String
    Default: index
    Description: A short string that's appended to the end of the endpoint URL to create a unique path to this endpoint [required]
  OutputType:
    Type: String
    AllowedValues:
      - APPLE_HLS
      - ISO_DASH
      - ALL  
    Default: APPLE_HLS
    Description: Output type [required] 
  StartoverWindowSeconds:
    Type: Number
    Default: 0
    Description: Maximum duration seconds of content to retain for startover playback [required]
    MinValue: 0
  SegmentDurationSeconds:
    Type: String
    Default: 3
    Description: Duration (in seconds) of each fragment [required]
  VodSourceBucket:
    Type: String
    Default: ''
    Description: The S3 bucket Name VOD contents exist.
  LogicalName:
    Type: String
    Default: MediaPackage
    AllowedPattern: .+
    Description: The custom prefix name [required]
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates 
    AllowedPattern: .+

Conditions:
  CreateVODWorkflow: !Not [ !Equals [ !Ref VodSourceBucket, '' ] ]
  CreateLiveToVODWorkflow: !Not [ !Equals [ !Ref ArchiveBucket, '' ] ]
  CreateHlsEndPoint: !Or [ !Equals [ !Ref OutputType, APPLE_HLS ], !Equals [ !Ref OutputType, ALL ] ]
  CreateDashEndPoint: !Or [ !Equals [ !Ref OutputType, ISO_DASH ], !Equals [ !Ref OutputType, ALL ] ]
  CreateHlsVODWorkflow: !And [ !Not [ !Equals [ !Ref VodSourceBucket, '' ] ], !Or [ !Equals [ !Ref OutputType, APPLE_HLS ], !Equals [ !Ref OutputType, ALL ] ] ]
  CreateDashVODWorkflow: !And [ !Not [ !Equals [ !Ref VodSourceBucket, '' ] ], !Or [ !Equals [ !Ref OutputType, ISO_DASH ], !Equals [ !Ref OutputType, ALL ] ] ]

Resources:
  # IAM Role
  IAMRoleForMediaPackage:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: mediapackage.amazonaws.com
            Action: sts:AssumeRole
      Description: A role required for MediaPackage to access S3.
      Policies:
        # Allow MediaPackage to access S3 for VOD workflows.
        - !If
          - CreateVODWorkflow
          - PolicyName: S3Read
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - s3:GetObject
                    - s3:GetBucketLocation
                    - s3:GetBucketRequestPayment
                    - s3:ListBucket
                  Resource:
                    - !Sub 'arn:aws:s3:::${VodSourceBucket}/*'
                    - !Sub 'arn:aws:s3:::${VodSourceBucket}'
          - !Ref AWS::NoValue
        # Allow MediaPackage to access S3 for Live-to-VOD workflows.
        - !If
          - CreateLiveToVODWorkflow
          - PolicyName: S3Write
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - s3:PutObject
                    - s3:ListBucket
                    - s3:GetBucketLocation
                  Resource:
                    - !Sub 'arn:aws:s3:::${ArchiveBucket}/*'
                    - !Sub 'arn:aws:s3:::${ArchiveBucket}'
          - !Ref AWS::NoValue
        # Allow MediaPackage to access SecretsManager.
        - PolicyName: SecretsManager
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                  - secretsmanager:ListSecrets
                  - secretsmanager:ListSecretVersionIds
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:PassRole
                Resource:
                  - '*'
      RoleName: !Sub ${LogicalName}-MediaPackage-${AWS::Region}
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  # MediaPackage
  MediaPackageChannel:
    Type: AWS::MediaPackage::Channel
    Properties: 
      Description: !Sub Media Package Channel for ${LogicalName}
      Id: !Ref LogicalName
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  MediaPackageHlsOriginEndpoint:
    Condition: CreateHlsEndPoint
    Type: AWS::MediaPackage::OriginEndpoint
    Properties: 
      ChannelId: !Ref MediaPackageChannel
      Description: !Sub Media Package OriginEndpoint for ${LogicalName}
      HlsPackage:
        AdMarkers: NONE
        IncludeIframeOnlyStream: false
        SegmentDurationSeconds: !Ref SegmentDurationSeconds
      Id: !Sub ${LogicalName}-Hls
      ManifestName: !Ref ManifestName
      Origination: !If 
        - CreateLiveToVODWorkflow
        - DENY
        - ALLOW
      StartoverWindowSeconds: !Ref StartoverWindowSeconds
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TimeDelaySeconds: 0
  MediaPackageDashOriginEndpoint:
    Condition: CreateDashEndPoint
    Type: AWS::MediaPackage::OriginEndpoint
    Properties: 
      ChannelId: !Ref MediaPackageChannel
      DashPackage:
        ManifestLayout: FULL
        ManifestWindowSeconds: 60
        MinBufferTimeSeconds: 10
        MinUpdatePeriodSeconds: 2
        Profile: NONE
        SegmentDurationSeconds: 2
        SegmentTemplateFormat: NUMBER_WITH_TIMELINE
        SuggestedPresentationDelaySeconds: 20     
      Description: !Sub Media Package OriginEndpoint for ${LogicalName}
      Id: !Sub ${LogicalName}-Dash
      ManifestName: !Ref ManifestName
      Origination: !If 
        - CreateLiveToVODWorkflow
        - DENY
        - ALLOW
      StartoverWindowSeconds: !Ref StartoverWindowSeconds
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TimeDelaySeconds: 0
  MediaPackageHlsAsset:
    Condition: CreateHlsVODWorkflow    
    Type: AWS::MediaPackage::Asset
    Properties: 
      Id: !Sub ${LogicalName}-Hls
      PackagingGroupId: !Ref MediaPackagePackagingGroup
      SourceArn: !Sub 'arn:aws:s3:::${VodSourceBucket}'
      SourceRoleArn: !GetAtt IAMRoleForMediaPackage.Arn
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  MediaPackageDashAsset:  
    Condition: CreateDashVODWorkflow  
    Type: AWS::MediaPackage::Asset
    Properties: 
      Id: !Sub ${LogicalName}-Dash
      PackagingGroupId: !Ref MediaPackagePackagingGroup
      SourceArn: !Sub 'arn:aws:s3:::${VodSourceBucket}'
      SourceRoleArn: !GetAtt IAMRoleForMediaPackage.Arn
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  MediaPackagePackagingGroup:
    Condition: CreateVODWorkflow
    Type: AWS::MediaPackage::PackagingGroup
    Properties: 
      Id: !Ref LogicalName
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  MediaPackageHlsPackagingConfiguration:
    Condition: CreateHlsVODWorkflow
    Type: AWS::MediaPackage::PackagingConfiguration
    Properties:
      HlsPackage:
        HlsManifests: 
          - IncludeIframeOnlyStream: false
            ManifestName: !Ref ManifestName
            RepeatExtXKey: false
        SegmentDurationSeconds: !Ref SegmentDurationSeconds
        UseAudioRenditionGroup: false
      Id: !Sub ${LogicalName}-Hls
      PackagingGroupId: !Ref MediaPackagePackagingGroup
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  MediaPackageDashPackagingConfiguration:
    Condition: CreateDashVODWorkflow
    Type: AWS::MediaPackage::PackagingConfiguration
    Properties:
      DashPackage:
        DashManifests: 
          - ManifestLayout: FULL
            ManifestName: !Ref ManifestName
            MinBufferTimeSeconds: 30
            Profile: NONE
        SegmentDurationSeconds: !Ref SegmentDurationSeconds
        SegmentTemplateFormat: NUMBER_WITH_TIMELINE
      Id: !Sub ${LogicalName}-Dash
      PackagingGroupId: !Ref MediaPackagePackagingGroup
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue

Outputs:
  ChannelId:
    Description: Channel Id
    Value: !Ref MediaPackageChannel
  HlsEndpointUrl:
    Description: Endpoint Url
    Value: !If
      - CreateHlsEndPoint
      - !GetAtt MediaPackageHlsOriginEndpoint.Url
      - ''
  ManifestFile:
    Description: A short string that's appended to the end of the endpoint URL to create a unique path to this endpoint
    Value: !Ref ManifestName
  DashEndpointUrl:
    Description: Endpoint Url
    Value: !If
      - CreateDashEndPoint
      - !GetAtt MediaPackageDashOriginEndpoint.Url
      - ''