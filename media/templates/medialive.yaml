AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWSCloudFormationSamples/media/medialive sets Elemental MediaLive.

Parameters:
  ArchiveBucket:
    Type: String
    Default: ''
    Description: The S3 bucket Name LIVE-to-VOD contents are stored.
  AudioBitrate:
    Type: Number
    Default: 96000
    Description: Average audio bitrate in bits/second [required]
  AutoInputFailover:
    Type: String
    AllowedValues:
      - ENABLED
      - DISABLED  
    Default: ENABLED
    Description: Enable or disable automatic input failover [required]
  ChannelClass:
    Type: String
    AllowedValues:
      - STANDARD
      - SINGLE_PIPELINE
    Default: STANDARD
    Description: Select the class of channel you intend to attach this input to [required] 
  FramerateDenominator:
    Type: Number
    Default: 1001
    Description: Framerate denominator [required]
  FramerateNumerator:
    Type: Number
    Default: 30000
    Description: Framerate numerator [required]  
  GopNumBFrames:
    Type: Number
    Default: 3
    Description: Number of B-frames between reference frames [required]
  GopSize:
    Type: Number
    Default: 60
    Description: GOP size (keyframe interval) in units of either frames or seconds per gopSizeUnits [required]
  H264Profile:
    Type: String
    AllowedValues:
      - BASELINE
      - HIGH
      - HIGH_10BIT
      - HIGH_422
      - HIGH_422_10BIT
      - MAIN
    Default: HIGH
    Description: H.264 Profile [required]
  H264Level:
    Type: String
    AllowedValues:
      - H264_LEVEL_1
      - H264_LEVEL_1_1
      - H264_LEVEL_1_2
      - H264_LEVEL_1_3
      - H264_LEVEL_2
      - H264_LEVEL_2_1
      - H264_LEVEL_2_2
      - H264_LEVEL_3
      - H264_LEVEL_3_1
      - H264_LEVEL_3_2
      - H264_LEVEL_4
      - H264_LEVEL_4_1
      - H264_LEVEL_4_2
      - H264_LEVEL_5
      - H264_LEVEL_5_1
      - H264_LEVEL_5_2
      - H264_LEVEL_AUTO
    Default: H264_LEVEL_4_1
    Description: H.264 Level [required]
  Height:
    Type: Number
    Default: 540
    Description: Output video height, in pixels [required]
  MediaPackageChannelId:
    Type: String
    Default: ''
    Description: The MediaPackage channel id [conditional]
  MediaStoreEndpoint:
    Type: String
    Default: ''
    Description: The endpoint of MediaStore [conditional]
  LiveSource:
    Type: String     
    AllowedValues:
      - ENABLED
      - DISABLED
    Default: ENABLED
    Description: Enable or disable a live source [required]    
  LogicalNamePrefix:
    Type: String
    Default: MediaLive
    AllowedPattern: .+
    Description: The custom prefix name [required]
  OutputType:
    Type: String
    AllowedValues:
      - MEDIA_PACKAGE
      - MEDIA_STORE
      - RTMP
    Default: RTMP
    Description: Output type [required]
  RtmpUrl1:
    Type: String
    Default: ''
    Description: The rtmp url a stream sends to
  RtmpStreamKey1:
    Type: String
    Default: ''
    Description: The rtmp stream name a stream sends to
  RtmpUrl2:
    Type: String
    Default: ''
    Description: The rtmp url a stream sends to
  RtmpStreamKey2:
    Type: String
    Default: ''
    Description: The rtmp stream name a stream sends to
  StreamKey:
    Type: String
    Default: stream
    Description: A unique name for the location the RTMP stream is being pushed to [conditional]
  VideoBitrate:
    Type: Number
    Default: 2200000
    Description: Average video bitrate in bits/second [required]
  VodSourceBucket:
    Type: String
    Default: ''
    Description: The S3 bucket Name VOD contents exist
  Width:
    Type: Number
    Default: 960
    Description: Output video width, in pixels [required]
  WhitelistRules:
    Type: String
    AllowedPattern: ^[0-9./]*$
    Default: 0.0.0.0/0
    Description: A list of one or more IPv4 CIDR addresses to allow (e.g. 0.0.0.0/0) [required]
  SNSForAlertArn:
    Type: String
    Default: '' 
  SNSForDeploymentArn:
    Type: String
    Default: ''
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-samples 
    AllowedPattern: .+

Conditions:
  CreateDestinationForMediaPackage: !And [ !Not [ !Equals [ !Ref MediaPackageChannelId, ''] ], !Equals [ !Ref OutputType, MEDIA_PACKAGE] ]
  CreateDestinationForRTMP: !Equals [ !Ref OutputType, RTMP] 
  CreateDestinationForMediaStore: !And [ !Not [ !Equals [ !Ref MediaStoreEndpoint, ''] ], !Equals [ !Ref OutputType, MEDIA_STORE] ]
  CreateDestinationForArchive: !Not [ !Equals [ !Ref ArchiveBucket, ''] ]
  CreateTwoPipelines: !Equals [ !Ref ChannelClass, STANDARD]
  CreateTwoInput: !Equals [ !Ref AutoInputFailover, ENABLED]
  CreateTwoPipelinesAndTwoInput: !And [ !Equals [ !Ref ChannelClass, STANDARD], !Equals [ !Ref AutoInputFailover, ENABLED] ]
  CreateLIVEWorkflow: !Equals [ !Ref LiveSource, ENABLED ]
  CreateVODWorkflow: !Not [ !Equals [ !Ref VodSourceBucket, '' ] ]
  CreateLIVEWorkflowAndTwoInput: !And [ !Equals [ !Ref LiveSource, ENABLED ], !Equals [ !Ref AutoInputFailover, ENABLED] ]
  CreateSNSForAlert: !Equals [ !Ref SNSForAlertArn, '']
  CreateSNSForDeployment: !Equals [ !Ref SNSForDeploymentArn, '']

Resources:
  # Nested Stack
  SNSForAlert:
    Condition: CreateSNSForAlert
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 1.3.21
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        TopicName: !Sub Alert-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  SNSForDeployment:
    Condition: CreateSNSForDeployment
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 1.3.21
      Parameters:
        TopicName: !Sub Deployment-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  # IAM Role
  IAMRoleForMediaLive:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: medialive.amazonaws.com 
            Action: 'sts:AssumeRole'
      Description: A role required for MediaLive to access S3.
      Policies:
        - PolicyName: !Sub '${LogicalNamePrefix}-AWSMediaLivePolicy-${AWS::Region}'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:ListBucket'
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:DeleteObject'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'mediastore:ListContainers'
                  - 'mediastore:PutObject'
                  - 'mediastore:GetObject'
                  - 'mediastore:DeleteObject'
                  - 'mediastore:DescribeObject'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'logs:DescribeLogStreams'
                  - 'logs:DescribeLogGroups'
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: Allow
                Action:
                  - 'mediaconnect:ManagedDescribeFlow'
                  - 'mediaconnect:ManagedAddOutput'
                  - 'mediaconnect:ManagedRemoveOutput'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ec2:describeSubnets'
                  - 'ec2:describeNetworkInterfaces'
                  - 'ec2:createNetworkInterface'
                  - 'ec2:createNetworkInterfacePermission'
                  - 'ec2:deleteNetworkInterface'
                  - 'ec2:deleteNetworkInterfacePermission'
                  - 'ec2:describeSecurityGroups'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'mediapackage:DescribeChannel'
                Resource: '*'
      RoleName: !Sub '${LogicalNamePrefix}-MediaLive-${AWS::Region}'
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
  # MediaLive
  MediaLiveChannel:
    Type: AWS::MediaLive::Channel
    Properties: 
      ChannelClass: !Ref ChannelClass
      Destinations: 
        - !If
          - CreateDestinationForMediaPackage
          - Id: !Sub ${LogicalNamePrefix}-for-MediaPackage
            MediaPackageSettings: 
              - ChannelId: !Ref MediaPackageChannelId
          - !Ref AWS::NoValue
        - !If
          - CreateDestinationForRTMP
          - Id: !Sub ${LogicalNamePrefix}-for-RTMP
            Settings: !If
              - CreateTwoPipelines
              - - StreamName: !Ref RtmpStreamKey1
                  Url: !Ref RtmpUrl1
                - StreamName: !Ref RtmpStreamKey2
                  Url: !Ref RtmpUrl2
              - - StreamName: !Ref RtmpStreamKey1
                  Url: !Ref RtmpUrl1
          - !Ref AWS::NoValue
        - !If
          - CreateDestinationForMediaStore
          - Id: !Sub ${LogicalNamePrefix}-for-MediaStore
            Settings: !If
              - CreateTwoPipelines
              - - StreamName: ''
                  Url: !Sub mediastoressl://${MediaStoreEndpoint}/live-a/main
                - StreamName: ''
                  Url: !Sub mediastoressl://${MediaStoreEndpoint}/live-b/main
              - - StreamName: ''
                  Url: !Sub mediastoressl://${MediaStoreEndpoint}/live/main
          - !Ref AWS::NoValue
        - !If
          - CreateDestinationForArchive
          - Id: !Sub ${LogicalNamePrefix}-for-Archive
            Settings: !If
              - CreateTwoPipelines
              - - StreamName: ''
                  Url: !Sub s3ssl://${ArchiveBucket}
                - StreamName: ''
                  Url: !Sub s3ssl://${ArchiveBucket}
              - - StreamName: ''
                  Url: !Sub s3ssl://${ArchiveBucket}
          - !Ref AWS::NoValue
      EncoderSettings:
        AudioDescriptions: 
          - AudioTypeControl: FOLLOW_INPUT
            CodecSettings: 
              AacSettings: 
                Bitrate: !Ref AudioBitrate
                CodingMode: CODING_MODE_2_0
                InputType: NORMAL
                Profile: LC
                RateControlMode: CBR
                RawFormat: NONE
                SampleRate: 48000
                Spec: MPEG4
            LanguageCodeControl: FOLLOW_INPUT
            Name: !Sub audio_2_aac${AudioBitrate}
        OutputGroups: 
          - !If
            - CreateDestinationForMediaPackage
            - Name: MediaPackage
              OutputGroupSettings: 
                MediaPackageGroupSettings: 
                  Destination:
                    DestinationRefId: !Sub ${LogicalNamePrefix}-for-MediaPackage
              Outputs: 
                - AudioDescriptionNames: 
                    - !Sub audio_2_aac${AudioBitrate}
                  OutputName: !Sub mediapackage_${Width}x${Height}_${VideoBitrate}
                  OutputSettings: 
                    MediaPackageOutputSettings: {}
                  VideoDescriptionName: !Sub video_${Width}_${Height}
            - !Ref AWS::NoValue
          - !If
            - CreateDestinationForRTMP
            - Name: RTMP
              OutputGroupSettings:
                RtmpGroupSettings:
                  AuthenticationScheme: COMMON
                  CacheFullBehavior: DISCONNECT_IMMEDIATELY
                  CacheLength: 30
                  CaptionData: ALL
                  InputLossAction: EMIT_OUTPUT
                  RestartDelay: 15
              Outputs: 
                - AudioDescriptionNames: 
                    - !Sub audio_2_aac${AudioBitrate}
                  OutputName: !Sub rtmp_${Width}x${Height}_${VideoBitrate}
                  OutputSettings:
                    RtmpOutputSettings:
                      CertificateMode: VERIFY_AUTHENTICITY
                      ConnectionRetryInterval: 2
                      Destination: 
                        DestinationRefId: !Sub ${LogicalNamePrefix}-for-RTMP
                      NumRetries: 10
                  VideoDescriptionName: !Sub video_${Width}_${Height}
            - !Ref AWS::NoValue
          - !If 
            - CreateDestinationForMediaStore
            - Name: MediaStore
              OutputGroupSettings: 
                HlsGroupSettings: 
                  CaptionLanguageSetting: OMIT
                  CodecSpecification: RFC_4281
                  Destination: 
                    DestinationRefId: !Sub ${LogicalNamePrefix}-for-MediaStore
                  DirectoryStructure: SINGLE_DIRECTORY
                  DiscontinuityTags: INSERT
                  HlsCdnSettings: 
                    HlsMediaStoreSettings: 
                      ConnectionRetryInterval: 1
                      FilecacheDuration: 300
                      MediaStoreStorageClass: TEMPORAL
                      NumRetries: 10
                      RestartDelay: 15
                  HlsId3SegmentTagging: DISABLED
                  IFrameOnlyPlaylists: DISABLED
                  IncompleteSegmentBehavior: AUTO
                  IndexNSegments: 10
                  InputLossAction: EMIT_OUTPUT
                  IvInManifest: INCLUDE
                  IvSource: FOLLOWS_SEGMENT_NUMBER
                  KeepSegments: 21
                  ManifestCompression: NONE
                  ManifestDurationFormat: INTEGER
                  Mode: LIVE
                  OutputSelection: MANIFESTS_AND_SEGMENTS
                  ProgramDateTime: EXCLUDE
                  ProgramDateTimePeriod: 600
                  RedundantManifest: DISABLED
                  SegmentationMode: USE_SEGMENT_DURATION
                  SegmentLength: 6
                  SegmentsPerSubdirectory: 10000
                  StreamInfResolution: INCLUDE
                  TimedMetadataId3Frame: PRIV
                  TimedMetadataId3Period: 10
                  TsFileMode: SEGMENTED_FILES
              Outputs:
                - AudioDescriptionNames: 
                    - !Sub audio_2_aac${AudioBitrate}
                  OutputName: !Sub mediastore_${Width}x${Height}_${VideoBitrate}
                  OutputSettings: 
                    HlsOutputSettings:
                      H265PackagingType: HVC1
                      HlsSettings: 
                        StandardHlsSettings: 
                          AudioRenditionSets: program_audio
                          M3u8Settings: 
                            AudioFramesPerPes: 4
                            AudioPids: 492-498
                            EcmPid: '8182'
                            NielsenId3Behavior: NO_PASSTHROUGH
                            PcrControl: PCR_EVERY_PES_PACKET
                            PmtPid: '480'
                            ProgramNum: 1
                            Scte35Behavior: NO_PASSTHROUGH
                            Scte35Pid: '500'
                            TimedMetadataBehavior: NO_PASSTHROUGH
                            TimedMetadataPid: '502'
                            TransportStreamId: 500
                            VideoPid: '481'
                      NameModifier: !Sub _${Width}_${Height}
                  VideoDescriptionName: !Sub video_${Width}_${Height}
            - !Ref AWS::NoValue     
          - !If
            - CreateDestinationForArchive
            - Name: Archive
              OutputGroupSettings: 
                ArchiveGroupSettings: 
                  Destination: 
                    DestinationRefId: !Sub ${LogicalNamePrefix}-for-Archive
                  RolloverInterval: 30
              Outputs: 
                - AudioDescriptionNames: 
                    - !Sub audio_2_aac${AudioBitrate}
                  OutputName: !Sub archive_${Width}x${Height}_${VideoBitrate}
                  OutputSettings:
                    ArchiveOutputSettings:
                      ContainerSettings: 
                        M2tsSettings: 
                          AbsentInputAudioBehavior: ENCODE_SILENCE
                          Arib: DISABLED
                          AribCaptionsPid: '507'
                          AribCaptionsPidControl: AUTO
                          AudioBufferModel: ATSC
                          AudioFramesPerPes: 2
                          AudioPids: 482-498
                          AudioStreamType: DVB
                          Bitrate: 0
                          BufferModel: MULTIPLEX
                          CcDescriptor: DISABLED
                          DvbSubPids: 460-479
                          DvbTeletextPid: '499'
                          Ebif: NONE
                          EbpAudioInterval: VIDEO_INTERVAL
                          EbpPlacement: VIDEO_AND_AUDIO_PIDS
                          EsRateInPes: EXCLUDE
                          EtvPlatformPid: '504'
                          EtvSignalPid: '505'
                          Klv: NONE
                          KlvDataPids: '501'
                          NielsenId3Behavior: NO_PASSTHROUGH
                          PatInterval: 100
                          PcrControl: PCR_EVERY_PES_PACKET
                          PcrPeriod: 40 
                          PmtInterval: 100
                          PmtPid: '480'
                          ProgramNum: 1
                          RateMode: CBR
                          Scte27Pids: 450-459
                          Scte35Control: NONE
                          Scte35Pid: '500'
                          SegmentationMarkers: NONE
                          SegmentationStyle: MAINTAIN_CADENCE
                          TimedMetadataBehavior: NO_PASSTHROUGH
                          TimedMetadataPid: '502'
                          VideoPid: '481'
                      Extension: ''
                      NameModifier: !Sub _${Width}_${Height}
                  VideoDescriptionName: !Sub video_${Width}_${Height}           
            - !Ref AWS::NoValue
        TimecodeConfig: 
          Source: SYSTEMCLOCK
        VideoDescriptions: 
          - CodecSettings: 
              H264Settings: 
                AdaptiveQuantization: HIGH
                AfdSignaling: NONE
                Bitrate: !Ref VideoBitrate
                ColorMetadata: INSERT
                EntropyEncoding: CABAC
                FlickerAq: ENABLED
                FramerateControl: SPECIFIED
                FramerateDenominator: !Ref FramerateDenominator
                FramerateNumerator: !Ref FramerateNumerator
                GopBReference: ENABLED
                GopClosedCadence: 1
                GopNumBFrames: !Ref GopNumBFrames
                GopSize: !Ref GopSize
                GopSizeUnits: FRAMES
                Level: !Ref H264Level
                LookAheadRateControl: HIGH
                NumRefFrames: 1
                ParControl: SPECIFIED
                Profile: !Ref H264Profile
                RateControlMode: CBR
                ScanType: PROGRESSIVE
                SceneChangeDetect: ENABLED
                SpatialAq: ENABLED
                SubgopLength: FIXED
                Syntax: DEFAULT
                TemporalAq: ENABLED
                TimecodeInsertion: DISABLED
            Height: !Ref Height
            Name: !Sub video_${Width}_${Height}
            Sharpness: 50
            Width: !Ref Width
      InputAttachments:
        - !If 
          - CreateLIVEWorkflow
          - AutomaticInputFailoverSettings: !If
              - CreateTwoInput
              - ErrorClearTimeMsec: 60000
                FailoverConditions: 
                  - FailoverConditionSettings:
                      AudioSilenceSettings: 
                        AudioSilenceThresholdMsec: 15000
                  - FailoverConditionSettings:
                      InputLossSettings: 
                        InputLossThresholdMsec: 15000
                  - FailoverConditionSettings:
                      VideoBlackSettings: 
                        BlackDetectThreshold: 0.1
                        VideoBlackThresholdMsec: 15000
                InputPreference: EQUAL_INPUT_PREFERENCE
                SecondaryInputId: !Ref MediaLiveInputRempPush1
              - !Ref AWS::NoValue
            InputAttachmentName: !Sub ${LogicalNamePrefix}-Rtmp0
            InputId: !Ref MediaLiveInputRempPush0
            InputSettings: 
              DeblockFilter: DISABLED
              DenoiseFilter: DISABLED
              FilterStrength: 1
              InputFilter: AUTO
              Smpte2038DataPreference: IGNORE
              SourceEndBehavior: CONTINUE
          - !Ref AWS::NoValue
        - !If 
          - CreateLIVEWorkflow
          - !If
              - CreateTwoInput
              - InputAttachmentName: !Sub ${LogicalNamePrefix}-Rtmp1
                InputId: !Ref MediaLiveInputRempPush1
                InputSettings: 
                  DeblockFilter: DISABLED
                  DenoiseFilter: DISABLED
                  FilterStrength: 1
                  InputFilter: AUTO
                  Smpte2038DataPreference: IGNORE
                  SourceEndBehavior: CONTINUE
              - !Ref AWS::NoValue
          - !Ref AWS::NoValue
        - !If 
          - CreateVODWorkflow
          - InputAttachmentName: !Sub ${LogicalNamePrefix}-Vod
            InputId: !Ref MediaLiveInputVod
            InputSettings: 
              DeblockFilter: DISABLED
              DenoiseFilter: DISABLED
              FilterStrength: 1
              InputFilter: AUTO
              Smpte2038DataPreference: IGNORE
              SourceEndBehavior: CONTINUE
          - !Ref AWS::NoValue
      InputSpecification: 
        Codec: AVC
        MaximumBitrate: MAX_20_MBPS
        Resolution: HD
      LogLevel: ERROR
      Name: !Ref LogicalNamePrefix
      RoleArn: !GetAtt IAMRoleForMediaLive.Arn
      Tags: 
        createdby: !Ref TagValue
  MediaLiveInputRempPush0:
    Condition: CreateLIVEWorkflow
    Type: AWS::MediaLive::Input
    Properties:
      Destinations:
        - StreamName: !Sub ${LogicalNamePrefix}-0/${StreamKey}-a
        - !If
          - CreateTwoPipelines
          - StreamName: !Sub ${LogicalNamePrefix}-0/${StreamKey}-b
          - !Ref AWS::NoValue
      InputSecurityGroups: 
        - !Ref MediaLiveInputSecurityGroup
      Name: !Sub ${LogicalNamePrefix}-RtmpPush0
      Tags:
        createdby: !Ref TagValue
      Type: RTMP_PUSH
  MediaLiveInputRempPush1:
    Condition: CreateLIVEWorkflowAndTwoInput
    Type: AWS::MediaLive::Input
    Properties: 
      Destinations:
        - StreamName: !Sub ${LogicalNamePrefix}-1/${StreamKey}-a
        - !If
          - CreateTwoPipelines
          - StreamName: !Sub ${LogicalNamePrefix}-1/${StreamKey}-b
          - !Ref AWS::NoValue
      InputSecurityGroups: 
        - !Ref MediaLiveInputSecurityGroup
      Name: !Sub ${LogicalNamePrefix}-RtmpPush1
      Tags:
        createdby: !Ref TagValue
      Type: RTMP_PUSH
  MediaLiveInputVod:
    Condition: CreateVODWorkflow
    Type: AWS::MediaLive::Input
    Properties: 
      Name: !Sub ${LogicalNamePrefix}-Vod0
      Sources: !If
        - CreateTwoPipelines
        - - Url: !Sub s3ssl://${VodSourceBucket}
          - Url: !Sub s3ssl://${VodSourceBucket}
        - - Url: !Sub s3ssl://${VodSourceBucket}
      Tags:
        createdby: !Ref TagValue
      Type: MP4_FILE   
  MediaLiveInputSecurityGroup:
    Type: AWS::MediaLive::InputSecurityGroup
    Properties: 
      Tags:
        createdby: !Ref TagValue
      WhitelistRules: 
        - Cidr: !Ref WhitelistRules
  CloudWatchAlarmMediaLive0:
    Type: AWS::Serverless::Application
    Properties:
      Parameters:
        CustomAlarmName: !Ref AWS::StackName
        ChannelId: !Ref MediaLiveChannel
        OutputGroupName: MediaPackage
        PipelineId: 0
        SNSTopicArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
      NotificationARNs: 
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-medialive
        SemanticVersion: 1.3.21
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  CloudWatchAlarmMediaLive1:
    Condition: CreateTwoPipelines
    Type: AWS::Serverless::Application
    Properties:
      Parameters:
        CustomAlarmName: !Ref AWS::StackName
        ChannelId: !Ref MediaLiveChannel
        OutputGroupName: MediaPackage
        PipelineId: 1
        SNSTopicArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
      NotificationARNs: 
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-medialive
        SemanticVersion: 1.3.21
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue

Outputs:
  ChannelId:
    Description: Channel Id
    Value: !Ref MediaLiveChannel
  RtmpPrimary1:
    Condition: CreateLIVEWorkflow
    Description: The RTMP primary address 1
    Value: !Select [0, !GetAtt MediaLiveInputRempPush0.Destinations]
  RtmpPrimary2:
    Condition: CreateLIVEWorkflow
    Description: The RTMP primary address 2
    Value: !If
      - CreateTwoPipelines
      - !Select [1, !GetAtt MediaLiveInputRempPush0.Destinations]
      - ''
  RtmpSecondary1:
    Condition: CreateLIVEWorkflow
    Description: The RTMP secondary address 1
    Value: !If
      - CreateTwoInput
      - !Select [0, !GetAtt MediaLiveInputRempPush1.Destinations]
      - ''
  RtmpSecondary2:
    Condition: CreateLIVEWorkflow
    Description: The RTMP secondary address 2
    Value: !If
      - CreateTwoPipelinesAndTwoInput
      - !Select [1, !GetAtt MediaLiveInputRempPush1.Destinations]
      - ''