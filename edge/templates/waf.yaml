AWSTemplateFormatVersion: 2010-09-09
Description: aws-cloudformation-templates/edge/waf creates an AWS WAF.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: 'WAF Configuration'
        Parameters:
          - CentralizedLogBucketName
          - Scope
          - TargetResourceArn
      - Label: 
          default: 'Tag Configuration'
        Parameters:
          - LogicalName
          - Environment
          - TagKey
          - TagValue

Parameters:
  CentralizedLogBucketName:
    Type: String
    Default: ''
    Description: The centralize S3 bucket name for logging 
  Scope:
    Type: String
    Default: REGIONAL
    AllowedValues:
      - REGIONAL
      - CLOUDFRONT
    Description: Specifies whether this is for an Amazon CloudFront distribution or for a regional application [required]  
  TargetResourceArn:
    Type: String
    Default: ''
    Description: The ARN of the resource to associate with the web ACL [required] 
  LogicalName:
    Type: String
    Default: WebServers
    AllowedPattern: .+
    Description: The custom prefix name [required]
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates
    AllowedPattern: .+

Conditions:
  CreateLoggingConfiguration: !Not [ !Equals [ !Ref CentralizedLogBucketName, '']]
  CreateWebACLAssociation: !Not  [ !Equals [ !Ref TargetResourceArn, '']]

Resources:
  WebACL:
    Type: AWS::WAFv2::WebACL
    Properties: 
      DefaultAction: 
        Allow: {}
      Description: !Sub ACL for ${LogicalName}
      Name: !Ref LogicalName
      Rules: 
        - Name: AWSManagedRulesKnownBadInputsRuleSet
          OverrideAction:
            None: {}
          Priority: 0
          Statement: 
            # Restrict log4j2 message lookup (CWE-117)
            # Compliant: `ManagedRuleGroupStatement` is present.
            ManagedRuleGroupStatement: 
              Name: AWSManagedRulesKnownBadInputsRuleSet
              VendorName: AWS
          VisibilityConfig: 
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesKnownBadInputsRuleSet
            SampledRequestsEnabled: false
        - Name: AWSManagedRulesCommonRuleSet
          OverrideAction:
            None: {}
          Priority: 1
          Statement: 
            ManagedRuleGroupStatement: 
              Name: AWSManagedRulesCommonRuleSet
              VendorName: AWS
          VisibilityConfig: 
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesCommonRuleSet
            SampledRequestsEnabled: false
        - Name: AWSManagedRulesAdminProtectionRuleSet
          OverrideAction:
            None: {}
          Priority: 2
          Statement: 
            ManagedRuleGroupStatement: 
              Name: AWSManagedRulesAdminProtectionRuleSet
              VendorName: AWS
          VisibilityConfig: 
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesAdminProtectionRuleSet
            SampledRequestsEnabled: false
        - Name: AWSManagedRulesAmazonIpReputationList
          OverrideAction:
            None: {}
          Priority: 3
          Statement: 
            ManagedRuleGroupStatement: 
              Name: AWSManagedRulesAmazonIpReputationList
              VendorName: AWS
          VisibilityConfig: 
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesAmazonIpReputationList
            SampledRequestsEnabled: false
      Scope: !Ref Scope
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      VisibilityConfig: 
        CloudWatchMetricsEnabled: true
        MetricName: !Ref LogicalName
        SampledRequestsEnabled: false
  WebACLAssociation:
    Condition: CreateWebACLAssociation
    Type: AWS::WAFv2::WebACLAssociation
    Properties: 
      ResourceArn: !Ref TargetResourceArn
      WebACLArn: !GetAtt WebACL.Arn
  LoggingConfiguration:
    Condition: CreateLoggingConfiguration
    Type: AWS::WAFv2::LoggingConfiguration
    Properties:
      LogDestinationConfigs: 
        - !Sub arn:aws:s3:::${CentralizedLogBucketName}
      ResourceArn: !GetAtt WebACL.Arn

Outputs:
  WebACLId:
    Description: WebACL Id
    Value: !GetAtt WebACL.Id  
  WebACLArn:
    Description: WebACL Arn
    Value: !GetAtt WebACL.Arn  