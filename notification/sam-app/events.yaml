AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: aws-cloudformation-templates/notification/events creates Amazon EventBridge to support events from AWS Services.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: 'EventBridge Configuration'
        Parameters:
          - AppFlow
          - AutoScalingEventsRule
          - CertificateManager
          - EBSEventsRule
          - EC2EventsRule
          - KMSEventsRule
          - ManagementConsoleEventsRule
          - MediaLiveEventsRule
          - MGNEventsRule
          - NetworkManagerEventsRule
          - SavingsPlansEventsRule
          - ScheduledEventsRule
          - SupportEventsRule
          - TagEventsRule
          - TrustedAdvisorEventsRule
      - Label: 
          default: 'Notification Configuration'
        Parameters: 
          - SNSForAlertArn
          - SNSForDeploymentArn
      - Label: 
          default: 'Tag Configuration'
        Parameters: 
          - LogicalName

Parameters:
  AppFlow:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable the events rule about AppFlow [required]
  AutoScalingEventsRule:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - ERROR_ONLY
      - DISABLED
    Description: Enable or disable the events rule about AutoScaling [required]
  CertificateManager:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable the events rule about Certificate Manager [required]
  EBSEventsRule:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - ERROR_ONLY
      - DISABLED
    Description: Enable or disable the events rule about EBS [required]
  EC2EventsRule:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable the events rule about EC2 [required]
  KMSEventsRule:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable the events rule about KMS [required]
  ManagementConsoleEventsRule:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable the events rule about Management Console [required]
  MediaLiveEventsRule:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable the events rule about MediaLive [required]
  MGNEventsRule:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable the events rule about MGN [required]
  NetworkManagerEventsRule:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable the events rule about AWS Transit Gateway Network Manager [required]
  SavingsPlansEventsRule:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable the events rule about Savings Plans Events [required]
  ScheduledEventsRule:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable the events rule about Scheduled Events [required]
  SupportEventsRule:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable the events rule about AWS Support [required]
  TagEventsRule:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable the events rule about Tag [required]
  TrustedAdvisorEventsRule:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable the events rule about Trusted Advisor [required]
  LogicalName:
    Type: String
    Default: Notification-
    AllowedPattern: .+
    Description: Custom prefix name [required]
  SNSForAlertArn:
    Type: String
    Default: ''
    Description: The Amazon SNS topic ARN for alert
  SNSForDeploymentArn:
    Type: String
    Default: ''
    Description: The Amazon SNS topic ARN for deployment information

Conditions:
  SubscribeAutoScalingErrorEventOnly: !Equals [ !Ref AutoScalingEventsRule, ERROR_ONLY]
  SubscribeEBSErrorEventOnly: !Equals [ !Ref EBSEventsRule, ERROR_ONLY]

Resources:
  EventBridgeForAutoScaling:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for AutoScaling created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.autoscaling
        detail-type: 
          - EC2 Instance-launch Lifecycle Action
          - EC2 Instance Launch Successful
          - EC2 Instance Launch Unsuccessful
          - EC2 Instance-terminate Lifecycle Action
          - EC2 Instance Terminate Successful
          - EC2 Instance Terminate Unsuccessful
        detail: !If 
          - SubscribeAutoScalingErrorEventOnly
          - StatusCode:
              - Failed
          - !Ref AWS::NoValue
      Name: !Sub ${LogicalName}-AutoScaling
      State: !If
        - SubscribeAutoScalingErrorEventOnly
        - ENABLED
        - !Ref AutoScalingEventsRule
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeForAppFlow:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for AppFlow created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.appflow
        detail-type: 
          - AppFlow End Flow Run Report
        detail:
          status:
            - Execution Failed
      Name: !Sub ${LogicalName}-AppFlow
      State: !Ref AppFlow
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeForCertificateManager:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for Certificate Manager created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.acm
        detail-type: 
          - ACM Certificate Approaching Expiration
      Name: !Sub ${LogicalName}-CertificateManager
      State: !Ref CertificateManager
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeForCloudFormation:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for CloudFormation created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.cloudformation
        detail-type: 
          - CloudFormation Stack Status Change
        detail:
          status-details:
            status: 
              - CREATE_FAILED
              - DELETE_FAILED
              - ROLLBACK_COMPLETE
              - ROLLBACK_FAILED
              - UPDATE_FAILED
              - UPDATE_ROLLBACK_COMPLETE
              - UPDATE_ROLLBACK_FAILED
      Name: !Sub ${LogicalName}-CloudFormation
      State: ENABLED
      Targets:
        - Arn: !Ref SNSForDeploymentArn
          Id: SNSForAlert
  EventBridgeForEBS:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for EBS created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.ec2
        detail-type: 
          - EBS Volume Notification
          - EBS Snapshot Notification
          - EBS Multi-Volume Snapshots Completion Status
          - EBS Fast Snapshot Restore State-change Notification
        detail: !If 
          - SubscribeEBSErrorEventOnly
          - result:
              - failed
          - !Ref AWS::NoValue
      Name: !Sub ${LogicalName}-EBS
      State: !If
        - SubscribeEBSErrorEventOnly
        - ENABLED
        - !Ref EBSEventsRule
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeForEC2:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for EC2 created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.ec2
        detail-type: 
          - EC2 Instance State-change Notification
      Name: !Sub ${LogicalName}-EC2
      State: !Ref EC2EventsRule
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeForKMS:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for KMS created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.kms
        detail-type: 
          - KMS CMK Rotations
          - KMS Imported Key Material Expiration
          - KMS CMK Deletion
      Name: !Sub ${LogicalName}-KMS
      State: !Ref KMSEventsRule
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeForManagementConsole:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for Management Console created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.signin
        detail-type: 
          - AWS Console Sign In via CloudTrail
      Name: !Sub ${LogicalName}-ManagementConsole
      State: !Ref ManagementConsoleEventsRule
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeForMediaLive:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for MediaLive created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.medialive
        detail-type: 
          - MediaLive Channel State Change
      Name: !Sub ${LogicalName}-MediaLive
      State: !Ref MediaLiveEventsRule
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeForMGN:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for MGN created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.mgn
        detail-type: 
          - MGN Source Server Launch Result
          - MGN Source Server Lifecycle State Change
          - MGN Source Server Data Replication Stalled Change
      Name: !Sub ${LogicalName}-MGN
      State: !Ref MGNEventsRule
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeForNetworkManager:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for Network Manager created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.networkmanager
        detail-type: 
          - Network Manager Topology Change
          - Network Manager Routing Update
          - Network Manager Status Update
      Name: !Sub ${LogicalName}-NetworkManager
      State: !Ref NetworkManagerEventsRule
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeForSavingsPlans:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for Savings Plans Events created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.savingsplans
        detail-type: 
          - Savings Plans State Change
          - Savings Plans State Change Alert
      Name: !Sub ${LogicalName}-SavingsPlans
      State: !Ref SavingsPlansEventsRule
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeForScheduledEvents:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for Scheduled Events created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.events
        detail-type: 
          - Scheduled Event
      Name: !Sub ${LogicalName}-ScheduledEvents
      State: !Ref ScheduledEventsRule
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeForSupport:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for Support created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.support
        detail-type: 
          - Support Case Update
      Name: !Sub ${LogicalName}-Support
      State: !Ref SupportEventsRule
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeForTag:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for Tag created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.tag
        detail-type: 
          - Tag Change on Resource
      Name: !Sub ${LogicalName}-Tag
      State: !Ref TagEventsRule
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeForTrustedAdvisor:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for Trusted Advisor created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.trustedadvisor
        detail-type: 
          - Trusted Advisor Check Item Refresh Notification
      Name: !Sub ${LogicalName}-TrustedAdvisor
      State: !Ref TrustedAdvisorEventsRule
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert