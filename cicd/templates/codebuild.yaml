AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description:  AWSCloudFormationTemplates/cicd/codebuild creates CodeBuild projects.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: 'Artifact Configuration'
        Parameters: 
          - DestinationBucketNameForMasterBranch
          - DestinationBucketNameForTargetBranch
      - Label: 
          default: 'Build Configuration'
        Parameters: 
          - BuildSpecForContainers
          - BuildSpecForCommits
          - BuildSpecForTags
          - Image
      - Label: 
          default: 'Source Configuration'
        Parameters: 
          - GitHubOAuthToken
          - GitHubCloneUrl
          - GitHubBranchName
      - Label: 
          default: 'Notification Configuration'
        Parameters: 
          - SNSForAlertArn
          - SNSForCICDArn
          - SNSForDeploymentArn
      - Label: 
          default: 'Tag Configuration'
        Parameters: 
          - TagKey
          - TagValue

Parameters:
  BuildSpecForContainers:
    Type: String
    Default: buildspec.yml
    AllowedPattern: .+
    Description: The build specification file for containers [required]
  BuildSpecForCommits:
    Type: String
    Default: buildspec.yml
    AllowedPattern: .+
    Description: The build specification file for new commits [required]
  BuildSpecForTags:
    Type: String
    Default: buildspec.yml
    AllowedPattern: .+
    Description: The build specification file for new tags [required]
  DestinationBucketNameForMasterBranch:
    Type: String
    AllowedPattern: .+
    Description: The name of the bucket where Amazon S3 should store production artifacts [required]  
  DestinationBucketNameForTargetBranch:
    Type: String
    AllowedPattern: .+
    Description: The name of the bucket where Amazon S3 should store development artifacts [required]  
  Image:
    Type: String
    Default: aws/codebuild/amazonlinux2-aarch64-standard:2.0
    AllowedPattern: ^aws/codebuild/amazonlinux2-aarch64.+$
    Description: The image tag or image digest that identifies the Docker image to use for this build project [required]
  GitHubOAuthToken:
    Type: String
    AllowedPattern: .+
    Description: The OAuth token to access GitHub [required]
  GitHubCloneUrl:
    Type: String
    AllowedPattern: ^https://github.com/.+$
    Description: The HTTPS clone URL to the repository that contains the source and the build spec [required]
  GitHubBranchName:
    Type: String
    AllowedPattern: .+
    Description: The branch name of GitHub [required]
  SNSForAlertArn:
    Type: String
    Default: ''
    Description: The Amazon SNS topic ARN for alert
  SNSForCICDArn:
    Type: String
    Default: ''
    Description: The Amazon SNS topic ARN for CI/CD information
  SNSForDeploymentArn:
    Type: String
    Default: '' 
    Description: The Amazon SNS topic ARN for deployment information
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates
    AllowedPattern: .+

Conditions:
  CreateSNSForAlert: !Equals [ !Ref SNSForAlertArn, '']
  CreateSNSForCICD: !Equals [ !Ref SNSForCICDArn, '']
  CreateSNSForDeployment: !Equals [ !Ref SNSForDeploymentArn, '']

Resources:
  # Nested Stack
  SNSForAlert:
    Condition: CreateSNSForAlert
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.2.7
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        TopicName: !Sub Alert-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  SNSForCICD:
    Condition: CreateSNSForCICD
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.2.7
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        TopicName: !Sub CICD-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  SNSForDeployment:
    Condition: CreateSNSForDeployment
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.2.7
      Parameters:
        TopicName: !Sub Deployment-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  # IAM
  IAMRoleForCodeBuild:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Description: A role required for CodeBuild to access CodeBuild, S3 and CloudWatch Logs.
      Policies:
        - PolicyName: CodeBuild
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # Required for `sam build`
              - Action:
                  - iam:ListPolicies
                Resource: '*'
                Effect: Allow
              # Required for `AWS::Serverless::Application`
              - Action:
                  - serverlessrepo:SearchApplications
                  - serverlessrepo:GetApplication
                  - serverlessrepo:GetCloudFormationTemplate
                  - serverlessrepo:CreateCloudFormationTemplate
                  - serverlessrepo:CreateCloudFormationChangeSet
                  - serverlessrepo:ListApplicationVersions
                  - serverlessrepo:ListApplicationDependencies
                Resource: '*'
                Effect: Allow
              # Required for creating the new application version in AWS Serverless Application Repository
              - Action:
                  - serverlessrepo:CreateApplicationVersion
                  - serverlessrepo:UpdateApplication
                Resource: '*'
                Effect: Allow
              # Required for uploading artifacts to S3 buckets
              - Action:
                  - s3:DeleteObject
                  - s3:PutObjectAcl
                  - s3:ListBucket
                Resource: 
                  - !Sub arn:aws:s3:::${DestinationBucketNameForMasterBranch}
                  - !Sub arn:aws:s3:::${DestinationBucketNameForMasterBranch}/*
                  - !Sub arn:aws:s3:::${DestinationBucketNameForTargetBranch}
                  - !Sub arn:aws:s3:::${DestinationBucketNameForTargetBranch}/*
                Effect: Allow
              # Default Policy
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
                Effect: Allow
              - Action:
                  - s3:ListBucket
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource: 
                  - !Sub arn:aws:s3:::${DestinationBucketNameForMasterBranch}
                  - !Sub arn:aws:s3:::${DestinationBucketNameForMasterBranch}/*
                  - !Sub arn:aws:s3:::${DestinationBucketNameForTargetBranch}
                  - !Sub arn:aws:s3:::${DestinationBucketNameForTargetBranch}/*
                Effect: Allow
              - Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                Resource:
                  - !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/${AWS::StackName}-*
                Effect: Allow
              - Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetAuthorizationToken
                  - ecr-public:GetAuthorizationToken
                Resource: 
                  - '*'
                Effect: Allow
      RoleName: !Sub ${AWS::StackName}-CodeBuild-${AWS::Region}
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  IAMRoleForCodeBuildBudgePublicRead:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Description: A role required for CodeBuild to access CloudWatch Logs.
      Policies:
        - PolicyName: S3CloudWatchLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - logs:GetLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/UploadArtifacts:*
                Effect: Allow
      RoleName: !Sub ${AWS::StackName}-CodeBuildBudgePublicRead-${AWS::Region}
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  # CodeBuild
  CodeBuildForMasterBranch:
    DependsOn:
      - CodeBuildSourceCredential
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts:
        Type: NO_ARTIFACTS
      BadgeEnabled: true
      Description: Upload artifacts from master branch to the specified S3 bucket. 
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Type: PLAINTEXT
            Value: !Ref DestinationBucketNameForMasterBranch
        Image: !Ref Image
        Type: ARM_CONTAINER
      LogsConfig: 
        CloudWatchLogs: 
          GroupName: !Ref CodeBuildLogGroup
          Status: ENABLED
      Name: !Sub ${AWS::StackName}-master
      ResourceAccessRole: !GetAtt IAMRoleForCodeBuildBudgePublicRead.Arn
      ServiceRole: !GetAtt IAMRoleForCodeBuild.Arn
      Source:
        BuildSpec: !Ref BuildSpecForCommits
        Location: !Ref GitHubCloneUrl
        Type: GITHUB
      SourceVersion: refs/heads/master
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: ^refs/heads/master$
          - - Type: EVENT
              Pattern: PULL_REQUEST_MERGED
            - Type: BASE_REF
              Pattern: ^refs/heads/master$
      Visibility: PUBLIC_READ
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TimeoutInMinutes: 60
  CodeBuildForTargetBranch:
    DependsOn:
      - CodeBuildSourceCredential
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts:
        Type: NO_ARTIFACTS
      BadgeEnabled: true
      Description: !Sub Upload artifacts from ${GitHubBranchName} branch to the specified S3 bucket. 
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Type: PLAINTEXT
            Value: !Ref DestinationBucketNameForTargetBranch
        Image: !Ref Image
        Type: ARM_CONTAINER
      LogsConfig: 
        CloudWatchLogs: 
          GroupName: !Ref CodeBuildLogGroup
          Status: ENABLED
      Name: !Sub ${AWS::StackName}-${GitHubBranchName}
      ResourceAccessRole: !GetAtt IAMRoleForCodeBuildBudgePublicRead.Arn
      ServiceRole: !GetAtt IAMRoleForCodeBuild.Arn
      Source:
        BuildSpec: !Ref BuildSpecForCommits
        Location: !Ref GitHubCloneUrl
        Type: GITHUB
      SourceVersion: !Sub refs/heads/${GitHubBranchName}
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: !Sub ^refs/heads/${GitHubBranchName}$
      Visibility: PUBLIC_READ
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TimeoutInMinutes: 60
  CodeBuildForTags:
    DependsOn:
      - CodeBuildSourceCredential
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts:
        Type: NO_ARTIFACTS
      BadgeEnabled: true
      Description: Upload SAM artifacts and README files to AWS Serverless Application Repository. 
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Type: PLAINTEXT
            Value: !Ref DestinationBucketNameForTargetBranch
        Image: !Ref Image
        Type: ARM_CONTAINER
      LogsConfig: 
        CloudWatchLogs: 
          GroupName: !Ref CodeBuildLogGroup
          Status: ENABLED
      Name: !Sub ${AWS::StackName}-Tags
      ResourceAccessRole: !GetAtt IAMRoleForCodeBuildBudgePublicRead.Arn
      ServiceRole: !GetAtt IAMRoleForCodeBuild.Arn
      Source:
        BuildSpec: !Ref BuildSpecForTags
        Location: !Ref GitHubCloneUrl
        Type: GITHUB
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: ^refs/tags/.*-rc.*$
      Visibility: PUBLIC_READ
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TimeoutInMinutes: 60
  CodeBuildForContainers:
    DependsOn:
      - CodeBuildSourceCredential
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts:
        Type: NO_ARTIFACTS
      BadgeEnabled: true
      Description: Upload container images to Amazon ECR public registries. 
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: REPOSITORY_URI
            Type: PLAINTEXT
            Value: public.ecr.aws/r7j6d5k5/aws-for-fluent-bit
          - Name: BASE_DIR
            Type: PLAINTEXT
            Value: shared/aws-for-fluent-bit
          - Name: CPU_ARCHITECTURE
            Type: PLAINTEXT
            Value: linux/arm64/v8,linux/amd64
        Image: !Ref Image
        Type: ARM_CONTAINER
      LogsConfig: 
        CloudWatchLogs: 
          GroupName: !Ref CodeBuildLogGroup
          Status: ENABLED
      Name: !Sub ${AWS::StackName}-Containers
      ResourceAccessRole: !GetAtt IAMRoleForCodeBuildBudgePublicRead.Arn
      ServiceRole: !GetAtt IAMRoleForCodeBuild.Arn
      Source:
        BuildSpec: !Ref BuildSpecForContainers
        Location: !Ref GitHubCloneUrl
        Type: GITHUB
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: ^refs/heads/master$
          - - Type: EVENT
              Pattern: PULL_REQUEST_MERGED
            - Type: HEAD_REF
              Pattern: ^refs/heads/master$
      Visibility: PUBLIC_READ
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TimeoutInMinutes: 60
  CodeBuildSourceCredential:
    Type: AWS::CodeBuild::SourceCredential
    Properties: 
      AuthType: PERSONAL_ACCESS_TOKEN
      ServerType: GITHUB
      Token: !Ref GitHubOAuthToken
  # S3
  S3BucketPolicyForMaster:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref DestinationBucketNameForMasterBranch
      PolicyDocument:
        Version: 2012-10-17
        Id: !Ref DestinationBucketNameForMasterBranch
        Statement:
          - Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: 
              - !Sub arn:aws:s3:::${DestinationBucketNameForMasterBranch}
              - !Sub arn:aws:s3:::${DestinationBucketNameForMasterBranch}/*
            Condition:
              Bool: 
                aws:SecureTransport: false
          - Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub arn:aws:s3:::${DestinationBucketNameForMasterBranch}/*
          - Effect: Allow
            Principal:
              Service: serverlessrepo.amazonaws.com
            Action: 's3:GetObject'
            Resource: !Sub arn:aws:s3:::${DestinationBucketNameForMasterBranch}/*
            Condition:
              StringEquals: 
                aws:SourceAccount: !Ref AWS::AccountId
  S3BucketPolicyForTarget:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref DestinationBucketNameForTargetBranch
      PolicyDocument:
        Version: 2012-10-17
        Id: !Ref DestinationBucketNameForTargetBranch
        Statement:
          - Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: 
              - !Sub arn:aws:s3:::${DestinationBucketNameForTargetBranch}
              - !Sub arn:aws:s3:::${DestinationBucketNameForTargetBranch}/*
            Condition:
              Bool: 
                aws:SecureTransport: false
          - Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub arn:aws:s3:::${DestinationBucketNameForTargetBranch}/*
          - Effect: Allow
            Principal:
              Service: serverlessrepo.amazonaws.com
            Action: 's3:GetObject'
            Resource: !Sub arn:aws:s3:::${DestinationBucketNameForTargetBranch}/*
            Condition:
              StringEquals: 
                aws:SourceAccount: !Ref AWS::AccountId
  # CloudWatch Logs
  CodeBuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: !Sub /aws/codebuild/${AWS::StackName}
      RetentionInDays: 60
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  # CloudWatch Alarm
  AlarmCodeBuildForMasterBranch:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-codebuild
        SemanticVersion: 2.2.7
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        CustomAlarmName: !Ref AWS::StackName
        SNSTopicArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
        ProjectName: !Ref CodeBuildForMasterBranch
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  AlarmCodeBuildForTargetBranch:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-codebuild
        SemanticVersion: 2.2.7
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        CustomAlarmName: !Ref AWS::StackName
        SNSTopicArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
        ProjectName: !Ref CodeBuildForTargetBranch
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  AlarmCodeBuildForTags:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-codebuild
        SemanticVersion: 2.2.7
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        CustomAlarmName: !Ref AWS::StackName
        SNSTopicArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
        ProjectName: !Ref CodeBuildForTags
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  # CodeStar
  NotificationRuleForMasterBranch:
    Type: AWS::CodeStarNotifications::NotificationRule
    Properties: 
      DetailType: FULL
      EventTypeIds:
        # Build state
        - codebuild-project-build-state-failed
        # Build state
        - codebuild-project-build-phase-failure
      Name: !Sub UploadArtifacts-started-succeeded-${AWS::Region}-master
      Resource: !GetAtt CodeBuildForMasterBranch.Arn
      Targets: 
        - TargetAddress: !If
            - CreateSNSForCICD
            - !GetAtt SNSForCICD.Outputs.SNSTopicArn
            - !Ref SNSForCICDArn
          TargetType: SNS
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  NotificationRuleForTargetBranch:
    Type: AWS::CodeStarNotifications::NotificationRule
    Properties: 
      DetailType: FULL
      EventTypeIds:
        # Build state
        - codebuild-project-build-state-failed
        # Build state
        - codebuild-project-build-phase-failure
      Name: !Sub UploadArtifacts-started-succeeded-${AWS::Region}-${GitHubBranchName}
      Resource: !GetAtt CodeBuildForTargetBranch.Arn
      Targets: 
        - TargetAddress: !If
            - CreateSNSForCICD
            - !GetAtt SNSForCICD.Outputs.SNSTopicArn
            - !Ref SNSForCICDArn
          TargetType: SNS
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  NotificationRuleForTags:
    Type: AWS::CodeStarNotifications::NotificationRule
    Properties: 
      DetailType: FULL
      EventTypeIds:
        # Build state
        - codebuild-project-build-state-failed
        # Build state
        - codebuild-project-build-phase-failure
      Name: !Sub UploadArtifacts-started-succeeded-${AWS::Region}-Tags
      Resource: !GetAtt CodeBuildForTags.Arn
      Targets: 
        - TargetAddress: !If
            - CreateSNSForCICD
            - !GetAtt SNSForCICD.Outputs.SNSTopicArn
            - !Ref SNSForCICDArn
          TargetType: SNS
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue