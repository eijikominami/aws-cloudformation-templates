AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description:  AWSCloudFormationTemplates/cicd/upload-artifacts creates the environment for build applications.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: 'Artifact Configuration'
        Parameters: 
          - DestinationBucketNameForMasterBranch
          - DestinationBucketNameForTargetBranch
      - Label: 
          default: 'Build Configuration'
        Parameters: 
          - BuildSpecForContainers
          - BuildSpecForCommits
          - BuildSpecForTags
          - ImageForContainers
          - ImageForCommits
          - ImageForTags
      - Label: 
          default: 'Source Configuration'
        Parameters: 
          - GitHubOAuthToken
          - GitHubCloneUrl
          - GitHubBranchName
      - Label: 
          default: 'Notification Configuration'
        Parameters: 
          - SNSForAlertArn
          - SNSForDeploymentArn
      - Label: 
          default: 'Tag Configuration'
        Parameters: 
          - Environment
          - TagKey
          - TagValue

Parameters:
  BuildSpecForContainers:
    Type: String
    Default: buildspec.yml
    AllowedPattern: .+
    Description: The build specification file for containers [required]
  BuildSpecForCommits:
    Type: String
    Default: buildspec.yml
    AllowedPattern: .+
    Description: The build specification file for new commits [required]
  BuildSpecForTags:
    Type: String
    Default: buildspec.yml
    AllowedPattern: .+
    Description: The build specification file for new tags [required]
  DestinationBucketNameForMasterBranch:
    Type: String
    AllowedPattern: .+
    Description: The name of the bucket where Amazon S3 should store production artifacts [required]  
  DestinationBucketNameForTargetBranch:
    Type: String
    AllowedPattern: .+
    Description: The name of the bucket where Amazon S3 should store development artifacts [required]  
  ImageForContainers:
    Type: String
    Default: aws/codebuild/amazonlinux2-aarch64-standard:3.0
    AllowedPattern: ^aws/codebuild/amazonlinux2-aarch64.+$
    Description: The image tag or image digest that identifies the Docker image to use for this build project [required]
  ImageForCommits:
    Type: String
    Default: aws/codebuild/amazonlinux2-aarch64-standard:2.0
    AllowedPattern: ^aws/codebuild/amazonlinux2-aarch64.+$
    Description: The image tag or image digest that identifies the Docker image to use for this build project [required]
  ImageForTags:
    Type: String
    Default: aws/codebuild/amazonlinux2-aarch64-standard:2.0
    AllowedPattern: ^aws/codebuild/amazonlinux2-aarch64.+$
    Description: The image tag or image digest that identifies the Docker image to use for this build project [required]
  GitHubOAuthToken:
    Type: String
    AllowedPattern: .+
    Description: The OAuth token to access GitHub [required]
  GitHubCloneUrl:
    Type: String
    AllowedPattern: ^https://github.com/.+$
    Description: The HTTPS clone URL to the repository that contains the source and the build spec [required]
  GitHubBranchName:
    Type: String
    AllowedPattern: .+
    Description: The branch name of GitHub [required]
  SNSForAlertArn:
    Type: String
    Default: ''
    Description: The Amazon SNS topic ARN for alert
  SNSForDeploymentArn:
    Type: String
    Default: '' 
    Description: The Amazon SNS topic ARN for deployment information
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates
    AllowedPattern: .+

Conditions:
  CreateSNSForAlert: !Equals [ !Ref SNSForAlertArn, '']
  CreateSNSForDeployment: !Equals [ !Ref SNSForDeploymentArn, '']
  Development: !Equals [ !Ref Environment, development]

Resources:
  # Nested Stack
  SNSForAlert:
    Condition: CreateSNSForAlert
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.2.7
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        TopicName: !Sub Alert-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  SNSForDeployment:
    Condition: CreateSNSForDeployment
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.2.7
      Parameters:
        TopicName: !Sub Deployment-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  CodeBuild:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        BuildSpecForContainers: !Ref BuildSpecForContainers
        BuildSpecForCommits: !Ref BuildSpecForCommits
        BuildSpecForTags: !Ref BuildSpecForTags
        DestinationBucketNameForMasterBranch: !Ref DestinationBucketNameForMasterBranch
        DestinationBucketNameForTargetBranch: !Ref DestinationBucketNameForTargetBranch
        GitHubCloneUrl: !Ref GitHubCloneUrl
        GitHubOAuthToken: !Ref GitHubOAuthToken
        GitHubBranchName: !Ref GitHubBranchName
        ImageForContainers: !Ref ImageForContainers
        ImageForCommits: !Ref ImageForCommits
        ImageForTags: !Ref ImageForTags
        SNSForAlertArn:
          - !If
            - CreateSNSForAlert
            - !GetAtt SNSForAlert.Outputs.SNSTopicArn
            - !Ref SNSForAlertArn
        SNSForDeploymentArn:
          - !If
            - CreateSNSForDeployment
            - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
            - !Ref SNSForDeploymentArn
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      Tags:
        - Key: Name
          Value: !Sub policy-${AWS::StackName}-${AWS::Region}
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/cicd/codebuild.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/web-servers/codebuild.yaml