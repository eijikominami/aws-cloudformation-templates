AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWSCloudFormationTemplates/static-web-hosting creates an environment for static website hosting.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label: 
          default: 'Analysis Configuration'
        Parameters: 
          - AccountIdForAnalysis
          - BucketNameForAnalysis
      - Label: 
          default: 'CloudFront Configuration'
        Parameters: 
          - CertificateManagerARN
          - CloudFrontAdditionalMetrics
          - CloudFrontDefaultTTL
          - CloudFrontMinimumTTL
          - CloudFrontMaximumTTL
          - CloudFrontViewerProtocolPolicy
          - CloudFrontDefaultRootObject
          - CloudFrontAdditionalName
          - CloudFrontOriginShield
          - CloudFrontSecondaryOriginId
          - CloudFrontRestrictViewerAccess
          - CloudFront403ErrorResponsePagePath
          - CloudFront404ErrorResponsePagePath
          - CloudFront500ErrorResponsePagePath
          - DomainName
          - Logging
          - S3DestinationBucketArnOfCrossRegionReplication
      - Label: 
          default: 'CloudFront Realtime Dashboard Configuration'
        Parameters: 
          - RealtimeDashboardElasticSearchVolumeSize
          - RealtimeDashboardElasticSearchInstanceType
          - RealtimeDashboardElasticSearchMasterType
          - RealtimeDashboardElasticSearchMasterUserName
          - RealtimeDashboardElasticSearchMasterUserPassword
          - RealtimeDashboardElasticSearchLifetime
          - RealtimeDashboardElasticsearchVersion
          - RealtimeDashboardKinesisFirehoseStreamNameSuffix
          - RealtimeDashboardState
          - RealtimeDashboardSamplingRate
          - RealtimeDashboardKinesisShardCount
          - RealtimeKinesisNumberOfPutRecordThreshold
      - Label: 
          default: 'Application Signals Configuration'
        Parameters: 
          - CloudWatchAppicationSignals
          - SyntheticsCanaryName
      - Label: 
          default: 'Route53 Configuration'
        Parameters: 
          - Route53HostedZoneId
      - Label: 
          default: 'WAF Configuration'
        Parameters: 
          - WebACLArn
      - Label: 
          default: 'CI/CD Pipeline Configuration'
        Parameters:
          - BucketNameForArtifact
          - CodeStarConnectionArn
          - GitHubOwnerNameForWebsite
          - GitHubRepoNameForWebsite
          - GitHubBranchNameForWebsite
      - Label: 
          default: 'Notification Configuration'
        Parameters:
          - AlarmLevel
          - SNSForAlertArn
          - SNSForDeploymentArn
      - Label: 
          default: 'Tag Configuration'
        Parameters:
          - Environment 
          - TagKey
          - TagValue

Parameters:
  AccountIdForAnalysis:
    Type: String
    Default: ''
    Description: The AWS account id for log analysis
  AlarmLevel:
    Type: String
    Default: NOTICE
    AllowedValues:
      - NOTICE
      - WARNING
    Description: The alarm level of CloudWatch alarms
  BucketNameForAnalysis:
    Type: String
    Default: ''
    Description: The Amazon S3 bucket name for log analysis
  BucketNameForArtifact:
    Type: String
    Default: ''
    Description: The bucket name artifact art stored
  CertificateManagerARN:
    Default: ''
    Type: String
    Description: The ARN of an SSL Certifiation attached to CloudFront
  CloudFrontAdditionalMetrics:
    Type: String
    Default: DISABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable CloudFront additional metrics [required]
  CloudFrontDefaultTTL:
    Default: 86400
    MinValue: 0
    Type: Number
    Description: CloudFront Default TTL [required]
  CloudFrontMinimumTTL:
    Default: 0
    MinValue: 0
    Type: Number
    Description: CloudFront Minimum TTL [required]
  CloudFrontMaximumTTL:
    Default: 31536000
    MinValue: 0
    Type: Number
    Description: CloudFront Maximum TTL [required]
  CloudFrontViewerProtocolPolicy:
    Type: String
    Default: redirect-to-https
    AllowedValues:
      - allow-all
      - redirect-to-https
      - https-only
    Description: CloudFront Viewer Protocol Policy [required]
  CloudFrontDefaultRootObject:
    Type: String
    Default: index.html
    AllowedPattern: .+
    Description: CloudFront Viewer Protocol Policy [required]
  CloudFrontAdditionalName:
    Type: String
    Default: ''
    Description: The CNAME attached to CloudFront
  CloudFrontOriginShield:
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
    Description: A flag that specifies whether Origin Shield is enabled [required]
  CloudFrontSecondaryOriginId:
    Type: String
    Default: ''
    Description: The S3 bucket name for Secondary Origin
  CloudFrontRestrictViewerAccess:
    Type: String
    Default: DISABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable Restrict Viewer Access [required]  
  CloudFront403ErrorResponsePagePath:
    Type: String
    Default: ''
    Description: The path to the 403 custom error page
  CloudFront404ErrorResponsePagePath:
    Type: String
    Default: ''
    Description: The path to the 404 custom error page
  CloudFront500ErrorResponsePagePath:
    Type: String
    Default: ''
    Description: The path to the 500 custom error page
  CloudWatchAppicationSignals:
    Type: String
    Default: DISABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable CloudFront additional metrics [required]
  CodeStarConnectionArn:
    Type: String
    Default: ''
    Description: The Amazon Resource Name (ARN) of the CodeStar connection
  DomainName:
    Type: String
    AllowedPattern: .+
    Description: The CNAME attached to CloudFront [required]
  GitHubOwnerNameForWebsite:
    Type: String
    Default: '' 
    Description: The GitHub owner name
  GitHubRepoNameForWebsite:
    Type: String
    Default: '' 
    Description: The GitHub repository name
  GitHubBranchNameForWebsite:
    Type: String
    Default: master
    AllowedPattern: .+
    Description: The Branch name of GitHub
  Logging:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable logging [required]
  RealtimeDashboardElasticSearchVolumeSize:
    Type: Number
    Default: 10
    MinValue: 10
    Description: The volume size (GB) of ElasticSearch Service [required]
  RealtimeDashboardElasticSearchInstanceType:
    Type: String
    Default: r5.large.search
    AllowedPattern: .+
    Description: The instance type of ElasticSearch Service [required]
  RealtimeDashboardElasticSearchMasterType:
    Type: String
    Default: r5.large.search
    AllowedPattern: .+
    Description: The master type of ElasticSearch Service [required]
  RealtimeDashboardElasticSearchLifetime:
    Type: Number
    Default: 1
    MinValue: 0
    Description: The lifetime (hour) of ElasticSearch Service [required]
  RealtimeDashboardElasticSearchMasterUserName:
    Type: String
    Default: root
    AllowedPattern: .+
    Description: The user name of ElasticSearch Service [required]
  RealtimeDashboardElasticSearchMasterUserPassword:
    Type: String
    Default: Password1+
    AllowedPattern: .+
    NoEcho: true
    Description: The password of ElasticSearch Service [required]
  RealtimeDashboardElasticsearchVersion:
    Type: String
    Default: OpenSearch_2.13
    AllowedPattern: .+
    Description: The version of ElasticSearch Service [required]
  RealtimeDashboardKinesisFirehoseStreamNameSuffix:
    Type: String
    Default: default
    AllowedPattern: .+
    Description: The suffix of the Kinesis Firehose stream.
  RealtimeDashboardState:
    Type: String
    Default: DISABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable real-time dashboard [required] 
  RealtimeDashboardSamplingRate:
    Type: Number
    Default: 100
    MinValue: 1
    MaxValue: 100 
    Description: The sampling rate of logs sent by CloudFront [required]
  RealtimeDashboardKinesisShardCount:
    Type: Number
    Default: 1
    MinValue: 1
    Description: The shard count of Kinesis [required]
  RealtimeKinesisNumberOfPutRecordThreshold:
    Type: Number
    Default: 12000000
    MinValue: 0  
    Description: The threshold of PutRecord API calls [required]
  Route53HostedZoneId:
    Type: String
    Default: ''
    Description: Route53 hosted zone id
  S3DestinationBucketArnOfCrossRegionReplication:
    Type: String
    Default: ''
    Description: The S3 bucket name for Cross Region Replication
  SyntheticsCanaryName:
    Type: String
    Default: ''
    Description: CloudWatch Synthetics Canary Name 
  WebACLArn:
    Type: String
    Default: '' 
    Description: Web ACL ARN
  SNSForAlertArn:
    Type: String
    Default: '' 
    Description: The Amazon SNS topic ARN for alert
  SNSForDeploymentArn:
    Type: String
    Default: ''
    Description: The Amazon SNS topic ARN for deployment information
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates
    AllowedPattern: .+

Conditions:
  CertificateExists: !Not [ !Equals [ !Ref CertificateManagerARN, '' ] ]
  CrossRegionReplication: !Not [ !Equals [ !Ref S3DestinationBucketArnOfCrossRegionReplication, '' ]]
  CreateLog: !Equals [ !Ref Logging, ENABLED ]
  CreatePipeline: !And [ !Not [ !Equals [ !Ref GitHubOwnerNameForWebsite, '' ] ], !Not [ !Equals [ !Ref GitHubRepoNameForWebsite, '' ] ] ]
  CreateRealtimeDashboard: !Equals [ !Ref RealtimeDashboardState, ENABLED ]
  CreateS3ReplicationForAnalysis: !And [ !Not [ !Equals [ !Ref AccountIdForAnalysis, ''] ], !Not [ !Equals [ !Ref BucketNameForAnalysis, ''] ]]
  CreateSNSForAlert: !Equals [ !Ref SNSForAlertArn, '']
  CreateSNSForDeployment: !Equals [ !Ref SNSForDeploymentArn, '']
  ApplicationSignals: !And [ !Not [ !Equals [ !Ref SyntheticsCanaryName, ''] ], !Equals [ !Ref CloudWatchAppicationSignals, ENABLED ] ]
  Development: !Equals [ !Ref Environment, development]

Resources:
  # Nested Stack
  CloudFront:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        AlarmLevel: !Ref AlarmLevel
        CertificateManagerARN: !Ref CertificateManagerARN
        DomainName: !If
          - CertificateExists
          - !Ref DomainName
          - ''
        CloudFrontAdditionalMetrics: !Ref CloudFrontAdditionalMetrics
        CloudFrontDefaultTTL: !Ref CloudFrontDefaultTTL
        CloudFrontMinimumTTL: !Ref CloudFrontMinimumTTL
        CloudFrontMaximumTTL: !Ref CloudFrontMaximumTTL
        CloudFrontViewerProtocolPolicy: !Ref CloudFrontViewerProtocolPolicy
        CloudFrontDefaultRootObject: !Ref CloudFrontDefaultRootObject
        CloudFrontAdditionalName: !Ref CloudFrontAdditionalName
        CloudFrontOriginAccessControlId: !GetAtt CloudFrontOriginAccessControl.Id
        CloudFrontOriginDomainName: !GetAtt S3ForWebHosting.DomainName
        CloudFrontOriginShield: !Ref CloudFrontOriginShield
        CloudFrontOriginType: S3
        CloudFrontSecondaryOriginId: !Ref CloudFrontSecondaryOriginId
        CloudFrontRestrictViewerAccess: !Ref CloudFrontRestrictViewerAccess
        CloudFront403ErrorResponsePagePath: !Ref CloudFront403ErrorResponsePagePath
        CloudFront404ErrorResponsePagePath: !Ref CloudFront404ErrorResponsePagePath
        CloudFront500ErrorResponsePagePath: !Ref CloudFront500ErrorResponsePagePath
        LogicalName: !Ref AWS::StackName
        RealtimeDashboardElasticSearchVolumeSize: !Ref RealtimeDashboardElasticSearchVolumeSize
        RealtimeDashboardElasticSearchInstanceType: !Ref RealtimeDashboardElasticSearchInstanceType
        RealtimeDashboardElasticSearchMasterType: !Ref RealtimeDashboardElasticSearchMasterType
        RealtimeDashboardElasticSearchLifetime: !Ref RealtimeDashboardElasticSearchLifetime
        RealtimeDashboardElasticSearchMasterUserName: !Ref RealtimeDashboardElasticSearchMasterUserName
        RealtimeDashboardElasticSearchMasterUserPassword: !Ref RealtimeDashboardElasticSearchMasterUserPassword
        RealtimeDashboardElasticsearchVersion: !Ref RealtimeDashboardElasticsearchVersion
        RealtimeDashboardKinesisFirehoseStreamNameSuffix: !Ref RealtimeDashboardKinesisFirehoseStreamNameSuffix
        RealtimeDashboardState: !Ref RealtimeDashboardState
        RealtimeDashboardSamplingRate: !Ref RealtimeDashboardSamplingRate
        RealtimeDashboardKinesisShardCount: !Ref RealtimeDashboardKinesisShardCount
        RealtimeKinesisNumberOfPutRecordThreshold: !Ref RealtimeKinesisNumberOfPutRecordThreshold
        Route53HostedZoneId: !Ref Route53HostedZoneId
        Logging: !Ref Logging
        LogBucketName: !Ref S3ForAccessLog
        WebACLArn: !Ref WebACLArn
        SNSForAlertArn: !Ref SNSForAlertArn
        SNSForDeploymentArn: !Ref SNSForDeploymentArn
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/edge/cloudfront.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/edge/cloudfront.yaml
  Synthetics:
    Condition: ApplicationSignals
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        AlarmLevel: !Ref AlarmLevel
        CanaryName: !Ref SyntheticsCanaryName
        DomainName: !Ref DomainName
        SNSForAlertArn: !If 
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        SNSForDeploymentArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue 
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/cloudops/synthetics-heartbeat.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/cloudops/synthetics-heartbeat.yaml
  InternetMonitor:
    Condition: ApplicationSignals
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        ResourceNames: !Join
          - ''
          - - !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/
            - !GetAtt CloudFront.Outputs.Id
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue 
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/cloudops/internetmonitor.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/cloudops/internetmonitor.yaml
  # CI/CD Pipeline
  CodePipeline:
    Condition: CreatePipeline
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        CodeStarConnectionArn: !Ref CodeStarConnectionArn
        GitHubOwnerName: !Ref GitHubOwnerNameForWebsite
        GitHubRepoName: !Ref GitHubRepoNameForWebsite
        GitHubBranchName: !Ref GitHubBranchNameForWebsite
        S3BucketNameForArtifact: !Ref BucketNameForArtifact
        S3BucketNameForWebHosting: !Ref S3ForWebHosting
        LogicalName: !Ref AWS::StackName
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/static-website-hosting/cicd.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/static-website-hosting/cicd.yaml
  SNSForAlert:
    Condition: CreateSNSForAlert
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.2.9
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        TopicName: !Sub Alert-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  SNSForDeployment:
    Condition: CreateSNSForDeployment
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.2.9
      Parameters:
        TopicName: !Sub Deployment-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  # IAM
  IAMRoleForCrossRegionReplication:
    Condition: CrossRegionReplication
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3Replication
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetReplicationConfiguration
                  - s3:ListBucket
                Resource: !Join
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref DomainName
              - Effect: Allow
                Action:
                  - s3:GetObjectVersion
                  - s3:GetObjectVersionAcl
                  - s3:GetObjectVersionTagging
                  - s3:GetObjectRetention
                  - s3:GetObjectLegalHold
                Resource: !Join
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref DomainName
                    - /*
              - Effect: Allow
                Action:
                  - s3:ReplicateObject
                  - s3:ReplicateDelete
                  - s3:ReplicateTags
                Resource: !Join
                  - ''
                  - - !Ref S3DestinationBucketArnOfCrossRegionReplication
                    - /*
      RoleName: !Sub '${AWS::StackName}-S3ReplicationRole-${AWS::Region}'
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  IAMRoleForS3Replication:
    Condition: CreateS3ReplicationForAnalysis
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceArn: !Sub 'arn:aws:s3:::${S3ForAccessLog}'
      Description: A role required for S3 to access another S3 bucket for analysis.
      Policies:
        - PolicyName: S3Replication
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetReplicationConfiguration
                  - s3:ListBucket
                Resource:
                  - !Sub 'arn:aws:s3:::${S3ForAccessLog}'
              - Effect: Allow
                Action:
                  - s3:GetObjectVersionForReplication
                  - s3:GetObjectVersionAcl
                  - s3:GetObjectVersionTagging
                Resource:
                  - !Sub 'arn:aws:s3:::${S3ForAccessLog}/*'
              - Effect: Allow
                Action:
                  - s3:ReplicateObject
                  - s3:ReplicateDelete
                  - s3:ReplicateTags
                  - s3:ObjectOwnerOverrideToBucketOwner
                Resource:
                  - !Sub 'arn:aws:s3:::${BucketNameForAnalysis}/*'
      RoleName: !Sub ${AWS::StackName}-S3-Replication-${AWS::Region}
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue  
  # CloudFront
  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties: 
      OriginAccessControlConfig: 
        Description: !Sub Origin access control for ${S3ForWebHosting}
        Name: !GetAtt S3ForWebHosting.DomainName
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
  # S3
  S3ForWebHosting:
    Type: AWS::S3::Bucket
    # Retain this bucket when a stack is deleted.
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration: 
          - ServerSideEncryptionByDefault: 
              SSEAlgorithm: AES256
      BucketName: !Ref DomainName
      LifecycleConfiguration:
        Rules:
          - Id: NonCurrentVersionExpiration
            NoncurrentVersionExpirationInDays: 90
            Status: Enabled
      LoggingConfiguration: !If
        - CreateLog
        - DestinationBucketName: !Ref S3ForAccessLog
          LogFilePrefix: !Sub S3-${DomainName}/
        - !Ref AWS::NoValue
      MetricsConfigurations: 
        - Id: ALL
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      ReplicationConfiguration: !If
       - CrossRegionReplication
       - Role: !GetAtt IAMRoleForCrossRegionReplication.Arn
         Rules:
           - Destination: 
               Bucket: !Ref S3DestinationBucketArnOfCrossRegionReplication
             Id: !Ref S3DestinationBucketArnOfCrossRegionReplication
             # All Objects
             Prefix: ''
             Status: Enabled
       - !Ref AWS::NoValue
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      VersioningConfiguration:
        Status: Enabled
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref S3ForWebHosting
      PolicyDocument:
        Version: 2012-10-17
        Id: !Ref S3ForWebHosting
        Statement:
          - Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: 
              - !GetAtt S3ForWebHosting.Arn
              - !Join
                - ''
                - - !GetAtt S3ForWebHosting.Arn
                  - /*
            Condition:
              NumericLessThan: 
                s3:TlsVersion: 1.2
              Bool:
                aws:SecureTransport: true
          - Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action:
              - s3:GetObject
            Resource:
              - !Sub arn:aws:s3:::${S3ForWebHosting}/*
            Condition:
              StringEquals:
                AWS:SourceArn: !Join 
                  - ''
                  - - !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/
                    - !GetAtt CloudFront.Outputs.Id
  S3ForAccessLog:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration: 
          - ServerSideEncryptionByDefault: 
              SSEAlgorithm: AES256
      BucketName: !Join 
        - ''
        - - !Join ["-", !Split [".", !Ref DomainName]]
          - !Sub -logs-${AWS::Region}-${AWS::AccountId}
      LifecycleConfiguration:
        Rules:
          - Id: ExpirationInDays
            ExpirationInDays: 60
            Status: Enabled
          - !If 
            - CreateS3ReplicationForAnalysis
            - Id: NoncurrentVersionExpirationInDays
              NoncurrentVersionExpiration: 
                NewerNoncurrentVersions: 1
                NoncurrentDays: 1
              Status: Enabled
            - !Ref AWS::NoValue
      OwnershipControls:
        Rules: 
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      ReplicationConfiguration: !If
        - CreateS3ReplicationForAnalysis
        - Role: !Sub arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-S3-Replication-${AWS::Region}
          Rules: 
            - Destination: 
                AccessControlTranslation:
                  Owner: Destination
                Account: !Ref AccountIdForAnalysis
                Bucket: !Sub arn:aws:s3:::${BucketNameForAnalysis}
              Id: Analysis
              Status: Enabled
        - !Ref AWS::NoValue
      VersioningConfiguration: !If 
        - CreateS3ReplicationForAnalysis
        - Status: Enabled
        - !Ref AWS::NoValue
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  S3BucketPolicyForAccessLog:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref S3ForAccessLog
      PolicyDocument:
        Version: 2012-10-17
        Id: !Ref S3ForAccessLog
        Statement:
          - Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: 
              - !GetAtt S3ForAccessLog.Arn
              - !Join
                - ''
                - - !GetAtt S3ForAccessLog.Arn
                  - /*
            Condition:
              NumericLessThan: 
                s3:TlsVersion: 1.2
              Bool:
                aws:SecureTransport: true

Outputs:
  CloudFrontURL:
    Description: CloudFront URL
    Value: !GetAtt CloudFront.Outputs.CloudFrontURL
  IAMRoleForS3Replication:
    Condition: CreateS3ReplicationForAnalysis
    Description: IAM Role ARN for S3 Replication 
    Value: !GetAtt IAMRoleForS3Replication.Arn
  KibanaURL:
    Condition: CreateRealtimeDashboard
    Description: Kibana URL
    Value: !GetAtt CloudFront.Outputs.KibanaURL
  S3BucketURL:
    Description: S3 Bucket URL
    Value: !Sub https://${S3ForWebHosting}.s3-${AWS::Region}.amazonaws.com