AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWSCloudFormationTemplates/security sets basic configurations for security.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: CloudTrail Configuration
        Parameters:
          - AWSCloudTrail
          - AWSCloudTrailAdditionalFilters
          - AWSCloudTrailS3Trail
      - Label:
          default: Config Configuration
        Parameters:
          - AWSConfig
          - AWSConfigAutoRemediation
      - Label:
          default: GuardDuty Configuration
        Parameters:
          - AmazonGuardDuty
      - Label:
          default: IAM Acceess Analyzer Configuration
        Parameters:
          - IAMAccessAnalyzer
      - Label:
          default: Macie Configuration
        Parameters:
          - AmazonMacie
      - Label:
          default: SecurityHub Configuration
        Parameters:
          - IAMUserArnToAssumeAWSSupportRole
          - AWSSecurityHub
          - AWSSecurityHubStandards
      - Label:
          default: Notification Configuration
        Parameters:
          - SNSForAlertArn
          - SNSForDeploymentArn
      - Label:
          default: Tag Configuration
        Parameters:
          - Environment
          - TagKey
          - TagValue

Parameters:
  AWSCloudTrail:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - CREATED_BY_CONTROL_TOWER
      - DISABLED
    Description: Enable or disable AWS CloudTrail [required]
  AWSCloudTrailAdditionalFilters:
    Type: String
    Default: ''
    Description: Additional expression of CloudWatch Logs metric filters
  AWSCloudTrailS3Trail:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable CloudTrail trail [required]
  AWSConfig:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable AWS Config [required]
  AWSConfigAutoRemediation:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable auto remediation [required]
  AmazonGuardDuty:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - NOTIFICATION_ONLY
      - DISABLED
    Description: Enable or disable Amazon GuardDuty [required]
  AmazonMacie:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - NOTIFICATION_ONLY
      - DISABLED
    Description: Enable or disable Amazon Macie [required]
  AWSSecurityHub:
    Type: String
    Default: STANDARDS_ONLY
    AllowedValues:
      - STANDARDS_ONLY
      - STAMDARDS_ALERAM_HIGH
      - STAMDARDS_ALERAM_MIDIUM
      - STANDARDS_ALERAM_ALL
      - ALERAM_HIGH
      - ALERAM_MIDIUM
      - ALERAM_ALL
      - DISABLED
    Description: Enable or disable AWS SecurityHub [required]
  AWSSecurityHubStandards:
    Type: CommaDelimitedList
    Default: FSBP, CIS
    AllowedValues:
      - FSBP
      - CIS
      - NIST
      - PCIDSS
    Description: The standard that you want to enable (FSBP, CIS, NIST, PCIDSS)
  IAMAccessAnalyzer:
    Type: String
    Default: ACCOUNT
    AllowedValues:
      - ACCOUNT
      - ORGANIZATION
      - NOTIFICATION_ONLY
      - DISABLED
    Description: Enable or disable IAM Access Analyzer [required]
  IAMUserArnToAssumeAWSSupportRole:
    Type: String
    Default: ''
    Description: The IAM User ARN to assume AWS Support role
  SNSForAlertArn:
    Type: String
    Default: ''
  SNSForDeploymentArn:
    Type: String
    Default: ''
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates
    AllowedPattern: .+
    
Conditions:
  CreateCloudTrail: !Or [ !Equals [ !Ref AWSCloudTrail, ENABLED ], !Equals [ !Ref AWSCloudTrail, CREATED_BY_CONTROL_TOWER ] ]
  CreateConfig: !Equals [ !Ref AWSConfig, ENABLED ]
  CreateGuardDuty: !Or [ !Equals [ !Ref AmazonGuardDuty, ENABLED], !Equals [!Ref AmazonGuardDuty, NOTIFICATION_ONLY ] ]
  CreateGuardDutyEventBridgeOnly: !Equals [ !Ref AmazonGuardDuty, NOTIFICATION_ONLY ]
  CreateIAMAccessAnalyzer: !Not [ !Equals [ !Ref IAMAccessAnalyzer, DISABLED ] ]
  CreateIAMRoleForAWSSupport: !Not [ !Equals [!Ref IAMUserArnToAssumeAWSSupportRole , ''] ]
  CreateMacie: !And [ !Equals [ !Ref AmazonMacie, ENABLED ], !Equals [ !Ref AmazonMacie, NOTIFICATION_ONLY ] ]
  CreateMacieEventBridgeOnly: !Equals [ !Ref AmazonMacie, NOTIFICATION_ONLY ]
  CreateSecurityHub: !Not [ !Equals [ !Ref AWSSecurityHub, DISABLED ] ]
  CreateSNSForAlert: !Equals [ !Ref SNSForAlertArn ,'']
  CreateSNSForDeployment: !Equals [ !Ref SNSForDeploymentArn,'']
  CloudTrailIsCreatedByControlTower: !Equals [ !Ref AWSCloudTrail, CREATED_BY_CONTROL_TOWER ]
  Development: !Equals [ !Ref Environment, development ]

Resources:
  IAM:
    Condition: CreateIAMAccessAnalyzer
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        AnalyzerType: !Ref IAMAccessAnalyzer
        SNSForAlertArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        SNSForDeploymentArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
        Environment: !Ref Environment
        LogicalName: !Ref AWS::StackName
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/security/iam.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/security/iam.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  SecurityHub:
    Condition: CreateSecurityHub
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        SecurityHubStandards: !Join
          - ','
          - !Ref AWSSecurityHubStandards
        SecurityHubType: !Ref AWSSecurityHub
        SNSForAlertArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        SNSForDeploymentArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
        LogicalName: !Ref AWS::StackName
        TagValue: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/security/securityhub.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/security/securityhub.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  GuardDuty:
    Condition: CreateGuardDuty
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        Detector: !If
          - CreateGuardDutyEventBridgeOnly
          - DISABLED
          - ENABLED
        LogicalName: !Ref AWS::StackName
        SNSForAlertArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
        SNSForDeploymentArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/security/guardduty.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/security/guardduty.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  CloudTrail:
    Condition: CreateCloudTrail
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        AccessLogBucketName: !Ref S3ForAccessLog
        AdditionalFilters: !Ref AWSCloudTrailAdditionalFilters
        IsAlreadyCreatedByControlTower: !If 
          - CloudTrailIsCreatedByControlTower
          - true
          - false
        S3Trail: !Ref AWSCloudTrailS3Trail
        LogicalName: !Ref AWS::StackName
        SnsTopicARN: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/security/cloudtrail.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/security/cloudtrail.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  Config:
    Type: AWS::CloudFormation::Stack
    Condition: CreateConfig
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        AWSConfigAutoRemediation: !Ref AWSConfigAutoRemediation
        SNSForAlertArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        SNSForDeploymentArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
        LogicalName: !Ref AWS::StackName
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/security/config.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/security/config.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  Macie:
    Type: AWS::CloudFormation::Stack
    Condition: CreateMacie
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        Session: !If 
          - CreateMacieEventBridgeOnly
          - DISABLED
          - ENABLED
        SNSForAlertArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        SNSForDeploymentArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
        LogicalName: !Ref AWS::StackName
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/security/macie.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/security/macie.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  SNSForAlert:
    Condition: CreateSNSForAlert
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.2.1
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        TopicName: !Sub Alert-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  SNSForDeployment:
    Condition: CreateSNSForDeployment
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.2.1
      Parameters:
        TopicName: !Sub Deployment-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  IAMRoleForAWSSupport:
    Condition: CreateIAMRoleForAWSSupport
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref IAMUserArnToAssumeAWSSupportRole
            Action: sts:AssumeRole
      Description: A role required for CIS AWS Foundations to access AWS Support.
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSSupportAccess
      RoleName: !Sub ${AWS::StackName}-AWSSupport-${AWS::Region}
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  S3ForAccessLog:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub defaultsecuritysettings-logs-${AWS::Region}-${AWS::AccountId}
      LifecycleConfiguration:
        Rules:
          - Id: ExpirationInDays
            ExpirationInDays: 60
            Status: Enabled
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  S3BucketPolicyForAccessLog:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3ForAccessLog
      PolicyDocument:
        Version: 2012-10-17
        Id: !Ref S3ForAccessLog
        Statement:
          - Effect: Deny
            Principal: '*'
            Action: s3:*
            Resource:
              - !GetAtt S3ForAccessLog.Arn
              - !Join
                - ''
                - - !GetAtt S3ForAccessLog.Arn
                  - /*
            Condition:
              Bool:
                aws:SecureTransport: false
  CloudWatchEventsForHealth:
    Type: AWS::Events::Rule
    Properties:
      Description: !Sub Rule for AWS Health created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.health
      Name: Health
      State: ENABLED
      Targets:
        - Arn: !If
            - CreateSNSForAlert
            - !GetAtt SNSForAlert.Outputs.SNSTopicArn
            - !Ref SNSForAlertArn
          Id: CloudWatchEventsForHealth
  AlarmEventsForHealth:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-events
        SemanticVersion: 2.2.1
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        CustomAlarmName: !Ref AWS::StackName
        SNSTopicArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        EventsRuleName: !Ref CloudWatchEventsForHealth
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  CloudWatchEventsForTrustedAdvisor:
    Type: AWS::Events::Rule
    Properties:
      Description: !Sub Rule for AWS Trusted Advisor created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.trustedadvisor
        detail-type:
          - Trusted Advisor Check Item Refresh Notification
        detail:
          state:
            - WARN
            - ERROR
      Name: TrustedAdvisor
      State: ENABLED
      Targets:
        - Arn: !If
            - CreateSNSForAlert
            - !GetAtt SNSForAlert.Outputs.SNSTopicArn
            - !Ref SNSForAlertArn
          Id: CloudWatchEventsForHealth
  AlarmEventsForTrustedAdvisor:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-events
        SemanticVersion: 2.2.1
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        CustomAlarmName: !Ref AWS::StackName
        SNSTopicArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        EventsRuleName: !Ref CloudWatchEventsForTrustedAdvisor
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
        
Outputs:
  SNSForAlertArn:
    Description: SNS ARN for Alert
    Value: !If
      - CreateSNSForAlert
      - !GetAtt SNSForAlert.Outputs.SNSTopicArn
      - !Ref SNSForAlertArn
  SNSForDeploymentArn:
    Description: SNS ARN for Deployment
    Value: !If
      - CreateSNSForDeployment
      - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
      - !Ref SNSForDeploymentArn