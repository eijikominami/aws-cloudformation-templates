AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWSCloudFormationTemplates/security sets basic configurations for security.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label: 
          default: 'CloudTrail and Config Configuration'
        Parameters: 
          - AuditOtherRegions
          - AutoRemediation
      - Label: 
          default: 'Config Configuration'
        Parameters: 
          - AWSConfig
      - Label: 
          default: 'Detective Configuration'
        Parameters: 
          - AmazonDetective
      - Label: 
          default: 'SecurityHub Configuration'
        Parameters: 
          - IAMUserArnToAssumeAWSSupportRole
          - NotificationFilterAboutSecurityChecks
      - Label: 
          default: 'Log Analysis Configuration'
        Parameters: 
          - AccountIdForAnalysis
          - BucketNameForAnalysis
      - Label: 
          default: 'Notification Configuration'
        Parameters: 
          - SNSForAlertArn
          - SNSForDeploymentArn
      - Label: 
          default: 'Tag Configuration'
        Parameters:
          - Environment 
          - TagKey
          - TagValue

Parameters:
  AccountIdForAnalysis:
    Type: String
    Default: ''
    Description: The AWS account id for log analysis
  AWSConfig:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable AWS Config [required]
  AuditOtherRegions:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable cross region audit [required]
  AutoRemediation:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable auto remediation [required]
  AmazonDetective:
    Type: String
    Default: DISABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable Amazon Detective [required]
  BucketNameForAnalysis:
    Type: String
    Default: ''
    Description: The Amazon S3 bucket name for log analysis
  IAMUserArnToAssumeAWSSupportRole:
    Type: String
    Default: ''
    Description: The IAM User ARN to assume AWS Support role
  NotificationFilterAboutSecurityChecks:
    Type: String
    Default: DENY_ALL
    AllowedValues:
      - DENY_ALL
      - MEDIUM
      - ALLOW_ALL
    Description: The notification filter type about Security Hub Security Checks [required]
  SNSForAlertArn:
    Type: String
    Default: '' 
  SNSForDeploymentArn:
    Type: String
    Default: ''
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates
    AllowedPattern: .+

Conditions:
  CreateConfig: !Equals [ !Ref AWSConfig, ENABLED]
  CreateDetective: !Equals [ !Ref AmazonDetective, ENABLED]
  CreateIAMRoleForAWSSupport: !Not [ !Equals [ !Ref IAMUserArnToAssumeAWSSupportRole, ''] ]
  CreateS3ReplicationForAnalysis: !And [ !Not [ !Equals [ !Ref AccountIdForAnalysis, ''] ], !Not [ !Equals [ !Ref BucketNameForAnalysis, ''] ]]
  CreateSNSForAlert: !Equals [ !Ref SNSForAlertArn, '']
  CreateSNSForDeployment: !Equals [ !Ref SNSForDeploymentArn, '']
  Development: !Equals [ !Ref Environment, development]

Resources:
  # Nested Stack
  IAM:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters: 
        SnsTopicARN: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/security/iam.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/security/iam.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  SecurityHub:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        NotificationFilterAboutSecurityChecks: !Ref NotificationFilterAboutSecurityChecks
        SnsTopicARN: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/security/securityhub.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/security/securityhub.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  Inspector:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters: 
        LogicalNamePrefix: !Ref AWS::StackName
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/security/inspector.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/security/inspector.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  GuardDuty:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters: 
        SnsTopicARN: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/security/guardduty.yaml 
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/security/guardduty.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  CloudTrail:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters: 
        AuditOtherRegions: !Ref AuditOtherRegions
        LogBacketName: !Ref S3ForAccessLog
        LogicalNamePrefix: !Ref AWS::StackName
        SnsTopicARN: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/security/cloudtrail.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/security/cloudtrail.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  Config:
    Type: AWS::CloudFormation::Stack
    Condition: CreateConfig
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        AuditOtherRegions: !Ref AuditOtherRegions
        AutoRemediation: !Ref AutoRemediation
        SNSForAlertArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        SNSForDeploymentArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
        LogicalNamePrefix: !Ref AWS::StackName
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/security/config.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/security/config.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  Detective:
    Condition: CreateDetective
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/security/detective.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/security/detective.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  Macie:
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters: 
        LogicalNamePrefix: !Ref AWS::StackName
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/security/macie.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/security/macie.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  SNSForAlert:
    Condition: CreateSNSForAlert
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.0.9
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        TopicName: !Sub Alert-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  SNSForDeployment:
    Condition: CreateSNSForDeployment
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.0.9
      Parameters:
        TopicName: !Sub Deployment-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  # IAM Role
  IAMRoleForAWSSupport:
    Condition: CreateIAMRoleForAWSSupport
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref IAMUserArnToAssumeAWSSupportRole
            Action: sts:AssumeRole
      Description: A role required for CIS AWS Foundations to access AWS Support.
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSSupportAccess
      RoleName: !Sub ${AWS::StackName}-AWSSupport-${AWS::Region}
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  IAMRoleForAnalysis:
    Condition: CreateS3ReplicationForAnalysis
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceArn: !Sub 'arn:aws:s3:::${S3ForAccessLog}'
      Description: A role required for S3 to access another S3 bucket for analysis.
      Policies:
        - PolicyName: S3Replication
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetReplicationConfiguration
                  - s3:ListBucket
                Resource:
                  - !Sub 'arn:aws:s3:::${S3ForAccessLog}'
              - Effect: Allow
                Action:
                  - s3:GetObjectVersionForReplication
                  - s3:GetObjectVersionAcl
                  - s3:GetObjectVersionTagging
                Resource:
                  - !Sub 'arn:aws:s3:::${S3ForAccessLog}/*'
              - Effect: Allow
                Action:
                  - s3:s3:ReplicateObject
                  - s3:ReplicateDelete
                  - s3:ReplicateTags
                Resource:
                  - !Sub 'arn:aws:s3:::${BucketNameForAnalysis}/*'
      RoleName: !Sub ${AWS::StackName}-S3Replication-${AWS::Region}
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue  
  # S3
  S3ForAccessLog:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration: 
          - ServerSideEncryptionByDefault: 
              SSEAlgorithm: AES256
      BucketName: !Sub defaultsecuritysettings-logs-${AWS::Region}-${AWS::AccountId}
      LifecycleConfiguration:
        Rules:
          - Id: ExpirationInDays
            ExpirationInDays: 60
            Status: Enabled
          - !If 
            - CreateS3ReplicationForAnalysis
            - Id: NoncurrentVersionExpirationInDays
              NoncurrentVersionExpiration: 
                NewerNoncurrentVersions: 90
                NoncurrentDays: 0
              Status: Enabled
            - !Ref AWS::NoValue
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      ReplicationConfiguration: !If
        - CreateS3ReplicationForAnalysis
        - Role: !Sub arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-S3Replication-${AWS::Region}
          Rules: 
            - Destination: 
                Account: !Ref AccountIdForAnalysis
                Bucket: !Sub arn:aws:s3:::${BucketNameForAnalysis}
              Id: Analysis
              Status: Enabled
        - !Ref AWS::NoValue
      VersioningConfiguration: !If 
        - CreateS3ReplicationForAnalysis
        - Status: Enabled
        - !Ref AWS::NoValue
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  S3BucketPolicyForAccessLog:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref S3ForAccessLog
      PolicyDocument:
        Version: 2012-10-17
        Id: !Ref S3ForAccessLog
        Statement:
          - Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: 
              - !GetAtt S3ForAccessLog.Arn
              - !Join
                - ''
                - - !GetAtt S3ForAccessLog.Arn
                  - /*
            Condition:
              Bool: 
                aws:SecureTransport: false
  S3BucketPolicyForAccessLogAnalysis:
    Condition: CreateS3ReplicationForAnalysis
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref S3ForAccessLog
      PolicyDocument:
        Version: 2012-10-17
        Id: !Ref S3ForAccessLog
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${IAMRoleForAnalysis}'
            Action:
              - s3:ReplicateDelete
              - s3:ReplicateObject
            Resource: !Sub 'arn:aws:s3:::${BucketNameForAnalysis}/*'
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${IAMRoleForAnalysis}'
            Action:
              - s3:List*
              - s3:GetBucketVersioning
              - s3:PutBucketVersioning
            Resource: !Sub 'arn:aws:s3:::${BucketNameForAnalysis}'
  # EventBridge for Health
  CloudWatchEventsForHealth:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for AWS Health created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.health
      Name: Health
      State: ENABLED
      Targets:
        - Arn: !If
            - CreateSNSForAlert
            - !GetAtt SNSForAlert.Outputs.SNSTopicArn
            - !Ref SNSForAlertArn
          Id: CloudWatchEventsForHealth

Outputs:
  SNSForAlertArn:
    Description: SNS ARN for Alert
    Value: !If
      - CreateSNSForAlert
      - !GetAtt SNSForAlert.Outputs.SNSTopicArn
      - !Ref SNSForAlertArn
  SNSForDeploymentArn:
    Description: SNS ARN for Deployment
    Value: !If
      - CreateSNSForDeployment
      - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
      - !Ref SNSForDeploymentArn