AWSTemplateFormatVersion: 2010-09-09
Transform: 
  - AWS::LanguageExtensions
  - AWS::Serverless-2016-10-31
Description: AWSCloudFormationTemplates/security/SecurityHub sets AWS Security Hub.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: 'Security Hub Configuration'
        Parameters:
          - DelegatedAdminAccountId
          - SecurityHubType
          - SecurityHubStandards
      - Label: 
          default: 'Notification Configuration'
        Parameters:
          - SNSForAlertArn
          - SNSForDeploymentArn
      - Label: 
          default: 'Tag Configuration'
        Parameters:
          - LogicalName
          - Environment
          - TagKey
          - TagValue

Parameters:
  DelegatedAdminAccountId:
    Type: String
    Default: ''
    Description: The AWS account identifier of the account to designate as the security account
  LogicalName:
    Type: String
    Default: DefaultSecuritySettings
    Description: The custom prefix name [required]
  SecurityHubStandards:
    Type: CommaDelimitedList
    Default: FSBP, CIS
    AllowedValues:
      - FSBP
      - CIS
      - NIST
      - PCIDSS
    Description: The standard that you want to enable (FSBP, CIS, NIST, PCIDSS)
  SecurityHubType:
    Type: String
    Default: STANDARDS_ONLY
    AllowedValues:
      - STANDARDS_ONLY
      - STAMDARDS_ALERAM_HIGH
      - STAMDARDS_ALERAM_MIDIUM
      - STANDARDS_ALERAM_ALL
      - ALERAM_HIGH
      - ALERAM_MIDIUM
      - ALERAM_ALL
    Description: The type of Security Hub deployment [required]
  SNSForAlertArn:
    Type: String
    Default: ''
    Description: The Amazon SNS topic ARN for alert
  SNSForDeploymentArn:
    Type: String
    Default: '' 
    Description: The Amazon SNS topic ARN for deployment information
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates
    AllowedPattern: .+

Conditions:
  CreateDelegatedAdmin: !Not [ !Equals [ !Ref DelegatedAdminAccountId, ''] ]
  CreateSNSForAlert: !Equals [ !Ref SNSForAlertArn, '']
  CreateSNSForDeployment: !Equals [ !Ref SNSForDeploymentArn, '']
  CreateSecurityHub: !Or [ !Equals [ !Ref SecurityHubType, STANDARDS_ONLY ], !Equals [ !Ref SecurityHubType, STAMDARDS_ALERAM_MIDIUM ], !Equals [ !Ref SecurityHubType, STANDARDS_ALERAM_ALL ] ]
  CreateCloudWatchEventsForSecurityHubFindings: !Not [ !Equals [ !Ref SecurityHubType, STANDARDS_ONLY ] ]
  SendAllEvents: !And [ !Equals [ !Ref SecurityHubType, STANDARDS_ALERAM_ALL ], !Equals [ !Ref SecurityHubType, ALERAM_ALL ] ]
  SendMidiumEvents: !And [ !Equals [ !Ref SecurityHubType, STANDARDS_ALERAM_MIDIUM ], !Equals [ !Ref SecurityHubType, ALERAM_MIDIUM ] ]

Mappings: 
  SecurityHubStandardsArn: 
    ap-northeast-1:
      FSBP: arn:aws:securityhub:ap-northeast-1::standards/aws-foundational-security-best-practices/v/1.0.0
      CIS: arn:aws:securityhub:ap-northeast-1::standards/cis-aws-foundations-benchmark/v/1.4.0
      NIST: arn:aws:securityhub:ap-northeast-1::standards/nist-800-53/v/5.0.0
      PCIDSS: arn:aws:securityhub:ap-northeast-1::standards/pci-dss/v/3.2.1

Resources:
  # Nested Stack
  SNSForAlert:
    Condition: CreateSNSForAlert
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.2.6
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        TopicName: !Sub Alert-createdby-${LogicalName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  SNSForDeployment:
    Condition: CreateSNSForDeployment
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.2.6
      Parameters:
        TopicName: !Sub Deployment-createdby-${LogicalName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  # AWSServiceRoleForSecurityHub will be created automatically.
  # SecurityHub
  SecurityHub:
    Condition: CreateSecurityHub
    Type: AWS::SecurityHub::Hub
    Properties: 
      EnableDefaultStandards: false
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  'Fn::ForEach::Standards':
    - StandardsArn
    - !Ref SecurityHubStandards
    - SecurityHubStandards${StandardsArn}:
        Type: AWS::SecurityHub::Standard
        # Conditions must be the second property listed, or later. Stack creation will fail if Conditions is the first property listed within the template fragment parameter of Fn::ForEach
        Condition: CreateSecurityHub
        Properties:
          StandardsArn: !FindInMap [SecurityHubStandardsArn, !Ref "AWS::Region", !Ref StandardsArn]
  SecurityHubDelegatedAdmin:
    Condition: CreateDelegatedAdmin
    Type: AWS::SecurityHub::DelegatedAdmin
    Properties:
      AdminAccountId: !Ref DelegatedAdminAccountId
  # EventBridge for SecurityHub
  CloudWatchEventsForSecurityHubFindings:
    Condition: CreateCloudWatchEventsForSecurityHubFindings
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for SecurityHub created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.securityhub
        detail-type: 
          - Security Hub Findings - Imported
        # MEDIUM or higher
        detail:
          findings:
            Compliance:
              Status:
                - FAILED
            Severity:
              Label: !If 
                - SendAllEvents
                - !Ref AWS::NoValue
                - - CRITICAL
                  - HIGH
                  - !If
                    - SendMidiumEvents
                    - MEDIUM
                    - !Ref AWS::NoValue
      Name: SecurityHub-Findings
      State: ENABLED
      Targets:
        - Arn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
          Id: CloudWatchEventsForSecurityHub
  AlarmEventsForSecurityHubFindings:
    Condition: CreateCloudWatchEventsForSecurityHubFindings
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-events
        SemanticVersion: 2.2.6
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        CustomAlarmName: !Ref AWS::StackName
        SNSTopicArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        EventsRuleName: !Ref CloudWatchEventsForSecurityHubFindings
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue