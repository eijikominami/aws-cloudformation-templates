AWSTemplateFormatVersion: 2010-09-09
Description: AWSCloudFormationTemplates/security/auditmanager sets AWS Audit Manager.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: 'Tag Configuration'
        Parameters:
          - Environment
          - LogicalNamePrefix
          - TagKey
          - TagValue

Parameters:
  LogicalNamePrefix:
    Type: String
    Default: DefaultSecuritySettings
    AllowedPattern: .+
    Description: The custom prefix name [required]
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates
    AllowedPattern: .+

Resources:
  ServiceLinkedRoleForAuditManager:
    Type: 'AWS::IAM::ServiceLinkedRole'
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties: 
      AWSServiceName: auditmanager.amazonaws.com
      Description: A service-linked role required for AWS Audit Manager to access your resources.
  IAMRoleForAuditOwner:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:  auditmanager.amazonaws.com
            Action: 'sts:AssumeRole'
      Description: A role required for Audit Manager to access related services.
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AWSAuditManagerAdministratorAccess
      RoleName: !Sub '${LogicalNamePrefix}-AuditManagerAuditOwner-${AWS::Region}'
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  AuditManager:
    Type: AWS::AuditManager::Assessment
    Properties: 
      AssessmentReportsDestination: 
        Destination: !Ref S3
        DestinationType: S3
      AwsAccount: 
        Id: !Ref AWS::AccountId
      Description: !Sub AWS Well Architected Framework created by ${LogicalNamePrefix}
      FrameworkId: 21060514-60c0-3fbb-ad3b-0b4af6dcca7c
      Name: AWS-Well-Architected-Framework
      Roles: 
        - RoleArn: !GetAtt IAMRoleForAuditOwner.Arn
          RoleType: PROCESS_OWNER
      Scope: 
        AwsAccounts: 
          - Id: !Ref AWS::AccountId
        AwsServices: 
          - ServiceName: AWS Config
      Status: ACTIVE
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  S3:
    Type: 'AWS::S3::Bucket'
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration: 
          - ServerSideEncryptionByDefault: 
              SSEAlgorithm: AES256
      BucketName: !Sub defaultsecuritysettings-auditmgr-${AWS::Region}-${AWS::AccountId}
      LifecycleConfiguration:
        Rules:
          - Id: ExpirationInDays
            ExpirationInDays: 60
            Status: Enabled
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  S3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties: 
      Bucket: !Ref S3
      PolicyDocument:
        Version: 2012-10-17
        Id: !Ref S3
        Statement:
          - Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: 
              - !GetAtt S3.Arn
              - !Join
                - ''
                - - !GetAtt S3.Arn
                  - /*
            Condition:
              Bool: 
                aws:SecureTransport: false