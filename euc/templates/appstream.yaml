AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWSCloudFormationTemplates/euc/appstream sets Amazon AppStream 2.0.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: 'AppStream Configuration'
        Parameters: 
          - InstanceType
          - ImageName
          - VpcId
          - PrivateSubnetId1
          - PrivateSubnetId2
          - ImageBuilderImageName
          - SamlMetadataDocument
      - Label: 
          default: 'Active Directory Configuration'
        Parameters: 
          - DirectoryAccountName
          - DirectoryAccountPassword
          - DirectoryAddresses
          - DirectoryName
          - OrganizationalUnitDistinguishedNames
      - Label: 
          default: 'Notification Configuration'
        Parameters: 
          - SNSForAlertArn
          - SNSForDeploymentArn
      - Label: 
          default: 'Tag Configuration'
        Parameters:
          - LogicalName
          - Environment 
          - TagKey
          - TagValue

Parameters:
  DirectoryAccountName:
    Type: String
    Default: ''
    Description: The user name of the account
  DirectoryAccountPassword:
    Type: String
    Default: ''
    NoEcho: true
    Description: The password for the account  
  DirectoryAddresses:
    Type: CommaDelimitedList
    Default: ''
    Description: The IPv4 addresses of Active Directory  
  DirectoryName:
    Type: String
    Default: ''
    Description: The fully qualified name of the directory (for example, corp.example.com)
  OrganizationalUnitDistinguishedNames:
    Type: CommaDelimitedList
    Default: ''
    Description: The distinguished names of the organizational units for computer accounts
  ImageBuilderImageName:
    Type: String
    Default: ''
    Description: The name of the image used to create the fleet [required]
  ImageName:
    Type: String
    Default: AppStream-WinServer2019-01-26-2024
    Description: The name of the image used to create the fleet [required]
  InstanceType:
    Type: String
    Default: stream.standard.large
    Description: The instance type to use when launching fleet instances [required]
  LogicalName:
    Type: String
    Default: AppStream
    Description: The custom prefix name [required]
  PrivateSubnetId1:
    Type: AWS::EC2::Subnet::Id
    Description: The subnet id 1 for Container [required]
  PrivateSubnetId2:
    Type: AWS::EC2::Subnet::Id
    Description: The subnet id 2 for Container [required]
  SamlMetadataDocument:
    Type: String
    Default: ''
    Description: An XML document generated by an identity provider (IdP) that supports SAML 2.0
  VpcId:
    Type: AWS::EC2::VPC::Id
    AllowedPattern: .+
    Description: The ID of the VPC [required]
  SNSForAlertArn:
    Type: String
    Default: '' 
    Description: The Amazon SNS topic ARN for alert
  SNSForDeploymentArn:
    Type: String
    Default: ''
    Description: The Amazon SNS topic ARN for deployment information
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates
    AllowedPattern: .+

Conditions:
  CreateAppStreamDirectoryConfig: !And [ !Not [ !Equals [ !Ref DirectoryName, '' ] ], !Not [ !Equals [ !Join [ ',', !Ref OrganizationalUnitDistinguishedNames ], '' ] ], !Not [ !Equals [ !Ref DirectoryAccountName, '' ] ], !Not [ !Equals [ !Ref DirectoryAccountPassword, '' ] ] ]
  CreateAppStreamFleetWithoutDirectoryConfig: !Not [ !And [ !Not [ !Equals [ !Ref DirectoryName, '' ] ], !Not [ !Equals [ !Join [ ',', !Ref OrganizationalUnitDistinguishedNames ], '' ] ], !Not [ !Equals [ !Ref DirectoryAccountName, '' ] ], !Not [ !Equals [ !Ref DirectoryAccountPassword, '' ] ] ] ]
  CreateDHCPOptions: !Not [ !Equals [  !Join [ ',', !Ref DirectoryAddresses ], '' ] ]
  CreateIAMSAMLProvider: !Not [ !Equals [ !Ref SamlMetadataDocument, '' ] ]
  CreateImageBuilderImageName: !Not [ !Equals [ !Ref ImageBuilderImageName, '' ] ]

Resources:
  # IAM
  IAMSAMLProvider:
    Condition: CreateIAMSAMLProvider
    Type: AWS::IAM::SAMLProvider
    Properties:
      Name: !Ref LogicalName
      SamlMetadataDocument: !Ref SamlMetadataDocument
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  IAMRoleForSamlProvider:
    Condition: CreateIAMSAMLProvider
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref IAMSAMLProvider
            Action: sts:AssumeRoleWithSAML
            Condition:
              StringEquals:
                SAML:aud: https://signin.aws.amazon.com/saml
      Description: A role required for a SAML Privider to access AppStream.
      Policies:
        - PolicyName: AppStream
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - appstream:Stream
                Resource: !Sub arn:aws:appstream:${AWS::Region}:${AWS::AccountId}:stack/${LogicalName}
                Condition:
                  StringEquals:
                    appstream:userId: ${saml:sub}
      RoleName: !Sub ${LogicalName}-SAMLProviserAppStream-${AWS::Region}
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  # Security Group
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      # 'sg-' prefix is NOT permitted.
      GroupName: !Sub sgp-${LogicalName}-${AWS::Region}
      GroupDescription: Security Group
      SecurityGroupEgress:
        - IpProtocol: udp
          Description: All UDP Traffic
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          Description: All TCP Traffic
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub sgp-${LogicalName}-${AWS::Region}-appstream
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      VpcId: !Ref VpcId
  # AppStream
  AppStreamStack:
    Type: AWS::AppStream::Stack
    Properties:
      Description: !Sub Created by ${LogicalName}
      DisplayName: !Ref LogicalName
      Name: !Ref LogicalName
      StreamingExperienceSettings: 
        PreferredProtocol: TCP
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      UserSettings: 
        - Action: CLIPBOARD_COPY_FROM_LOCAL_DEVICE
          Permission: ENABLED
        - Action: CLIPBOARD_COPY_TO_LOCAL_DEVICE
          Permission: ENABLED
        - Action: FILE_UPLOAD
          Permission: ENABLED
        - Action: FILE_DOWNLOAD
          Permission: ENABLED
  AppStreamStackFleetAssociationWithoutDirectoryConfig:
    Condition: CreateAppStreamFleetWithoutDirectoryConfig
    DependsOn:
      - AppStreamStack
      - AppStreamFleetWithoutDirectoryConfig
    Type: AWS::AppStream::StackFleetAssociation
    Properties:
      FleetName: !Ref LogicalName
      StackName: !Ref LogicalName  
  AppStreamFleetWithoutDirectoryConfig:
    Condition: CreateAppStreamFleetWithoutDirectoryConfig
    Type: AWS::AppStream::Fleet
    Properties:
      ComputeCapacity: 
        DesiredSessions: 1
      Description: !Sub created by ${LogicalName}
      DisconnectTimeoutInSeconds: 900
      DisplayName: !Ref LogicalName
      EnableDefaultInternetAccess: false
      FleetType: ON_DEMAND
      IdleDisconnectTimeoutInSeconds: 900
      ImageName: !Ref ImageName
      InstanceType: !Ref InstanceType
      MaxSessionsPerInstance: 2
      MaxUserDurationInSeconds: 57600
      Name: !Ref LogicalName
      StreamView: DESKTOP
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      VpcConfig: 
        SecurityGroupIds: 
          - !Ref SecurityGroup
        SubnetIds: 
          - !Ref PrivateSubnetId1
          - !Ref PrivateSubnetId2
  AppStreamStackFleetAssociationWithDirectoryConfig:
    Condition: CreateAppStreamDirectoryConfig
    DependsOn:
      - AppStreamStack
      - AppStreamFleetWithDirectoryConfig
    Type: AWS::AppStream::StackFleetAssociation
    Properties:
      FleetName: !Ref LogicalName
      StackName: !Ref LogicalName  
  AppStreamFleetWithDirectoryConfig:
    Condition: CreateAppStreamDirectoryConfig
    DependsOn:
         - AppStreamDirectoryConfig
    Type: AWS::AppStream::Fleet
    Properties:
      ComputeCapacity: 
        DesiredSessions: 1
      Description: !Sub created by ${LogicalName}
      DisconnectTimeoutInSeconds: 900
      DisplayName: !Ref LogicalName
      DomainJoinInfo:
        DirectoryName: !Ref DirectoryName
        OrganizationalUnitDistinguishedName: !Select [0, !Ref OrganizationalUnitDistinguishedNames]
      EnableDefaultInternetAccess: false
      FleetType: ON_DEMAND
      IdleDisconnectTimeoutInSeconds: 900
      ImageName: !Ref ImageName
      InstanceType: !Ref InstanceType
      MaxSessionsPerInstance: 2
      MaxUserDurationInSeconds: 57600
      Name: !Ref LogicalName
      StreamView: DESKTOP
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      VpcConfig: 
        SecurityGroupIds: 
          - !Ref SecurityGroup
        SubnetIds: 
          - !Ref PrivateSubnetId1
          - !Ref PrivateSubnetId2
  AppStreamImageBuilder:
    Condition: CreateImageBuilderImageName
    Type: AWS::AppStream::ImageBuilder
    Properties:
      AppstreamAgentVersion: LATEST
      Description: !Sub Created by ${LogicalName}
      DisplayName: !Ref LogicalName
      EnableDefaultInternetAccess: false
      ImageName: !Ref ImageBuilderImageName
      InstanceType: !Ref InstanceType
      Name: !Ref LogicalName
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      VpcConfig: 
        SecurityGroupIds: 
          - !Ref SecurityGroup
        SubnetIds: 
          - !Ref PrivateSubnetId1
  AppStreamDirectoryConfig:
    Condition: CreateAppStreamDirectoryConfig
    Type: AWS::AppStream::DirectoryConfig
    Properties:
      DirectoryName: !Ref DirectoryName
      OrganizationalUnitDistinguishedNames: !Ref OrganizationalUnitDistinguishedNames
      ServiceAccountCredentials: 
        AccountName: !Ref DirectoryAccountName
        AccountPassword: !Ref DirectoryAccountPassword
  # DHCP
  DHCPOptions:
    Condition: CreateDHCPOptions
    Type: AWS::EC2::DHCPOptions
    Properties: 
      DomainName: !Ref DirectoryName
      DomainNameServers: !Ref DirectoryAddresses
      Tags: 
        - Key: Name
          Value: !Sub dopt-${AWS::StackName}-${AWS::Region}
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  DHCPOptionsAssociation:
    Condition: CreateDHCPOptions
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties: 
      DhcpOptionsId: !GetAtt DHCPOptions.DhcpOptionsId
      VpcId: !Ref VpcId
  # CloudWatch
  CloudWatchAlarmWorkspaces:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-appstream
        SemanticVersion: 2.2.9
      NotificationARNs: 
        - !Ref SNSForDeploymentArn
      Parameters:
        CustomAlarmName: !Ref AWS::StackName
        Fleet: !Ref LogicalName
        SNSTopicArn: !Ref SNSForAlertArn
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue