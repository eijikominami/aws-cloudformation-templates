AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWSCloudFormationTemplates/network builds an egress VPC.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: 'VPC Configuration'
        Parameters: 
          - ResolverInboundRuleId
          - ResolverOutboundRuleId
          - SubnetPublicCidrBlockForAz1
          - SubnetTransitCidrBlockForAz1
          - SubnetFirewallCidrBlockForAz1
          - SubnetPublicCidrBlockForAz2
          - SubnetTransitCidrBlockForAz2
          - SubnetFirewallCidrBlockForAz2
          - VPCCidrBlock
      - Label:
          default: 'Transit Gateway Configuration'
        Parameters:
          - TransitGatewayDefaultRouteTableId
          - TransitGatewayDestinationCidrBlock
          - TransitGatewayId   
      - Label: 
          default: 'Notification Configuration'
        Parameters: 
          - SNSForAlertArn
          - SNSForDeploymentArn
      - Label: 
          default: 'Tag Configuration'
        Parameters:
          - LogicalName
          - Environment 
          - TagKey
          - TagValue

Parameters:
  ResolverInboundRuleId:
    Type: String
    Default: ''
    Description: The ID of the Resolver inbound rule that you associated with the VPC that is specified by VPCId
  ResolverOutboundRuleId:
    Type: String
    Default: ''
    Description: The ID of the Resolver outbound rule that you associated with the VPC that is specified by VPCId
  SubnetFirewallCidrBlockForAz1:
    Type: String
    Default: 10.0.0.128/26
    Description: The firewall subnet CIDR block at AZ1
  SubnetFirewallCidrBlockForAz2:
    Type: String
    Default: 10.0.4.128/26
    Description: The firewall subnet CIDR block at AZ2
  SubnetPublicCidrBlockForAz1:
    Type: String
    Default: 10.0.0.0/26
    AllowedPattern: ^[0-9./]*$
    Description: The public subnet CIDR block at AZ1 [required]
  SubnetPublicCidrBlockForAz2:
    Type: String
    Default: 10.0.4.0/26
    AllowedPattern: ^[0-9./]*$
    Description: The public subnet CIDR block at AZ2 [required]
  SubnetTransitCidrBlockForAz1:
    Type: String
    Default: 10.0.0.64/26
    AllowedPattern: ^[0-9./]*$
    Description: The transit subnet CIDR block at AZ1 [required]
  SubnetTransitCidrBlockForAz2:
    Type: String
    Default: 10.0.4.64/26
    AllowedPattern: ^[0-9./]*$
    Description: The transit subnet CIDR block at AZ2 [required]
  TransitGatewayDestinationCidrBlock:
    Type: String
    Default: ''
    Description: The IPv4 CIDR block forward to TransitGateway
  TransitGatewayDefaultRouteTableId:
    Type: String
    Default: ''
    Description: The id of the default Transit Gateway Route Table
  TransitGatewayId:
    Type: String
    AllowedPattern: .+
    Description: The ID of the transit gateway [required]
  VPCCidrBlock:
    Type: String
    Default: 10.0.0.0/21
    AllowedPattern: ^[0-9./]*$
    Description: The VPC CIDR block [required]
  SNSForAlertArn:
    Type: String
    Default: '' 
  SNSForDeploymentArn:
    Type: String
    Default: ''
  LogicalName: 
    Type: String
    Default: Egress
    Description: The custom prefix name [required]
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates
    AllowedPattern: .+

Conditions:
  CreateNetworkFirewall: !And [ !Not [ !Equals [ !Ref SubnetFirewallCidrBlockForAz1, ''] ], !Not [ !Equals [ !Ref SubnetFirewallCidrBlockForAz2, ''] ] ]
  CreateNetworkFirewallAndTransitGatewayRoute: !And [ !Not [ !Equals [ !Ref SubnetFirewallCidrBlockForAz1, ''] ], !Not [ !Equals [ !Ref SubnetFirewallCidrBlockForAz2, ''] ], !Not [ !Equals [ !Ref TransitGatewayDefaultRouteTableId, ''] ] ]
  CreateRoute53ResolverResolverInboundRuleAssociation: !Not [ !Equals [ !Ref ResolverInboundRuleId, '' ] ]
  CreateRoute53ResolverResolverOutboundRuleAssociation: !Not [ !Equals [ !Ref ResolverOutboundRuleId, '' ] ]
  CreateTransitGatewayRoute: !Not [ !Equals [ !Ref TransitGatewayDefaultRouteTableId, ''] ]
  CreateSNSForAlert: !Equals [ !Ref SNSForAlertArn, '']
  CreateSNSForDeployment: !Equals [ !Ref SNSForDeploymentArn, '']
  Development: !Equals [ !Ref Environment, development]

Resources:
  # Nested Stack
  Az1:
    DependsOn:
      # NATGateway requires provisioned Internet Gateway.
      - InternetGatewayAttachment
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/availability-zone
        SemanticVersion: 2.1.24
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        AvailabilityZone: !Select 
          - 0
          - Fn::GetAZs: !Ref 'AWS::Region'
        InternetGatewayId: !Ref InternetGateway
        LogicalName: !Ref LogicalName
        NetworkAddressTranslation: ENABLED
        SubnetPublicCidrBlock: !Ref SubnetPublicCidrBlockForAz1
        SubnetTransitCidrBlock: !Ref SubnetTransitCidrBlockForAz1
        SubnetFirewallCidrBlock: !Ref SubnetFirewallCidrBlockForAz1
        SNSForAlertArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        SNSForDeploymentArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn   
        VPCId: !Ref VPC
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  Az2:
    DependsOn:
      # NATGateway requires provisioned Internet Gateway.
      - InternetGatewayAttachment
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/availability-zone
        SemanticVersion: 2.1.24
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        AvailabilityZone: !Select
          - 1
          - Fn::GetAZs: !Ref 'AWS::Region'
        InternetGatewayId: !Ref InternetGateway
        LogicalName: !Ref LogicalName
        NetworkAddressTranslation: ENABLED
        SubnetPublicCidrBlock: !Ref SubnetPublicCidrBlockForAz2
        SubnetTransitCidrBlock: !Ref SubnetTransitCidrBlockForAz2
        SubnetFirewallCidrBlock: !Ref SubnetFirewallCidrBlockForAz2
        SNSForAlertArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        SNSForDeploymentArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn 
        VPCId: !Ref VPC
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue 
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  NetworkFirewall:
    Condition: CreateNetworkFirewall
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters: 
        SubnetIdAz1: !GetAtt Az1.Outputs.FirewallSubnetId
        SubnetIdAz2: !GetAtt Az2.Outputs.FirewallSubnetId
        VPCId: !Ref VPC
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/network/networkfirewall.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/network/networkfirewall.yaml
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  # The route of the transit subnet
  RouteTransitAz1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !If
        - CreateNetworkFirewall
        - !Ref AWS::NoValue
        - !GetAtt Az1.Outputs.NatGatewayId
      VpcEndpointId: !If
        - CreateNetworkFirewall
        - !Select [ 1, !Split [ ':', !Select [ 0, !Split [ ',', !GetAtt NetworkFirewall.Outputs.EndpointIds ] ] ] ]
        - !Ref AWS::NoValue        
      RouteTableId: !GetAtt Az1.Outputs.RouteTableIdTransit
  RouteTransitAz2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0 
      NatGatewayId: !If
        - CreateNetworkFirewall
        - !Ref AWS::NoValue
        - !GetAtt Az2.Outputs.NatGatewayId
      VpcEndpointId: !If
        - CreateNetworkFirewall
        - !Select [ 1, !Split [ ':', !Select [ 1, !Split [ ',', !GetAtt NetworkFirewall.Outputs.EndpointIds ] ] ] ]
        - !Ref AWS::NoValue  
      RouteTableId: !GetAtt Az2.Outputs.RouteTableIdTransit
  # The route of the public subnet
  RoutePubliAz1:
    Condition: CreateTransitGatewayRoute
    DependsOn:
      - TransitGatewayRouteTableAssociation
      - TransitGatewayRouteTablePropagation
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref TransitGatewayDestinationCidrBlock
      TransitGatewayId: !If
        - CreateNetworkFirewall
        - !Ref AWS::NoValue
        - !Ref TransitGatewayId
      VpcEndpointId: !If
        - CreateNetworkFirewall
        - !Select [ 1, !Split [ ':', !Select [ 0, !Split [ ',', !GetAtt NetworkFirewall.Outputs.EndpointIds ] ] ] ]
        - !Ref AWS::NoValue
      RouteTableId: !GetAtt Az1.Outputs.RouteTableIdPublic
  RoutePublicAz2:
    Condition: CreateTransitGatewayRoute
    DependsOn:
      - TransitGatewayRouteTableAssociation
      - TransitGatewayRouteTablePropagation
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref TransitGatewayDestinationCidrBlock
      TransitGatewayId: !If
        - CreateNetworkFirewall
        - !Ref AWS::NoValue
        - !Ref TransitGatewayId
      VpcEndpointId: !If
        - CreateNetworkFirewall
        - !Select [ 1, !Split [ ':', !Select [ 1, !Split [ ',', !GetAtt NetworkFirewall.Outputs.EndpointIds ] ] ] ]
        - !Ref AWS::NoValue
      RouteTableId: !GetAtt Az2.Outputs.RouteTableIdPublic
  # The route of the firewall subnet
  RouteFirewallToTransitGatewayAz1:
    Condition: CreateNetworkFirewallAndTransitGatewayRoute
    DependsOn:
      - TransitGatewayRouteTableAssociation
      - TransitGatewayRouteTablePropagation
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref TransitGatewayDestinationCidrBlock
      TransitGatewayId: !Ref TransitGatewayId
      RouteTableId: !GetAtt Az1.Outputs.RouteTableIdFirewall
  RouteFirewallToTransitGatewayAz2:
    Condition: CreateNetworkFirewallAndTransitGatewayRoute
    DependsOn:
      - TransitGatewayRouteTableAssociation
      - TransitGatewayRouteTablePropagation
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref TransitGatewayDestinationCidrBlock
      TransitGatewayId: !Ref TransitGatewayId
      RouteTableId: !GetAtt Az2.Outputs.RouteTableIdFirewall
  SNSForAlert:
    Condition: CreateSNSForAlert
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.1.24
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        TopicName: !Sub Alert-createdby-${LogicalName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  SNSForDeployment:
    Condition: CreateSNSForDeployment
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.1.24
      Parameters:
        TopicName: !Sub Deployment-createdby-${LogicalName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  # IAM
  IAMRoleForVPCFlowLog:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: vpc-flow-logs.amazonaws.com
            Action: sts:AssumeRole
      Description: A role required for VPC FlowLog.
      Policies:
        - PolicyName: CloudWatchLogs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                Resource: '*'
      RoleName: !Sub ${LogicalName}-AWSVPCFlowLogRole-${AWS::Region}
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VPCCidrBlock
      Tags:
        - Key: Name
          Value: !Sub vpc-${LogicalName}-${AWS::Region}
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  VPCFlowLog:
    Type: AWS::EC2::FlowLog
    Properties: 
      DeliverLogsPermissionArn: !GetAtt IAMRoleForVPCFlowLog.Arn
      LogDestinationType: cloud-watch-logs
      LogGroupName: !Ref CloudWatchLogsGroupForVPCFlowLog
      ResourceId: !Ref VPC
      ResourceType: VPC
      TrafficType: ALL
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  Route53ResolverInboundRuleAssociation:
    Condition: CreateRoute53ResolverResolverInboundRuleAssociation
    Type: AWS::Route53Resolver::ResolverRuleAssociation
    Properties:
      Name: AWS
      ResolverRuleId: !Ref ResolverInboundRuleId
      VPCId: !Ref VPC
  Route53ResolverOutboundRuleAssociation:
    Condition: CreateRoute53ResolverResolverOutboundRuleAssociation
    Type: AWS::Route53Resolver::ResolverRuleAssociation
    Properties:
      Name: Onprem
      ResolverRuleId: !Ref ResolverOutboundRuleId
      VPCId: !Ref VPC
  CloudWatchLogsGroupForVPCFlowLog:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vpc/${LogicalName}
      RetentionInDays: 60
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  # Internet GW
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags:
        - Key: Name
          Value: !Sub igw-${LogicalName}-${AWS::Region}
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  # Peering connections with Transit Gateway and VPC for outbound traffic
  TransitGatewayAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties: 
      SubnetIds:
        - !GetAtt Az1.Outputs.TransitSubnetId
        - !GetAtt Az2.Outputs.TransitSubnetId
      Tags:
        - Key: Name
          Value: !Sub tgw-attach-${LogicalName}-${AWS::Region}
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TransitGatewayId: !Ref TransitGatewayId
      VpcId: !Ref VPC
  TransitGatewayRouteToInternet:
    Condition: CreateTransitGatewayRoute
    Type: AWS::EC2::TransitGatewayRoute
    Properties: 
      Blackhole: false
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayAttachmentId: !Ref TransitGatewayAttachment
      TransitGatewayRouteTableId: !Ref TransitGatewayDefaultRouteTableId  
  TransitGatewayRouteTableAssociation:
    Condition: CreateTransitGatewayRoute
    DependsOn:
      - TransitGatewayRouteToInternet
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    Properties: 
      TransitGatewayAttachmentId: !Ref TransitGatewayAttachment
      TransitGatewayRouteTableId: !Ref TransitGatewayDefaultRouteTableId
  TransitGatewayRouteTablePropagation:
    Condition: CreateTransitGatewayRoute
    DependsOn:
      - TransitGatewayRouteToInternet
    Type: AWS::EC2::TransitGatewayRouteTablePropagation
    Properties: 
      TransitGatewayAttachmentId: !Ref TransitGatewayAttachment
      TransitGatewayRouteTableId: !Ref TransitGatewayDefaultRouteTableId
  RouteTransitToTransitGatewayAz1:
    Condition: CreateTransitGatewayRoute
    DependsOn:
      - TransitGatewayRouteTableAssociation
      - TransitGatewayRouteTablePropagation
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref TransitGatewayDestinationCidrBlock
      TransitGatewayId: !Ref TransitGatewayId
      RouteTableId: !GetAtt Az1.Outputs.RouteTableIdTransit
  RouteTransitToTransitGatewayAz2:
    Condition: CreateTransitGatewayRoute
    DependsOn:
      - TransitGatewayRouteTableAssociation
      - TransitGatewayRouteTablePropagation
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref TransitGatewayDestinationCidrBlock
      TransitGatewayId: !Ref TransitGatewayId
      RouteTableId: !GetAtt Az2.Outputs.RouteTableIdTransit
  # CloudWatch
  CloudWatchAlarmTransitGatewayAttachment:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-transitgateway-attachment
        SemanticVersion: 2.1.24
      NotificationARNs: 
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        CustomAlarmName: !Ref LogicalName
        SNSTopicArn: !If 
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        TransitGatewayId: !Ref TransitGatewayId
        TransitGatewayAttachmentId: !Ref TransitGatewayAttachment
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue