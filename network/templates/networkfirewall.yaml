AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWSCloudFormationTemplates/network/networkfirewall creates an Network Firewall.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: 'AvailabilityZone Configuration'
        Parameters: 
          - SubnetIdAz1
          - SubnetIdAz2
          - SubnetIdAz3
          - VPCId
      - Label: 
          default: 'Network Firewall Configuration'
        Parameters: 
          - HomeNetworkCidr
      - Label: 
          default: 'Tag Configuration'
        Parameters:
          - Environment 
          - TagKey
          - TagValue

Parameters:
  HomeNetworkCidr:
    Type: String
    Default: ''
    Description: The CIDRs of your home network 
  SubnetIdAz1:
    Type: AWS::EC2::Subnet::Id
    Description: The subnet id at AZ1 [required]
  SubnetIdAz2:
    Type: String
    Default: ''
    Description: The subnet id at AZ2
  SubnetIdAz3:
    Type: String
    Default: ''
    Description: The subnet id at AZ3
  VPCId:
    Type: AWS::EC2::VPC::Id
    AllowedPattern: .+
    Description: The VPC id [required]
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates
    AllowedPattern: .+

Conditions:
  CreateSubnetAz2: !Not [ !Equals [ !Ref SubnetIdAz2, ''] ]
  CreateSubnetAz3: !Not [ !Equals [ !Ref SubnetIdAz3, ''] ]
  OverrideHomeNetworkCidr: !Not [ !Equals [ !Ref HomeNetworkCidr, ''] ]

Resources:
  NetworkFirewall:
    Type: AWS::NetworkFirewall::Firewall
    Properties: 
      DeleteProtection: false
      Description: Network Firewall for Egress VPC
      FirewallName: Default
      FirewallPolicyArn: !GetAtt NetworkFirewallPolicy.FirewallPolicyArn
      FirewallPolicyChangeProtection: false
      SubnetChangeProtection: false
      SubnetMappings: 
        - SubnetId: !Ref SubnetIdAz1
        - !If
          - CreateSubnetAz2
          - SubnetId: !Ref SubnetIdAz2
          - !Ref AWS::NoValue
        - !If
          - CreateSubnetAz3
          - SubnetId: !Ref SubnetIdAz3
          - !Ref AWS::NoValue
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      VpcId: !Ref VPCId
  NetworkFirewallPolicy:
    Type: AWS::NetworkFirewall::FirewallPolicy
    Properties: 
      Description: Network Firewall policy for Egress VPC
      FirewallPolicy: 
        PolicyVariables: !If
          - OverrideHomeNetworkCidr
          - RuleVariables: 
              HOME_NET:
                Definition:
                  - !Ref HomeNetworkCidr
          - !Ref AWS::NoValue
        StatefulDefaultActions:
         - aws:drop_established
        StatefulEngineOptions: 
          RuleOrder: STRICT_ORDER  
        StatefulRuleGroupReferences:
          - Priority: 1
            ResourceArn: !Sub arn:aws:network-firewall:${AWS::Region}:aws-managed:stateful-rulegroup/ThreatSignaturesBotnetStrictOrder
          - Priority: 2
            ResourceArn: !Sub arn:aws:network-firewall:${AWS::Region}:aws-managed:stateful-rulegroup/MalwareDomainsStrictOrder
          - Priority: 3
            ResourceArn: !Sub arn:aws:network-firewall:${AWS::Region}:aws-managed:stateful-rulegroup/AbusedLegitMalwareDomainsStrictOrder
          - Priority: 4
            ResourceArn: !Sub arn:aws:network-firewall:${AWS::Region}:aws-managed:stateful-rulegroup/AbusedLegitBotNetCommandAndControlDomainsStrictOrder
          - Priority: 5
            ResourceArn: !Sub arn:aws:network-firewall:${AWS::Region}:aws-managed:stateful-rulegroup/ThreatSignaturesMalwareCoinminingStrictOrder
        StatelessDefaultActions:
          - aws:forward_to_sfe
        StatelessFragmentDefaultActions:
          - aws:pass
      FirewallPolicyName: Default
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  NetworkFirewallLoggingConfiguration:
    Type: AWS::NetworkFirewall::LoggingConfiguration
    Properties:
      FirewallArn: !Ref NetworkFirewall
      FirewallName: Default
      LoggingConfiguration: 
        LogDestinationConfigs: 
          - LogDestination: 
              bucketName: !Ref S3ForNetworkFirewallLog
              prefix: alert
            LogDestinationType: S3
            LogType: ALERT
  S3ForNetworkFirewallLog:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub networkfirewall-logs-${AWS::Region}-${AWS::AccountId}
      LifecycleConfiguration:
        Rules:
          - Id: ExpirationInDays
            ExpirationInDays: 60
            Status: Enabled
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  S3BucketPolicyForAlertLog:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3ForNetworkFirewallLog
      PolicyDocument:
        Version: 2012-10-17
        Id: !Ref S3ForNetworkFirewallLog
        Statement:
          - Effect: Deny
            Principal: '*'
            Action: s3:*
            Resource:
              - !GetAtt S3ForNetworkFirewallLog.Arn
              - !Join
                - ''
                - - !GetAtt S3ForNetworkFirewallLog.Arn
                  - /*
            Condition:
              Bool:
                aws:SecureTransport: false

Outputs:
  EndpointIds:
    Description: Endpoint Ids
    Value: !Join
     - ','
     - !GetAtt NetworkFirewall.EndpointIds