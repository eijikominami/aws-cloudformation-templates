AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWSCloudFormationTemplates/network/az creates a VPC Subnet and related resources.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: 'AvailabilityZone Configuration'
        Parameters: 
          - AvailabilityZone
          - InternetGatewayId
          - NetworkLoadBalancer
          - SubnetPublicCidrBlock
          - SubnetTransitCidrBlock
          - VPCId   
      - Label:
          default: 'Transit Gateway Configuration'
        Parameters:
          - TransitGatewayId
          - TransitGatewayDestinationCidrBlock  
      - Label: 
          default: 'Notification Configuration'
        Parameters: 
          - SNSForAlertArn
          - SNSForDeploymentArn
      - Label: 
          default: 'Tag Configuration'
        Parameters:
          - LogicalNamePrefix
          - TagKey
          - TagValue

Parameters:
  AvailabilityZone:
    Type: AWS::EC2::AvailabilityZone::Name
    AllowedPattern: .+
    Description: The Availability Zone name [required]
  InternetGatewayId:
    Type: String
    Default: ''
    Description: The Internet Gateway Id [required]
  NetworkLoadBalancer:
    Type: String
    Default: DISABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable Network LoadBalaner [required]
  LogicalNamePrefix:
    Type: String
    Default: WebServers
    AllowedPattern: .+
    Description: The custom prefix name [required]
  SNSForAlertArn:
    Type: String
    AllowedPattern: .+
  SNSForDeploymentArn:
    Type: String
    AllowedPattern: .+
  SubnetPublicCidrBlock:
    Type: String
    Default: ''
    Description: The Public subnet CIDR block
  SubnetPrivateCidrBlock:
    Type: String
    Default: ''
    Description: The Private subnet CIDR block
  SubnetTransitCidrBlock:
    Type: String
    Default: ''
    Description: The transit subnet CIDR block
  TransitGatewayId:
    Type: String
    Default: ''
    Description: The ID of a transit gateway
  TransitGatewayDestinationCidrBlock:
    Type: String
    Default: ''
    Description: The IPv4 CIDR block forward to TransitGateway
  VPCId:
    Type: AWS::EC2::VPC::Id
    AllowedPattern: .+
    Description: The VPC id [required]
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates
    AllowedPattern: .+

Conditions:
  CreatePublicSubnet: !And [ !Not [ !Equals [ !Ref SubnetPublicCidrBlock, '' ] ], !Not [ !Equals [ !Ref InternetGatewayId, '' ] ] ]
  CreatePrivateSubnet: !Not [ !Equals [ !Ref SubnetPrivateCidrBlock, '' ] ]
  CreateTransitSubnet: !Not [ !Equals [ !Ref SubnetTransitCidrBlock, '' ] ]
  NetworkLoadBalancerExists: !Equals [ !Ref NetworkLoadBalancer, ENABLED ]
  TransitGatewayAndPublicSubnetExist: !And [ !Not [ !Equals [ !Ref SubnetPublicCidrBlock, '' ] ], !Not [ !Equals [ !Ref SubnetTransitCidrBlock, '' ] ], !Not [ !Equals [ !Ref TransitGatewayId, '' ] ], !Not [ !Equals [ !Ref TransitGatewayDestinationCidrBlock, '' ] ] ]
  TransitGatewayExists: !And [ !Not [ !Equals [ !Ref SubnetTransitCidrBlock, '' ] ], !Not [ !Equals [ !Ref TransitGatewayId, '' ] ], !Not [ !Equals [ !Ref TransitGatewayDestinationCidrBlock, '' ] ] ]

Resources:
  # Subnet
  SubnetPublic:
    Condition: CreatePublicSubnet
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      CidrBlock: !Ref SubnetPublicCidrBlock
      Tags:
        - Key: Name
          Value: !Sub subnet-${LogicalNamePrefix}-${AvailabilityZone}-pub
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      VpcId: !Ref VPCId
  SubnetPrivate:
    Condition: CreatePrivateSubnet
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      CidrBlock: !Ref SubnetPrivateCidrBlock
      Tags:
        - Key: Name
          Value: !Sub subnet-${LogicalNamePrefix}-${AvailabilityZone}-private
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      VpcId: !Ref VPCId
  SubnetTransit:
    Condition: CreateTransitSubnet
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      CidrBlock: !Ref SubnetTransitCidrBlock
      Tags:
        - Key: Name
          Value: !Sub subnet-${LogicalNamePrefix}-${AvailabilityZone}-transit
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      VpcId: !Ref VPCId
  # Route Table
  RouteTablePublic:
    Condition: CreatePublicSubnet
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPCId
      Tags:
        - Key: Name
          Value: !Sub rtb-${LogicalNamePrefix}-${AvailabilityZone}-pub
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  RouteTablePrivate:
    Condition: CreatePrivateSubnet
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPCId
      Tags:
        - Key: Name
          Value: !Sub rtb-${LogicalNamePrefix}-${AvailabilityZone}-private
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  RouteTableTransit:
    Condition: CreateTransitSubnet
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPCId
      Tags:
        - Key: Name
          Value: !Sub rtb-${LogicalNamePrefix}-${AvailabilityZone}-transit
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  RoutePublicToInternetGateway:
    Condition: CreatePublicSubnet
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGatewayId
      RouteTableId: !Ref RouteTablePublic
  RouteTransitToNATGateway:
    Condition: TransitGatewayAndPublicSubnetExist
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref RouteTableTransit
  RouteTablePublicAssociation:
    Condition: CreatePublicSubnet
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref SubnetPublic
  RouteTableTransitAssociation:
    Condition: CreateTransitSubnet
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableTransit
      SubnetId: !Ref SubnetTransit
  # Elastic IP
  EIPForNatGateway:
    Condition: TransitGatewayExists
    Type: AWS::EC2::EIP
    Properties:
      Domain: !Ref VPCId
      Tags:
        - Key: Name
          Value: !Sub eip-${LogicalNamePrefix}-${AvailabilityZone}-natgateway
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  EIPForNLB:
    Condition: NetworkLoadBalancerExists
    Type: AWS::EC2::EIP
    Properties:
      Domain: !Ref VPCId
      Tags:
        - Key: Name
          Value: !Sub eip-${LogicalNamePrefix}-${AvailabilityZone}-nlb
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  # NatGateway
  NatGateway:
    Condition: TransitGatewayAndPublicSubnetExist
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt EIPForNatGateway.AllocationId
      SubnetId: !Ref SubnetPublic
      Tags: 
        - Key: Name
          Value: !Sub nat-${LogicalNamePrefix}-${AvailabilityZone}
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  # CloudWatch Alarm
  CloudWatchAlarmNATGateway:
    Condition: TransitGatewayExists
    Type: AWS::Serverless::Application
    Properties:
      Parameters:
        CustomAlarmName: !Ref AWS::StackName
        SNSTopicArn: !Ref SNSForAlertArn
      NotificationARNs: 
        - !Ref SNSForDeploymentArn
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-natgateway
        SemanticVersion: 2.0.42
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue

Outputs:
  PublicSubnetId:
    Description: Subnet ID
    Value: !If
      - CreatePublicSubnet
      - !Ref SubnetPublic
      - ''
  PrivateSubnetId:
    Description: Subnet ID
    Value: !If
      - CreatePrivateSubnet
      - !Ref SubnetPrivate
      - ''
  TransitSubnetId:
    Condition: CreateTransitSubnet
    Description: Subnet ID
    Value: !If
      - CreateTransitSubnet
      - !Ref SubnetTransit
      - ''
  NetworkLoadBalancerIPAllocationId:
    Description: Network Load Balancer IP Allocation Id
    Value: !If
      - NetworkLoadBalancerExists
      - !GetAtt EIPForNLB.AllocationId
      - ''
  NetworkLoadBalancerIP:
    Description: Network Load Balancer IP address
    Value: !If
       - NetworkLoadBalancerExists
       - !Ref EIPForNLB
       - ''
  NatGatewayIP:
    Description: NAT Gateway IP address
    Value: !If
      - TransitGatewayExists
      - !Ref EIPForNatGateway
      - ''
  RouteTableIdTransit:
    Description: Route table for Transit Gateway
    Value: !If
      - CreateTransitSubnet
      - !GetAtt RouteTableTransit.RouteTableId
      - ''