AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWSCloudFormationTemplates/static-web-hosting creates an environment for static website hosting.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: 'CloudFront Configuration'
        Parameters: 
          - CertificateManagerARN
          - CloudFrontDefaultTTL
          - CloudFrontMinimumTTL
          - CloudFrontMaximumTTL
          - CloudFrontViewerProtocolPolicy
          - CloudFrontDefaultRootObject
          - CloudFrontAdditionalName
          - CloudFrontSecondaryOriginId
          - CloudFrontRestrictViewerAccess
          - CloudFront403ErrorResponsePagePath
          - CloudFront404ErrorResponsePagePath
          - CloudFront500ErrorResponsePagePath
          - DomainName
          - Logging
          - LogBacketName
          - S3DestinationBucketArnOfCrossRegionReplication
      - Label: 
          default: 'CloudFront Realtime Dashboard Configuration'
        Parameters: 
          - RealtimeDashboardElasticSearchVolumeSize
          - RealtimeDashboardElasticSearchInstanceType
          - RealtimeDashboardElasticSearchMasterUserName
          - RealtimeDashboardElasticSearchMasterUserPassword
          - RealtimeDashboardElasticSearchLifetime
          - RealtimeDashboardElasticsearchVersion
          - RealtimeDashboardState
          - RealtimeDashboardSamplingRate
          - RealtimeDashboardKinesisShardCount
          - RealtimeKinesisNumberOfPutRecordThreshold
      - Label: 
          default: 'Synthetics Configuration'
        Parameters: 
          - SyntheticsCanaryName
      - Label: 
          default: 'WAF Configuration'
        Parameters: 
          - WebACL
      - Label: 
          default: 'Notification Configuration'
        Parameters: 
          - SNSForAlertArn
          - SNSForDeploymentArn
      - Label: 
          default: 'Tag Configuration'
        Parameters:
          - TagKey
          - TagValue

Parameters:
  CertificateManagerARN:
    Default: ''
    Type: String
    Description: The ARN of an SSL Certifiation attached to CloudFront
  DomainName:
    Type: String
    AllowedPattern: .+
    Description: The CNAME attached to CloudFront [required]
  CloudFrontDefaultTTL:
    Default: 86400
    MinValue: 0
    Type: Number
    Description: CloudFront Default TTL [required]
  CloudFrontMinimumTTL:
    Default: 0
    MinValue: 0
    Type: Number
    Description: CloudFront Minimum TTL [required]
  CloudFrontMaximumTTL:
    Default: 31536000
    MinValue: 0
    Type: Number
    Description: CloudFront Maximum TTL [required]
  CloudFrontViewerProtocolPolicy:
    Type: String
    Default: redirect-to-https
    AllowedValues:
      - allow-all
      - redirect-to-https
      - https-only
    Description: CloudFront Viewer Protocol Policy [required]
  CloudFrontDefaultRootObject:
    Type: String
    Default: index.html
    AllowedPattern: .+
    Description: CloudFront Viewer Protocol Policy [required]
  CloudFrontAdditionalName:
    Type: String
    Default: ''
    Description: The CNAME attached to CloudFront
  CloudFrontSecondaryOriginId:
    Type: String
    Default: ''
    Description: The S3 bucket name for Secondary Origin
  CloudFrontRestrictViewerAccess:
    Type: String
    Default: DISABLED
    AllowedValues:
      - Enabled
      - Disabled
      - ENABLED
      - DISABLED
    Description: Enable or disable Restrict Viewer Access [required]  
  CloudFront403ErrorResponsePagePath:
    Type: String
    Default: ''
    Description: The path to the 403 custom error page
  CloudFront404ErrorResponsePagePath:
    Type: String
    Default: ''
    Description: The path to the 404 custom error page
  CloudFront500ErrorResponsePagePath:
    Type: String
    Default: ''
    Description: The path to the 500 custom error page
  RealtimeDashboardElasticSearchVolumeSize:
    Type: Number
    Default: 10
    MinValue: 10
    Description: The volume size (GB) of ElasticSearch Service [required]
  RealtimeDashboardElasticSearchInstanceType:
    Type: String
    Default: r5.large.elasticsearch
    AllowedValues:
      - t3.small.elasticsearch
      - t3.medium.elasticsearch
      - t2.micro.elasticsearch
      - t2.small.elasticsearch
      - t2.medium.elasticsearch
      - m5.large.elasticsearch
      - m5.xlarge.elasticsearch
      - m5.2xlarge.elasticsearch
      - m5.4xlarge.elasticsearch
      - m5.12xlarge.elasticsearch
      - m4.large.elasticsearch
      - m4.xlarge.elasticsearch
      - m4.2xlarge.elasticsearch
      - m4.4xlarge.elasticsearch
      - m4.10xlarge.elasticsearch
      - c5.large.elasticsearch
      - c5.xlarge.elasticsearch
      - c5.2xlarge.elasticsearch
      - c5.4xlarge.elasticsearch
      - c5.9xlarge.elasticsearch
      - c5.18xlarge.elasticsearch
      - c4.large.elasticsearch
      - c4.xlarge.elasticsearch
      - c4.2xlarge.elasticsearch
      - c4.4xlarge.elasticsearch
      - c4.8xlarge.elasticsearch
      - r5.large.elasticsearch
      - r5.xlarge.elasticsearch
      - r5.2xlarge.elasticsearch
      - r5.4xlarge.elasticsearch
      - r5.12xlarge.elasticsearch
      - r4.large.elasticsearch
      - r4.xlarge.elasticsearch
      - r4.2xlarge.elasticsearch
      - r4.4xlarge.elasticsearch
      - r4.8xlarge.elasticsearch
      - r4.16xlarge.elasticsearch
      - r3.large.elasticsearch
      - r3.xlarge.elasticsearch
      - r3.2xlarge.elasticsearch
      - r3.4xlarge.elasticsearch
      - r3.8xlarge.elasticsearch
      - i3.large.elasticsearch
      - i3.xlarge.elasticsearch
      - i3.2xlarge.elasticsearch
      - i3.4xlarge.elasticsearch
      - i3.8xlarge.elasticsearch
      - i3.16xlarge.elasticsearch
    Description: The instance type of ElasticSearch Service [required]
  RealtimeDashboardElasticSearchLifetime:
    Type: Number
    Default: 1
    MinValue: 0
    Description: The lifetime (hour) of ElasticSearch Service [required]
  RealtimeDashboardElasticSearchMasterUserName:
    Type: String
    Default: root
    AllowedPattern: .+
    Description: The user name of ElasticSearch Service [required]
  RealtimeDashboardElasticSearchMasterUserPassword:
    Type: String
    Default: Password1+
    AllowedPattern: .+
    NoEcho: true
    Description: The password of ElasticSearch Service [required]
  RealtimeDashboardElasticsearchVersion:
    Type: String
    Default: '7.8'
    AllowedPattern: .+
    Description: The version of ElasticSearch Service [required]
  RealtimeDashboardState:
    Type: String
    Default: DISABLED
    AllowedValues:
      - Enabled
      - Disabled
      - ENABLED
      - DISABLED
    Description: Enable or disable real-time dashboard [required] 
  RealtimeDashboardSamplingRate:
    Type: Number
    Default: 100
    MinValue: 1
    MaxValue: 100 
    Description: The sampling rate of logs sent by CloudFront [required]
  RealtimeDashboardKinesisShardCount:
    Type: Number
    Default: 1
    MinValue: 1
    Description: The shard count of Kinesis [required]
  RealtimeKinesisNumberOfPutRecordThreshold:
    Type: Number
    Default: 12000000
    MinValue: 0  
    Description: The threshold of PutRecord API calls [required]
  S3DestinationBucketArnOfCrossRegionReplication:
    Type: String
    Default: ''
    Description: The S3 bucket name for Cross Region Replication
  SyntheticsCanaryName:
    Type: String
    Default: ''
    Description: CloudWatch Synthetics Canary Name 
  Logging:
    Type: String
    Default: ENABLED
    AllowedValues:
      - Enabled
      - Disabled
      - ENABLED
      - DISABLED
    Description: Enable or disable logging [required]
  LogBacketName:
    Type: String
    Default: ''
    Description: The custom S3 bucket name for access logging
  WebACL:
    Type: String
    Default: DISABLED
    AllowedValues:
      - Enabled
      - Disabled
      - ENABLED
      - DISABLED
    Description: Enable or disable WebACL [required]
  SNSForAlertArn:
    Type: String
    Default: '' 
  SNSForDeploymentArn:
    Type: String
    Default: ''  
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates
    AllowedPattern: .+

Conditions:
  AdditionalNameExists: !Not [ !Equals [ !Ref CloudFrontAdditionalName, '' ]]
  BundleSSLCertification: !Not [ !Equals [ !Ref CertificateManagerARN, '' ]]
  DefaultRootObjectExists: !Not [ !Equals [ !Ref CloudFrontDefaultRootObject, '' ]]
  SingleOrigin: !Equals [ !Ref CloudFrontSecondaryOriginId, '' ]
  CrossRegionReplication: !Not [ !Equals [ !Ref S3DestinationBucketArnOfCrossRegionReplication, '' ]]
  CreateLog: !Equals [ !Ref Logging, ENABLED ]
  CreateRealtimeDashboard: !Equals [ !Ref RealtimeDashboardState, ENABLED ]
  CreateSNSForAlert: !Equals [ !Ref SNSForAlertArn, '']
  CreateSNSForDeployment: !Equals [ !Ref SNSForDeploymentArn, '']
  CreateSynthetics: !Not [ !Equals [ !Ref SyntheticsCanaryName, ''] ]
  CreateWebACL: !Equals [ !Ref WebACL, ENABLED ]
  CreateRestrictViewerAccess: !Equals [ !Ref CloudFrontRestrictViewerAccess, ENABLED ]
  CreateCustomErrorResponse: !And [ !Not [ !Equals [ !Ref CloudFront403ErrorResponsePagePath, '' ] ], !Not [ !Equals [ !Ref CloudFront404ErrorResponsePagePath, '' ] ], !Not [ !Equals [ !Ref CloudFront500ErrorResponsePagePath, '' ] ] ]
  CustomLogBucketName: !Not [ !Equals [ !Ref LogBacketName, '' ] ]

Resources:
  # Nested Stack
  WAF:
    Condition: CreateWebACL
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        LogicalNamePrefix: !Ref AWS::StackName
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue 
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TemplateURL: https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/web-servers/waf.yaml
  RealtimeDashboard:
    Condition: CreateRealtimeDashboard
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        ElasticSearchVolumeSize: !Ref RealtimeDashboardElasticSearchVolumeSize
        ElasticSearchInstanceType: !Ref RealtimeDashboardElasticSearchInstanceType
        ElasticSearchLifetime: !Ref RealtimeDashboardElasticSearchLifetime
        ElasticSearchMasterUserName: !Ref RealtimeDashboardElasticSearchMasterUserName
        ElasticSearchMasterUserPassword: !Ref RealtimeDashboardElasticSearchMasterUserPassword
        ElasticsearchVersion: !Ref RealtimeDashboardElasticsearchVersion
        KinesisShardCount: !Ref RealtimeDashboardKinesisShardCount
        KinesisNumberOfPutRecordThreshold: !Ref RealtimeKinesisNumberOfPutRecordThreshold
        LogicalNamePrefix: !Ref AWS::StackName
        SamplingRate: !Ref RealtimeDashboardSamplingRate
        SNSForAlertArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
        SNSForDeploymentArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue 
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TemplateURL: https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/static-website-hosting-with-ssl/realtime-dashboard.yaml   
  Synthetics:
    Condition: CreateSynthetics
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        CanaryName: !Ref SyntheticsCanaryName
        DomainName: !Ref DomainName
        SNSForAlertArn: !If 
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        SNSForDeploymentArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue 
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TemplateURL: https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/synthetics/heartbeat.yaml
  SNSForAlert:
    Condition: CreateSNSForAlert
    Type: 'AWS::Serverless::Application'
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 1.1.17
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        TopicName: !Sub Alert-createdby-${AWS::StackName}
      Tags:
        createdby: !Ref TagValue
  SNSForDeployment:
    Condition: CreateSNSForDeployment
    Type: 'AWS::Serverless::Application'
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 1.1.17
      Parameters:
        TopicName: !Sub Deployment-createdby-${AWS::StackName}
      Tags:
        createdby: !Ref TagValue
  # IAM
  IAMRoleForCrossRegionReplication:
    Condition: CrossRegionReplication
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub '${AWS::StackName}-S3Replication-${AWS::Region}'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetReplicationConfiguration'
                  - 's3:ListBucket'
                Resource: !Join
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref DomainName
              - Effect: Allow
                Action:
                  - 's3:GetObjectVersion'
                  - 's3:GetObjectVersionAcl'
                  - 's3:GetObjectVersionTagging'
                  - 's3:GetObjectRetention'
                  - 's3:GetObjectLegalHold'
                Resource: !Join
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref DomainName
                    - /*
              - Effect: Allow
                Action:
                  - 's3:ReplicateObject'
                  - 's3:ReplicateDelete'
                  - 's3:ReplicateTags'
                Resource: !Join
                  - ''
                  - - !Ref S3DestinationBucketArnOfCrossRegionReplication
                    - /*
      RoleName: !Sub '${AWS::StackName}-S3ReplicationRole-${AWS::Region}'
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
  # S3
  S3ForAccessLog:
    Condition: CustomLogBucketName
    Type: 'AWS::S3::Bucket'
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration: 
          - ServerSideEncryptionByDefault: 
              SSEAlgorithm: AES256
      BucketName: !Ref LogBacketName
      LifecycleConfiguration:
        Rules:
          - Id: ExpirationInDays
            ExpirationInDays: 60
            Status: Enabled
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
  S3BucketPolicyForAccessLog:
    Condition: CustomLogBucketName
    Type: 'AWS::S3::BucketPolicy'
    Properties: 
      Bucket: !Ref S3ForAccessLog
      PolicyDocument:
        Version: 2012-10-17
        Id: !Ref S3ForAccessLog
        Statement:
          - Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: 
              - !GetAtt S3ForAccessLog.Arn
              - !Join
                - ''
                - - !GetAtt S3ForAccessLog.Arn
                  - /*
            Condition:
              Bool: 
                aws:SecureTransport: false
  S3ForWebHosting:
    Type: 'AWS::S3::Bucket'
    # Retain this bucket when a stack is deleted.
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration: 
          - ServerSideEncryptionByDefault: 
              SSEAlgorithm: AES256
      BucketName: !Ref DomainName
      LifecycleConfiguration:
        Rules:
          - Id: NonCurrentVersionExpiration
            NoncurrentVersionExpirationInDays: 90
            Status: Enabled
      LoggingConfiguration: !If
        - CreateLog
        - DestinationBucketName: !If
          - CustomLogBucketName
          - !Ref S3ForAccessLog
          - !Sub defaultsecuritysettings-logs-${AWS::Region}-${AWS::AccountId}
          LogFilePrefix: !Sub S3-${DomainName}/
        - !Ref AWS::NoValue
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      ReplicationConfiguration: !If
       - CrossRegionReplication
       - Role: !GetAtt IAMRoleForCrossRegionReplication.Arn
         Rules:
           - Destination: 
               Bucket: !Ref S3DestinationBucketArnOfCrossRegionReplication
             Id: !Ref S3DestinationBucketArnOfCrossRegionReplication
             # All Objects
             Prefix: ''
             Status: Enabled
       - !Ref AWS::NoValue
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
      VersioningConfiguration:
        Status: Enabled
  S3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties: 
      Bucket: !Ref S3ForWebHosting
      PolicyDocument:
        Version: 2012-10-17
        Id: !Ref S3ForWebHosting
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}
            Action:
              - 's3:GetObject'
            Resource: !Sub arn:aws:s3:::${S3ForWebHosting}/*
          - Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: 
              - !GetAtt S3ForWebHosting.Arn
              - !Join
                - ''
                - - !GetAtt S3ForWebHosting.Arn
                  - /*
            Condition:
              Bool: 
                aws:SecureTransport: false
  # CloudFront
  CloudFront:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Aliases: !If
          - BundleSSLCertification
          - !If 
            - AdditionalNameExists
            - - !Ref DomainName
              - !Ref CloudFrontAdditionalName
            - - !Ref DomainName
          - !Ref AWS::NoValue
        Comment: !Sub CDN for ${DomainName}
        CustomErrorResponses: !If 
          - CreateCustomErrorResponse
          - - ErrorCachingMinTTL: 60
              ErrorCode: 403
              ResponseCode: 403
              ResponsePagePath: !Ref CloudFront403ErrorResponsePagePath
            - ErrorCachingMinTTL: 60
              ErrorCode: 404
              ResponseCode: 404
              ResponsePagePath: !Ref CloudFront404ErrorResponsePagePath
            - ErrorCachingMinTTL: 60
              ErrorCode: 500
              ResponseCode: 500
              ResponsePagePath: !Ref CloudFront500ErrorResponsePagePath
          - !Ref AWS::NoValue
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          DefaultTTL: !Ref CloudFrontDefaultTTL
          ForwardedValues:
            QueryString: false
          MaxTTL: !Ref CloudFrontMaximumTTL
          MinTTL: !Ref CloudFrontMinimumTTL
          RealtimeLogConfigArn: !If
            - CreateRealtimeDashboard
            - !GetAtt RealtimeDashboard.Outputs.RealtimeLogConfigArn
            - !Ref AWS::NoValue
          SmoothStreaming: false
          TargetOriginId: !Ref S3ForWebHosting
          TrustedSigners: !If 
            - CreateRestrictViewerAccess
            - - !Ref AWS::AccountId
            - !Ref AWS::NoValue
          ViewerProtocolPolicy: !Ref CloudFrontViewerProtocolPolicy
        DefaultRootObject : !If
          - DefaultRootObjectExists
          - !Ref CloudFrontDefaultRootObject
          - !Ref AWS::NoValue
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: false
        Logging: !If
          - CreateLog
          - Bucket: !If
            - CustomLogBucketName
            - !Ref S3ForAccessLog
            - !Sub defaultsecuritysettings-logs-${AWS::Region}-${AWS::AccountId}.s3.amazonaws.com
            Prefix: !Sub CloudFront-${DomainName}/
          - !Ref AWS::NoValue
        Origins: !If
          - SingleOrigin
          - - DomainName: !GetAtt S3ForWebHosting.DomainName
              Id: !Ref S3ForWebHosting
              S3OriginConfig:
                OriginAccessIdentity: !Join
                 - ''
                 - - origin-access-identity/cloudfront/
                   - !Ref CloudFrontOriginAccessIdentity
          - - DomainName: !GetAtt S3ForWebHosting.DomainName
              Id: !Ref S3ForWebHosting
              S3OriginConfig:
                OriginAccessIdentity: !Join
                 - ''
                 - - origin-access-identity/cloudfront/
                   - !Ref CloudFrontOriginAccessIdentity
            - DomainName: !Sub ${CloudFrontSecondaryOriginId}.s3.amazonaws.com
              Id: !Ref CloudFrontSecondaryOriginId
              S3OriginConfig:
                OriginAccessIdentity: !Join
                 - ''
                 - - origin-access-identity/cloudfront/
                   - !Ref CloudFrontOriginAccessIdentity
        ViewerCertificate: !If
          - BundleSSLCertification
          - AcmCertificateArn: !Ref CertificateManagerARN
            MinimumProtocolVersion: TLSv1.1_2016
            SslSupportMethod: sni-only
          - !Ref AWS::NoValue
        WebACLId: !If
          - CreateWebACL
          - !GetAtt WAF.Outputs.WebACLId
          - !Ref AWS::NoValue
  CloudFrontOriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig: 
        Comment: !Sub access-identity-${DomainName}
  # CloudWatch Dashboard
  Dashboard:
    Type: 'AWS::CloudWatch::Dashboard'
    Properties:
      DashboardName: !Sub ${AWS::StackName}-${CloudFront}
      DashboardBody: !Sub '{"widgets": [{"type": "text","x": 0,"y": 0,"width": 24,"height": 2,"properties": {"markdown": "# CloudFront\n${DomainName} のパフォーマンスを確認できます。"}},{"type": "metric","x": 0,"y": 2,"width": 24,"height": 6,"properties": {"metrics": [[ "AWS/CloudFront", "4xxErrorRate", "Region", "Global", "DistributionId", "${CloudFront}", { "stat": "Average", "period": 60, "color": "#ff7f0e" } ],[ ".", "TotalErrorRate", ".", ".", ".", ".", { "stat": "Average", "period": 60, "color": "#9467bd" } ],[ ".", "5xxErrorRate", ".", ".", ".", ".", { "stat": "Average", "period": 60, "color": "#d62728" } ]],"view": "timeSeries","stacked": false,"region": "us-east-1","title": "ErrorRate","period": 300}},{"type": "metric","x": 0,"y": 8,"width": 24,"height": 6,"properties": {"metrics": [[ "AWS/CloudFront", "BytesUploaded", "Region", "Global", "DistributionId", "${CloudFront}", { "stat": "Sum", "period": 60 } ],[ ".", "BytesDownloaded", ".", ".", ".", ".", { "stat": "Sum", "period": 60, "color": "#2ca02c" } ]],"view": "timeSeries","stacked": false,"region": "us-east-1","title": "Bytes","period": 300}},{"type": "metric","x": 0,"y": 14,"width": 24,"height": 6,"properties": {"metrics": [[ "AWS/CloudFront", "Requests", "Region", "Global", "DistributionId", "${CloudFront}", { "period": 60, "stat": "Sum" } ]],"view": "timeSeries","stacked": false,"region": "us-east-1","period": 300}}]}'

Outputs:
  CloudFrontURL:
    Description: CloudFront URL
    Value: !GetAtt CloudFront.DomainName
  KibanaURL:
    Condition: CreateRealtimeDashboard
    Description: Kibana URL
    Value: !GetAtt RealtimeDashboard.Outputs.KibanaURL