AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWSCloudFormationTemplates/cloudops/ssm executes Systems Manager Quick Setup and creates a Systems Manager Maintenance Window and related resources.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: 'Systems Manager Configuration'
        Parameters: 
          - AdminAccountId
          - IgnoreResourceConflicts
          - OrganizationID
          - PatchingAt
      - Label: 
          default: 'Notification Configuration'
        Parameters: 
          - SNSForAlertArn
          - SNSForDeploymentArn
      - Label: 
          default: 'Tag Configuration'
        Parameters:
          - LogicalNamePrefix
          - Environment
          - TagKey
          - TagValue

Parameters:
  AdminAccountId:
    Type: String
    Default: ''
    Description: AWS Account ID of the primary account (the account from which AWS Systems Manager Automation will be initiated)    
  IgnoreResourceConflicts:
    Type: String
    Default: DISABLED
    AllowedValues:
      - ENABLED
      - DISABLED
    Description: Enable or disable AWS Systems Manager Incident Manager [required]
  OrganizationID:
    Type: String
    Default: ''
    Description: AWS Organizations ID
  PatchingAt:
    Type: Number
    Default: 3
    MinValue: 0
    MaxValue: 23
    Description: Daily patching time (H) [required]
  LogicalNamePrefix:
    Type: String
    Default: SystemsManager
    Description: The custom prefix name [required]
  SNSForAlertArn:
    Type: String
    Default: ''
    Description: The Amazon SNS topic ARN for alert
  SNSForDeploymentArn:
    Type: String
    Default: '' 
    Description: The Amazon SNS topic ARN for deployment information
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates
    AllowedPattern: .+

Conditions:
  CreateIAMRoleForMultiAccount: !And [ !Not [ !Equals [ !Ref AdminAccountId, ''] ], !Not [ !Equals [ !Ref OrganizationID, ''] ] ]
  CreateResource: !Equals [ !Ref IgnoreResourceConflicts, DISABLED ]
  CreateResourceDataSync: !Equals [ !Ref AdminAccountId, !Ref AWS::AccountId ]
  CreateSNSForAlert: !Equals [ !Ref SNSForAlertArn, '']
  CreateSNSForDeployment: !Equals [ !Ref SNSForDeploymentArn, '']

Resources:
  # Nested Stack
  SNSForAlert:
    Condition: CreateSNSForAlert
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.0.69
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        TopicName: !Sub Alert-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  SNSForDeployment:
    Condition: CreateSNSForDeployment
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.0.69
      Parameters:
        TopicName: !Sub Deployment-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  # Service-linked Role
  ServiceLinkedRoleForSSM:
    Type: AWS::IAM::ServiceLinkedRole
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties: 
      AWSServiceName: ssm.amazonaws.com
      Description: Provides access to AWS Resources managed or used by Amazon SSM.
  ServiceLinkedRoleForSystemsManagerAccountDiscovery:
    Type: AWS::IAM::ServiceLinkedRole
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties: 
      AWSServiceName: accountdiscovery.ssm.amazonaws.com
      Description: Provides access to AWS Resources managed or used by Amazon SSM AccountDiscovery.
  # IAM Role for EC2
  IAMRoleForEC2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Description: A role required for Managed Instances.
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      # for CloudWatch Logs
        - arn:aws:iam::aws:policy/CloudWatchAgentAdminPolicy
      RoleName: !Sub ${LogicalNamePrefix}-EC2SSM-${AWS::Region}
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  # InstanceProfile
  IamInstanceProfileForIAMRoleForEC2:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: !Ref IAMRoleForEC2
      Roles: 
        - !Ref IAMRoleForEC2
  # IAM Role for multi account automation
  AWSSystemsManagerAutomationExecutionRole: 
    Condition: CreateIAMRoleForMultiAccount
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: 2012-10-17
        Statement: 
        - Effect: Allow
          Principal: 
            AWS: !Sub arn:aws:iam::${AdminAccountId}:role/AWS-SystemsManager-AutomationAdministrationRole
          Action: sts:AssumeRole
          Condition: 
            StringEquals: 
              aws:PrincipalOrgID: !Ref OrganizationID
        - Effect: Allow
          Principal: 
            Service: ssm.amazonaws.com
          Action: 
          - sts:AssumeRole
      ManagedPolicyArns: 
      - arn:aws:iam::aws:policy/service-role/AmazonSSMAutomationRole
      Path: '/'
      Policies: 
        - PolicyName: ExecutionPolicy
          PolicyDocument: 
            Version: 2012-10-17
            Statement: 
              - Effect: Allow
                Action: 
                  - resource-groups:ListGroupResources
                  - tag:GetResources
                  - ec2:DescribeInstances
                Resource: '*'
              - Effect: Allow
                Action: 
                  - iam:PassRole
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/AWS-SystemsManager-AutomationExecutionRole   
      RoleName: !Sub ${LogicalNamePrefix}-SystemsManager-AutomationExecutionRole-${AWS::Region}
  # IAM Role for SSM Explorer
  AWSSystemsManagerOpsItemsCWERole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: 2012-10-17
        Statement: 
        - Effect: Allow
          Principal: 
            Service: events.amazonaws.com
          Action: 
          - sts:AssumeRole
      Policies: 
        - PolicyName: OpsItemCWE
          PolicyDocument: 
            Version: 2012-10-17
            Statement: 
              - Effect: Allow
                Action: 
                  - ssm:CreateOpsItem
                Resource: '*'
              - Effect: Allow
                Action: 
                  - ssm:AddTagsToResource
                Resource: arn:aws:ssm:*:*:opsitem/*
      RoleName: OpsItem-CWE-Role
  AWSSystemsManagerEnableExplorerRole: 
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: 2012-10-17
        Statement: 
        - Effect: Allow
          Principal: 
            Service: ssm.amazonaws.com
          Action: 
          - sts:AssumeRole
      Policies: 
        - PolicyName: EnableExplorer
          PolicyDocument: 
            Version: 2012-10-17
            Statement: 
              - Effect: Allow
                Action: 
                  - ssm:GetServiceSetting
                  - ssm:UpdateServiceSetting
                  - config:DescribeConfigurationRecorders
                  - compute-optimizer:GetEnrollmentStatus
                  - iam:ListRoles
                Resource: '*'
      RoleName: !Sub ${LogicalNamePrefix}-SystemsManager-EnableExplorerRole-${AWS::Region}
  # Document
  CloudWatchAgentInstallAndConfigure:
    Type: AWS::SSM::Document
    Properties: 
      Content:
        schemaVersion: '2.2'
        description: A composite document for installing and configuring CloudWatchAgent.
        mainSteps:
          - name: installCWAgent
            action: aws:runDocument
            inputs:
              documentType: SSMDocument
              documentPath: AWS-ConfigureAWSPackage
              documentParameters:
                action: Install
                name: AmazonCloudWatchAgent
          - name: second
            action: aws:runDocument
            inputs:
              documentType: SSMDocument
              documentPath: AmazonCloudWatch-ManageAgent
              documentParameters:
                action: configure
                mode: ec2
                optionalConfigurationSource: default
                optionalRestart: yes
      DocumentType: Command
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  CloudWatchAgentUpdate:
    Type: AWS::SSM::Document
    Properties: 
      Content:
        schemaVersion: '2.2'
        description: A composite document for updating CloudWatchAgent.
        mainSteps:
          - name: first
            action: aws:runShellScript
            inputs:
              runCommand:
                - sleep 1800
            precondition:
              StringEquals:
                - platformType
                - Linux
          - name: second
            action: aws:runPowerShellScript
            inputs:
              runCommand:
                - Start-Sleep â€“Seconds 1800
            precondition:
              StringEquals:
                - platformType
                - Linux
          - name: installCWAgent
            action: aws:runDocument
            inputs:
              documentType: SSMDocument
              documentPath: AWS-ConfigureAWSPackage
              documentParameters:
                action: Install
                name: AmazonCloudWatchAgent
      DocumentType: Command
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  # State Manager
  # Install and configure the CloudWatch agent
  SystemAssociationForInstallAndConfigureCloudWatchAgent:
    Type: AWS::SSM::Association
    Properties: 
      AssociationName: SystemAssociationForInstallAndConfigureCloudWatchAgent
      Name: !Ref CloudWatchAgentInstallAndConfigure
      Targets: 
        - Key: !Sub tag:${TagKey}
          Values:
            - !Sub value:${TagValue}
  # Update Systems Manager (SSM) Agent every two weeks
  SystemAssociationForSsmAgentUpdate:
    Type: AWS::SSM::Association
    Properties: 
      AssociationName: SystemAssociationForSsmAgentUpdate
      Name: AWS-UpdateSSMAgent
      ScheduleExpression: rate(14 days)
      Targets: 
        - Key: !Sub tag:${TagKey}
          Values:
            - !Sub value:${TagValue}
  # Collect inventory from your instances every 30 minutes
  SystemAssociationForInventoryCollection:
    Condition: CreateResource
    Type: AWS::SSM::Association
    Properties: 
      AssociationName: SystemAssociationForInventoryCollection
      Name: AWS-GatherSoftwareInventory
      Parameters:
          applications:
            - Enabled
          awsComponents:
            - Enabled
          customInventory:
            - Enabled
          instanceDetailedInformation:
            - Enabled
          networkConfig:
            - Enabled
          services:
            - Enabled
          windowsRoles:
            - Enabled
          windowsUpdates:
            - Enabled
      ScheduleExpression: rate(30 minutes)
  # Scan instances for missing patches daily
  SystemAssociationForScanningPatches:
    Type: AWS::SSM::Association
    Properties: 
      AssociationName: SystemAssociationForScanningPatches
      Name: AWS-RunPatchBaseline
      ScheduleExpression: rate(1 day)
      Parameters:
          Operation:
            - Scan
      Targets: 
        - Key: !Sub tag:${TagKey}
          Values:
            - !Sub value:${TagValue}
  # Update the CloudWatch agent every 30 days
  SystemAssociationForUpdateCloudWatchAgent:
    Type: AWS::SSM::Association
    Properties: 
      AssociationName: SystemAssociationForUpdateCloudWatchAgent
      Name: !Ref CloudWatchAgentUpdate
      ScheduleExpression: rate(30 days)
      Targets: 
        - Key: !Sub tag:${TagKey}
          Values:
            - !Sub value:${TagValue}
  # Install the Inspector agent two weeks
  SystemAssociationForAmazonInspector:
    Type: AWS::SSM::Association
    Properties: 
      AssociationName: SystemAssociationForAmazonInspector
      Name: AmazonInspector-ManageAWSAgent
      ScheduleExpression: rate(14 days)
      Parameters:
          Operation:
            - Install
      Targets: 
        - Key: !Sub tag:${TagKey}
          Values:
            - !Sub value:${TagValue}
  # Enable SSM Explorer
  SystemAssociationForSSMExplorer:
    Type: AWS::SSM::Association
    Properties: 
      AssociationName: SystemAssociationForAWSSSMExplorer
      Name: AWS-EnableExplorer
      Parameters:
          AutomationAssumeRole:
            - !GetAtt AWSSystemsManagerEnableExplorerRole.Arn
  ResourceDataSync:
    Condition: CreateResourceDataSync
    DependsOn:
      - ServiceLinkedRoleForSystemsManagerAccountDiscovery
    Type: AWS::SSM::ResourceDataSync
    Properties: 
      SyncName: Default
      SyncSource: 
        AwsOrganizationsSource: 
          OrganizationSourceType: EntireOrganization
        IncludeFutureRegions: true
        SourceRegions: 
          - us-east-1
          - us-west-1
          - us-west-2
          - sa-east-1
          - eu-west-1
          - ap-southeast-2
          - eu-central-1
          - ap-southeast-1
          - ap-northeast-1
          - ap-south-1
          - ap-northeast-2
          - ap-northeast-3
          - eu-north-1
          - us-east-2
          - eu-west-2
          - eu-west-3
          - ca-central-1
        SourceType: AwsOrganizations
      SyncType: SyncFromSource
  EventBridgeRuleForSSMOpsItemsAutoscalingInstanceLaunchFailure:
    Type: AWS::Events::Rule
    Properties: 
      Description: Rule for SSM OpsCenter to create OpsItems when EC2 Auto Scaling instance launch failed
      EventPattern:
        source:
          - aws.autoscaling
        detail-type: 
          - EC2 Instance Launch Unsuccessful
        detail:
          StatusCode:
            - Failed
      Name: SSMOpsItems-Autoscaling-instance-launch-failure
      State: ENABLED
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeRuleForSSMOpsItemsAutoscalingInstanceTerminationFailure:
    Type: AWS::Events::Rule
    Properties: 
      Description: Rule for SSM OpsCenter to create OpsItems when EC2 Auto Scaling instance termination failed
      EventPattern:
        source:
          - aws.autoscaling
        detail-type: 
          - EC2 Instance Terminate Unsuccessful
        detail:
          StatusCode:
            - Failed
      Name: SSMOpsItems-Autoscaling-instance-termination-failure
      State: ENABLED
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeRuleForSSMOpsItemsEBSSnapshotCopyFailed:
    Type: AWS::Events::Rule
    Properties: 
      Description: Rule for SSM OpsCenter to create OpsItems when EBS snapshot copy failed
      EventPattern:
        source:
          - aws.ec2
        detail-type: 
          - EBS Snapshot Notificatio
        detail:
          event: 
            - copySnapshot
          result:
            - failed
      Name: SSMOpsItems-EBS-snapshot-copy-failed
      State: ENABLED
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeRuleForSSMOpsItemsEBSSnapshotCreationFailed:
    Type: AWS::Events::Rule
    Properties: 
      Description: Rule for SSM OpsCenter to create OpsItems when EBS snapshot creation failed
      EventPattern:
        source:
          - aws.ec2
        detail-type: 
          - EBS Snapshot Notificatio
        detail:
          event: 
            - createSnapshot
          result:
            - failed
      Name: SSMOpsItems-EBS-snapshot-creation-failed
      State: ENABLED
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeRuleForSSMOpsItemsEBSVolumePerformanceIssue:
    Type: AWS::Events::Rule
    Properties: 
      Description: Rule for SSM OpsCenter to create OpsItems for EBS volume performance issue
      EventPattern:
        source:
          - aws.health
        detail-type: 
          - AWS Health Event
        detail:
          service: 
            - EBS
          eventTypeCategory:
            - issue
          eventTypeCode:
            - AWS_EBS_DEGRADED_EBS_VOLUME_PERFORMANCE
      Name: SSMOpsItems-EBS-volume-performance-issue
      State: ENABLED
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeRuleForSSMOpsItemsEC2Issue:
    Type: AWS::Events::Rule
    Properties: 
      Description: Rule for SSM OpsCenter to create OpsItems for any EC2 issue
      EventPattern:
        source:
          - aws.health
        detail-type: 
          - AWS Health Event
        detail:
          service: 
            - EC2
          eventTypeCategory:
            - issue
      Name: SSMOpsItems-EC2-issue
      State: ENABLED
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeRuleForSSMOpsItemsEC2ScheduledChange:
    Type: AWS::Events::Rule
    Properties: 
      Description: Rule for SSM OpsCenter to create OpsItems for EC2 scheduled changes
      EventPattern:
        source:
          - aws.health
        detail-type: 
          - AWS Health Event
        detail:
          service: 
            - EC2
          eventTypeCategory:
            - scheduledChange
      Name: SSMOpsItems-EC2-scheduled-change
      State: ENABLED
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeRuleForSSMOpsItemsRDSIssue:
    Type: AWS::Events::Rule
    Properties: 
      Description: Rule for SSM OpsCenter to create OpsItems for any RDS issue
      EventPattern:
        source:
          - aws.health
        detail-type: 
          - AWS Health Event
        detail:
          service: 
            - RDS
          eventTypeCategory:
            - issue
      Name: SSMOpsItems-RDS-issue
      State: ENABLED
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeRuleForSSMOpsItemsRDSScheduledChange:
    Type: AWS::Events::Rule
    Properties: 
      Description: Rule for SSM OpsCenter to create OpsItems for any RDS issue
      EventPattern:
        source:
          - aws.health
        detail-type: 
          - AWS Health Event
        detail:
          service: 
            - RDS
          eventTypeCategory:
            - scheduledChange
      Name: SSMOpsItems-RDS-scheduled-change
      State: ENABLED
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  EventBridgeRuleForSSMOpsItemsSSMMaintenanceWindowExecutionFailed:
    Type: AWS::Events::Rule
    Properties: 
      Description: Rule for SSM OpsCenter to create OpsItems for any RDS issue
      EventPattern:
        source:
          - aws.ssm
        detail-type: 
          - Maintenance Window Execution State-change Notification
        detail:
          status: 
            - FAILED
      Name: SSMOpsItems-SSM-maintenance-window-execution-failed
      State: ENABLED
      Targets:
        - Arn: !Ref SNSForAlertArn
          Id: SNSForAlert
  # Maintenance Window
  MaintenanceWindow:
    Type: AWS::SSM::MaintenanceWindow
    Properties: 
      AllowUnassociatedTargets: false
      Cutoff: 1
      Description: !Sub Patching to ${LogicalNamePrefix} EC2 instances at ${PatchingAt}:00 every day.
      Duration: 2
      Name: DailyMaintenance
      Schedule: !Sub cron(0 ${PatchingAt} * * ? *)
      ScheduleTimezone: Asia/Tokyo
      Tags: 
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  MaintenanceWindowTarget:
    Type: AWS::SSM::MaintenanceWindowTarget
    Properties: 
      Description: !Sub EC2 instances createdby ${LogicalNamePrefix}.
      Name: !Ref LogicalNamePrefix
      ResourceType: INSTANCE
      Targets:
        - Key: !Join
          - ':'
          - - tag
            - !Ref TagKey
          Values:
            - !Ref TagValue
      WindowId: !Ref MaintenanceWindow
  MaintenanceWindowTask:
    DependsOn:
      - ServiceLinkedRoleForSSM
    Type: AWS::SSM::MaintenanceWindowTask
    Properties: 
      Description: !Sub Patching for ${LogicalNamePrefix} EC2 instances.
      MaxConcurrency: '50'
      MaxErrors: '0'
      Name: !Sub PatchingTaskFor${LogicalNamePrefix}
      Priority: 0
      ServiceRoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ssm.amazonaws.com/AWSServiceRoleForAmazonSSM
      Targets:  
        - Key: WindowTargetIds
          Values: 
            - !Ref MaintenanceWindowTarget
      TaskArn: AWS-RunPatchBaseline
      TaskInvocationParameters:
        MaintenanceWindowRunCommandParameters:
          NotificationConfig:
              NotificationArn: !If
                - CreateSNSForAlert
                - !GetAtt SNSForAlert.Outputs.SNSTopicArn
                - !Ref SNSForAlertArn
          Parameters: 
            Operation:
              - Install
          ServiceRoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ssm.amazonaws.com/AWSServiceRoleForAmazonSSM
          TimeoutSeconds: 600
      TaskType: RUN_COMMAND
      WindowId: !Ref MaintenanceWindow
  EventBridgeForSSM:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for Systems Manager created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.ssm
        detail-type: 
          - EC2 Command Status-change Notification
          - EC2 Command Invocation Status-change Notification
          - EC2 Automation Step Status-change Notification
          - EC2 Automation Execution Status-change Notification
          - EC2 State Manager Association State Change
          - EC2 State Manager Instance Association State Change
        detail:
          status: 
            - Failed
      Name: SystemsManager
      State: ENABLED
      Targets:
        - Arn: !If
            - CreateSNSForAlert
            - !GetAtt SNSForAlert.Outputs.SNSTopicArn
            - !Ref SNSForAlertArn
          Id: SNSForAlert
  AlarmEventsForSSM:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-events
        SemanticVersion: 2.0.69
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        CustomAlarmName: !Ref AWS::StackName
        SNSTopicArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        EventsRuleName: !Ref EventBridgeForSSM
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  EventBridgeForSSMConfigurationCompliance:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for Systems Manager Configuration Compliance created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.ssm
        detail-type: 
          - Configuration Compliance State Change
        # EC2 only
        detail:
          resource-id:
            - prefix: i-
      Name: SystemsManagerConfigurationCompliance
      State: ENABLED
      Targets:
        - Arn: !If
            - CreateSNSForAlert
            - !GetAtt SNSForAlert.Outputs.SNSTopicArn
            - !Ref SNSForAlertArn
          Id: SNSForAlert
  AlarmEventsForSSMConfigurationCompliance:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-events
        SemanticVersion: 2.0.69
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        CustomAlarmName: !Ref AWS::StackName
        SNSTopicArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
        EventsRuleName: !Ref EventBridgeForSSMConfigurationCompliance
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  EventBridgeForSSMMaintenanceWindow:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for Systems Manager Maintenance Window created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.ssm
        detail-type: 
          - Maintenance Window Target Registration Notification
        detail:
          status:
            - CANCELLED 
            - CANCELLING 
            - FAILED 
            - SKIPPED_OVERLAPPING 
            - TIMED_OUT
      Name: SystemsManagerMaintenanceWindow
      State: ENABLED
      Targets:
        - Arn: !If
            - CreateSNSForAlert
            - !GetAtt SNSForAlert.Outputs.SNSTopicArn
            - !Ref SNSForAlertArn
          Id: SNSForAlert
  AlarmEventsForSSMMaintenanceWindow:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-events
        SemanticVersion: 2.0.69
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        CustomAlarmName: !Ref AWS::StackName
        SNSTopicArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
        EventsRuleName: !Ref EventBridgeForSSMMaintenanceWindow
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  EventBridgeForSSMParameterStore:
    Type: AWS::Events::Rule
    Properties: 
      Description: !Sub Rule for Systems Manager Parameter Store created by ${AWS::StackName}.
      EventPattern:
        source:
          - aws.ssm
        detail-type: 
          - Parameter Store Change
      Name: SystemsManagerParameterStore
      State: ENABLED
      Targets:
        - Arn: !If
            - CreateSNSForAlert
            - !GetAtt SNSForAlert.Outputs.SNSTopicArn
            - !Ref SNSForAlertArn
          Id: SNSForAlert
  AlarmEventsForSSMParameterStore:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-events
        SemanticVersion: 2.0.69
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        CustomAlarmName: !Ref AWS::StackName
        SNSTopicArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
        EventsRuleName: !Ref EventBridgeForSSMParameterStore
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  # CloudWatch Alarm for Systems Manager Run Command
  CloudWatchAlarmSSMCommand:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-ssm-command
        SemanticVersion: 2.0.69
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        CustomAlarmName: !Ref AWS::StackName
        SNSTopicArn: !If
            - CreateSNSForAlert
            - !GetAtt SNSForAlert.Outputs.SNSTopicArn
            - !Ref SNSForAlertArn
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue