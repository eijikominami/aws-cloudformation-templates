AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWSCloudFormationTemplates/security/microsoftad sets AWS Directory Service for Microsoft Active Directory.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: ' Microsoft Active Directory Configuration'
        Parameters: 
          - Edition
          - EnableSso
          - Name
          - Password
          - ShortName
          - SubnetPrivateCidrBlockForAz1
          - SubnetPrivateCidrBlockForAz2
          - VPCId
      - Label: 
          default: 'Notification Configuration'
        Parameters: 
          - SNSForAlertArn
          - SNSForDeploymentArn
      - Label: 
          default: 'Tag Configuration'
        Parameters:
          - Environment 
          - TagKey
          - TagValue

Parameters:
  Edition:
    Type: String
    Default: Standard
    AllowedValues:
      - Enterprise
      - Standard
    Description: The edition of AWS Directory Service for Microsoft Active Directory [required]
  EnableSso:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
    Description: Whether to enable single sign-on for a Microsoft Active Directory in AWS [required]
  Name:
    Type: String
    Default: corp.example.com
    AllowedPattern: ^([a-zA-Z0-9]+[\\.-])+([a-zA-Z0-9])+$
    Description: The fully qualified domain name for the AWS Managed Microsoft AD directory [required]
  Password:
    Type: String
    Default: Password1+
    AllowedPattern: (?=^.{8,64}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\s]))^.*
    NoEcho: true
    Description: The password for the default administrative user named Admin [required]
  ShortName:
    Type: String
    Default: CORP
    AllowedPattern: ^[^\\/:*?"<>|.]+[^\\/:*?"<>|]*$
    Description: The NetBIOS name for your domain [required]
  SubnetPrivateCidrBlockForAz1:
    Type: String
    Default: 10.1.0.64/26
    AllowedPattern: ^[0-9./]*$
    Description: The private subnet CIDR block at AZ1 [required]
  SubnetPrivateCidrBlockForAz2:
    Type: String
    Default: 10.1.1.64/26
    AllowedPattern: ^[0-9./]*$
    Description: The private subnet CIDR block at AZ2 [required]
  VPCId:
    Type: AWS::EC2::VPC::Id
    AllowedPattern: .+
    Description: The VPC id [required]
  SNSForAlertArn:
    Type: String
    Default: ''   
  SNSForDeploymentArn:
    Type: String
    Default: ''
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates
    AllowedPattern: .+

Conditions:
  CreateSNSForAlert: !Equals [ !Ref SNSForAlertArn, '']
  CreateSNSForDeployment: !Equals [ !Ref SNSForDeploymentArn, '']

Resources:
  # Nested Stack
  Az1:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/availability-zone
        SemanticVersion: 2.0.53
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        AvailabilityZone: !Select 
          - 0
          - Fn::GetAZs: !Ref 'AWS::Region'
        LogicalNamePrefix: !Ref AWS::StackName
        SubnetPrivateCidrBlock: !Ref SubnetPrivateCidrBlockForAz1
        SNSForAlertArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        SNSForDeploymentArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn   
        VPCId: !Ref VPCId
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  Az2:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/availability-zone
        SemanticVersion: 2.0.53
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        AvailabilityZone: !Select
          - 1
          - Fn::GetAZs: !Ref 'AWS::Region'
        LogicalNamePrefix: !Ref AWS::StackName
        SubnetPrivateCidrBlock: !Ref SubnetPrivateCidrBlockForAz2
        SNSForAlertArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        SNSForDeploymentArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn 
        VPCId: !Ref VPCId
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue 
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  SNSForAlert:
    Condition: CreateSNSForAlert
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.0.53
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        TopicName: !Sub Alert-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  SNSForDeployment:
    Condition: CreateSNSForDeployment
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.0.53
      Parameters:
        TopicName: !Sub Deployment-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  ActiveDirectory:
    Type: AWS::DirectoryService::MicrosoftAD
    Properties: 
      CreateAlias: true
      Edition: !Ref Edition
      EnableSso: !Ref EnableSso
      Name: !Ref Name
      Password: !Ref Password
      ShortName: !Ref ShortName
      VpcSettings: 
          SubnetIds: 
            - !GetAtt Az1.Outputs.PrivateSubnetId
            - !GetAtt Az2.Outputs.PrivateSubnetId
          VpcId: !Ref VPCId
