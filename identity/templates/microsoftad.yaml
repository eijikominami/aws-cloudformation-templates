AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWSCloudFormationTemplates/security/microsoftad sets AWS Directory Service for Microsoft Active Directory.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: ' Microsoft Active Directory Configuration'
        Parameters: 
          - Edition
          - EnableSso
          - Name
          - Password
          - RemoteDesktopGatewayEC2KeyName
          - RemoteDesktopGatewayWhitelistRules
          - ShortName
          - SubnetPublicCidrBlockForAz1
          - SubnetTransitCidrBlockAz1
          - SubnetPublicCidrBlockForAz2
          - SubnetTransitCidrBlockAz2
          - TransitGatewayId
          - TransitGatewayDestinationCidrBlock
          - VPCCidrBlock
      - Label: 
          default: 'Notification Configuration'
        Parameters: 
          - SNSForAlertArn
          - SNSForDeploymentArn
      - Label: 
          default: 'Tag Configuration'
        Parameters:
          - Environment 
          - TagKey
          - TagValue

Parameters:
  Edition:
    Type: String
    Default: Standard
    AllowedValues:
      - Enterprise
      - Standard
    Description: The edition of AWS Directory Service for Microsoft Active Directory [required]
  EnableSso:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
    Description: Whether to enable single sign-on for a Microsoft Active Directory in AWS [required]
  Name:
    Type: String
    Default: corp.example.com
    AllowedPattern: ^([a-zA-Z0-9]+[\\.-])+([a-zA-Z0-9])+$
    Description: The fully qualified domain name for the AWS Managed Microsoft AD directory [required]
  Password:
    Type: String
    Default: Password1+
    AllowedPattern: (?=^.{8,64}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\s]))^.*
    NoEcho: true
    Description: The password for the default administrative user named Admin [required]
  RemoteDesktopGatewayEC2KeyName:
    Type: String
    AllowedPattern: .+
    Description: The name of an existing EC2 KeyPair to enable SSH access to the instance [required]
  RemoteDesktopGatewayWhitelistRules:
    Type: String
    AllowedPattern: ^[0-9./]*$
    Default: 0.0.0.0/0
    Description: A list of one or more IPv4 CIDR addresses to allow (e.g. 0.0.0.0/0) [required]
  ShortName:
    Type: String
    Default: CORP
    AllowedPattern: ^[^\\/:*?"<>|.]+[^\\/:*?"<>|]*$
    Description: The NetBIOS name for your domain [required]
  SubnetPublicCidrBlockForAz1:
    Type: String
    Default: 10.0.0.0/24
    AllowedPattern: ^[0-9./]*$
    Description: The public subnet CIDR block at AZ1 [required]
  SubnetTransitCidrBlockAz1:
    Type: String
    Default: 10.0.4.0/24
    AllowedPattern: ^[0-9./]*$
    Description: The transit subnet CIDR block at AZ1 [required] 
  SubnetPublicCidrBlockForAz2:
    Type: String
    Default: 10.0.1.0/24
    AllowedPattern: ^[0-9./]*$
    Description: The public subnet CIDR block at AZ2 [required]
  SubnetTransitCidrBlockAz2:
    Type: String
    Default: 10.0.5.0/24
    AllowedPattern: ^[0-9./]*$
    Description: The transit subnet CIDR block at AZ2 [required]
  TransitGatewayId:
    Type: String
    Default: ''
    Description: The ID of a transit gateway
  TransitGatewayDestinationCidrBlock:
    Type: String
    Default: ''
    Description: The IPv4 CIDR block forward to TransitGateway
  VPCCidrBlock:
    Type: String
    Default: 10.0.0.0/21
    AllowedPattern: ^[0-9./]*$
    Description: The VPC CIDR block [required]
  SNSForAlertArn:
    Type: String
    Default: ''   
  SNSForDeploymentArn:
    Type: String
    Default: ''
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates
    AllowedPattern: .+

Conditions:
  CreateSNSForAlert: !Equals [ !Ref SNSForAlertArn, '']
  CreateSNSForDeployment: !Equals [ !Ref SNSForDeploymentArn, '']
  Development: !Equals [ !Ref Environment, development]

Resources:
  # Nested Stack
  RemoteDesktopGateway:
    DependsOn:
      - ActiveDirectory  
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        DomainAdminPassword: !Ref Password
        DomainNetBIOSName: !Ref ShortName
        DomainDNSName: !Ref Name
        DomainMemberSGID: !Ref SecurityGroupForRemoteDesktopGateway
        KeyPairName: !Ref RemoteDesktopGatewayEC2KeyName
        PublicSubnet1ID: !GetAtt Az1.Outputs.PublicSubnetId
        PublicSubnet2ID: !GetAtt Az2.Outputs.PublicSubnetId
        RDGWCIDR: !Ref RemoteDesktopGatewayWhitelistRules
        VPCID: !Ref VPC
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TemplateURL: https://aws-quickstart.s3.amazonaws.com/quickstart-microsoft-rdgateway/templates/rdgw-domain.template
  Az1:
    DependsOn:
      # NATGateway requires provisioned Internet Gateway.
      - InternetGatewayAttachment  
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        AvailabilityZone: !Select 
          - 0
          - Fn::GetAZs: !Ref 'AWS::Region'
        InternetGatewayId: !Ref InternetGateway
        LogicalNamePrefix: !Ref AWS::StackName
        SubnetPublicCidrBlock: !Ref SubnetPublicCidrBlockForAz1
        SubnetTransitCidrBlock: !Ref SubnetTransitCidrBlockAz1
        SNSForAlertArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        SNSForDeploymentArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn   
        TransitGatewayId: !Ref TransitGatewayId
        TransitGatewayDestinationCidrBlock: !Ref TransitGatewayDestinationCidrBlock
        VPCId: !Ref VPC
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/network/az.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/network/az.yaml
  Az2:
    DependsOn:
      # NATGateway requires provisioned Internet Gateway.
      - InternetGatewayAttachment  
    Type: AWS::CloudFormation::Stack
    Properties:
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        AvailabilityZone: !Select
          - 1
          - Fn::GetAZs: !Ref 'AWS::Region'
        InternetGatewayId: !Ref InternetGateway
        LogicalNamePrefix: !Ref AWS::StackName
        SubnetPublicCidrBlock: !Ref SubnetPublicCidrBlockForAz2
        SubnetTransitCidrBlock: !Ref SubnetTransitCidrBlockAz2
        SNSForAlertArn: !If
          - CreateSNSForAlert
          - !GetAtt SNSForAlert.Outputs.SNSTopicArn
          - !Ref SNSForAlertArn
        SNSForDeploymentArn: !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn 
        TransitGatewayId: !Ref TransitGatewayId
        TransitGatewayDestinationCidrBlock: !Ref TransitGatewayDestinationCidrBlock
        VPCId: !Ref VPC
        Environment: !Ref Environment
        TagKey: !Ref TagKey
        TagValue: !Ref TagValue 
      Tags:
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TemplateURL: !If
        - Development
        - https://s3.amazonaws.com/eijikominami-test/aws-cloudformation-templates/network/az.yaml
        - https://s3.amazonaws.com/eijikominami/aws-cloudformation-templates/network/az.yaml
  SNSForAlert:
    Condition: CreateSNSForAlert
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.0.49
      NotificationARNs:
        - !If
          - CreateSNSForDeployment
          - !GetAtt SNSForDeployment.Outputs.SNSTopicArn
          - !Ref SNSForDeploymentArn
      Parameters:
        TopicName: !Sub Alert-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  SNSForDeployment:
    Condition: CreateSNSForDeployment
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/sns-topic
        SemanticVersion: 2.0.49
      Parameters:
        TopicName: !Sub Deployment-createdby-${AWS::StackName}
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags:
        - Key: Name
          Value: !Sub igw-${AWS::StackName}-${AWS::Region}
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  SecurityGroupForRemoteDesktopGateway:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      # 'sg-' prefix is NOT permitted.
      GroupName: !Sub sgp-${AWS::StackName}-${AWS::Region}-web
      GroupDescription: Security Group for Remote Desktop Gateway
      SecurityGroupIngress:
        - CidrIp: !Ref RemoteDesktopGatewayWhitelistRules
          Description: rdp
          FromPort: 3389
          ToPort: 3389
          IpProtocol: TCP
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: 0
          ToPort: 0
          IpProtocol: '-1'
      Tags:
        - Key: Name
          Value: !Sub sgp-${AWS::StackName}-${AWS::Region}
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      VpcId: !Ref VPC
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VPCCidrBlock
      Tags:
        - Key: Name
          Value: !Sub vpc-${AWS::StackName}-${AWS::Region}
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
  ActiveDirectory:
    Type: AWS::DirectoryService::MicrosoftAD
    Properties: 
      CreateAlias: true
      Edition: !Ref Edition
      EnableSso: !Ref EnableSso
      Name: !Ref Name
      Password: !Ref Password
      ShortName: !Ref ShortName
      VpcSettings: 
          SubnetIds: 
            - !GetAtt Az1.Outputs.PublicSubnetId
            - !GetAtt Az2.Outputs.PublicSubnetId
          VpcId: !Ref VPC

Outputs:
  RemoteDesktopGatewayUrl:
    Description: ELB DNS name to connect to RDP Gateway.
    Value: !GetAtt RemoteDesktopGateway.Outputs.RDPURL
  RemoteDesktopGatewaySecurityGroupId:
    Description: Remote Desktop Gateway security group ID.
    Value: !GetAtt RemoteDesktopGateway.Outputs.RemoteDesktopGatewaySGID
