AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWSCloudFormationTemplates/web-servers/ecs-targetgroup creates Application Load Balancer target groups for Amazon ECS.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups: 
      - Label: 
          default: 'Load Balancer Configuration'
        Parameters: 
          - AppPort
          - LoadBalancerFullName
          - LoadBalancerListenerArn
          - VPCId
      - Label: 
          default: 'Tag Configuration'
        Parameters:
          - Environment
          - LogicalName
          - TagKey
          - TagValue

Parameters:
  AppPort:
    Type: Number
    Default: 8080
    Description: The port on which the container is listening [required]
  LoadBalancerFullName:
    Type: String
    AllowedPattern: .+
    Description: The full name of the Load Balancer [required]
  LoadBalancerListenerArn:
    Type: String
    AllowedPattern: .+
    Description: The ARN of the Load Balancer Listener [required]
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: VPC Id [required]
  LogicalName:
    Type: String
    Default: WebServers
    AllowedPattern: .+
    Description: The custom prefix name [required]
  SNSForAlertArn:
    Type: String
    AllowedPattern: .+
    Description: The Amazon SNS topic ARN for alert [required]
  SNSForDeploymentArn:
    Type: String
    AllowedPattern: .+
    Description: The Amazon SNS topic ARN for deployment information [required]
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-templates
    AllowedPattern: .+

Resources: 
  LoadBalancerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      Matcher:
        HttpCode: 200-302
      Name: !Sub target-${LogicalName}
      Port: !Ref AppPort
      Protocol: HTTP
      Tags:
        - Key: Name
          Value: !Sub target-${LogicalName}-${AWS::Region}
        - Key: environment
          Value: !Ref Environment
        - Key: !Ref TagKey
          Value: !Ref TagValue
      TargetType: ip
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 30
      UnhealthyThresholdCount: 3
      VpcId: !Ref VPCId
  LoadBalancerListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions: 
        - TargetGroupArn: !Ref LoadBalancerTargetGroup
          Type: forward
      Conditions: 
        - Field: path-pattern
          Values: 
            - "/"
            - "/hello/*"
            - "hello*"
      ListenerArn: !Ref LoadBalancerListenerArn
      Priority: 65 
  CloudWatchAlarmALB:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-application-elb
        SemanticVersion: 2.2.2
      NotificationARNs: 
        - !Ref SNSForDeploymentArn
      Parameters:
        CustomAlarmName: !Ref AWS::StackName
        LoadBalancer: !Ref LoadBalancerFullName
        SNSTopicArn: !Ref SNSForAlertArn
        TargetGroup: !GetAtt LoadBalancerTargetGroup.TargetGroupFullName
      Tags:
        environment: !Ref Environment
        createdby: !Ref TagValue

Outputs:
  TargetGroupArn:
    Description: The ARN of the target group
    Value: !Ref LoadBalancerTargetGroup
  TargetGroupName:
    Description: The name of the target group
    Value: !GetAtt LoadBalancerTargetGroup.TargetGroupName
    